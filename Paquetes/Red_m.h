//
// Generated file, do not edit! Created by nedtool 5.2 from Red.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __RED_M_H
#define __RED_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Red.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet Red
 * {
 *     unsigned short srcAddr;
 *     unsigned short dstAddr;
 *     unsigned int ttl;
 * }
 * </pre>
 */
class Red : public ::omnetpp::cPacket
{
  protected:
    unsigned short srcAddr;
    unsigned short dstAddr;
    unsigned int ttl;

  private:
    void copy(const Red& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Red&);

  public:
    Red(const char *name=nullptr, short kind=0);
    Red(const Red& other);
    virtual ~Red();
    Red& operator=(const Red& other);
    virtual Red *dup() const override {return new Red(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned short getSrcAddr() const;
    virtual void setSrcAddr(unsigned short srcAddr);
    virtual unsigned short getDstAddr() const;
    virtual void setDstAddr(unsigned short dstAddr);
    virtual unsigned int getTtl() const;
    virtual void setTtl(unsigned int ttl);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Red& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Red& obj) {obj.parsimUnpack(b);}


#endif // ifndef __RED_M_H

