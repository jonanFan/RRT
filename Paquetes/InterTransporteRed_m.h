//
// Generated file, do not edit! Created by nedtool 5.2 from Paquetes/InterTransporteRed.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __INTERTRANSPORTERED_M_H
#define __INTERTRANSPORTERED_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Paquetes/InterTransporteRed.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet InterTransporteRed
 * {
 *     unsigned int origen;
 *     unsigned int destino;
 *     unsigned int packetType;
 *     simtime_t delay;
 *     unsigned int datarate;
 * }
 * </pre>
 */
class InterTransporteRed : public ::omnetpp::cPacket
{
  protected:
    unsigned int origen;
    unsigned int destino;
    unsigned int packetType;
    ::omnetpp::simtime_t delay;
    unsigned int datarate;

  private:
    void copy(const InterTransporteRed& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const InterTransporteRed&);

  public:
    InterTransporteRed(const char *name=nullptr, short kind=0);
    InterTransporteRed(const InterTransporteRed& other);
    virtual ~InterTransporteRed();
    InterTransporteRed& operator=(const InterTransporteRed& other);
    virtual InterTransporteRed *dup() const override {return new InterTransporteRed(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getOrigen() const;
    virtual void setOrigen(unsigned int origen);
    virtual unsigned int getDestino() const;
    virtual void setDestino(unsigned int destino);
    virtual unsigned int getPacketType() const;
    virtual void setPacketType(unsigned int packetType);
    virtual ::omnetpp::simtime_t getDelay() const;
    virtual void setDelay(::omnetpp::simtime_t delay);
    virtual unsigned int getDatarate() const;
    virtual void setDatarate(unsigned int datarate);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const InterTransporteRed& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, InterTransporteRed& obj) {obj.parsimUnpack(b);}


#endif // ifndef __INTERTRANSPORTERED_M_H

