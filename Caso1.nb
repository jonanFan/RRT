(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    652949,      11920]
NotebookOptionsPosition[    648452,      11781]
NotebookOutlinePosition[    648795,      11796]
CellTagsIndexPosition[    648752,      11793]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["CASO 1", "Title",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.717781861480919*^9, 3.717781870809601*^9}, 
   3.717782241143796*^9}],

Cell["Parte primera", "Subtitle",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.7177820966216717`*^9, 3.7177821165404806`*^9}},
 FontSize->36],

Cell[TextData[StyleBox["1. Desarrollar un sistema generador de \
n\[UAcute]meros aleatorios basado en un generador lineal congruencial mixto \
que siga una distribuci\[OAcute]n uniforme entre[0, 1].",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.717803699056679*^9, 3.7178037221296167`*^9}},
 FontSize->18],

Cell[BoxData[
 RowBox[{"<<", " ", 
  "\"\<D:\\Users\\jontx\\Dropbox\\Clase\\2 Master\\RRT\\Caso \
1\\RandomData.m\>\""}]], "Input",
 CellChangeTimes->{{3.718681389181735*^9, 3.718681412392194*^9}, {
  3.7216543297884007`*^9, 3.7216543645156465`*^9}}],

Cell[TextData[StyleBox["El siguiente comando permite ver cuales son las \
funciones que incluye el fichero RandomData.m ",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7177817771904383`*^9, 3.7177818525934734`*^9}, 
   3.717781933050892*^9, 3.7186815626586113`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RandomData`*"}]], "Input",
 CellChangeTimes->{{3.717781639732585*^9, 3.717781654382894*^9}}],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["RandomData`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["RandomData`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["RandomData",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23721657977-3692455", {"RandomData", "RandomData`"}},
          ButtonNote->"RandomData`"], 
         ButtonBox["RandomExp",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23721657977-3692455", {"RandomExp", "RandomData`"}},
          ButtonNote->"RandomData`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.475]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{3.7216543776186237`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["La librer\[IAcute]a que nos proporciona Armando \
dispone de una funci\[OAcute]n RandomData que no es mas que un generador de n\
\[UAcute]meros aleatorios que sigue una distribuci\[OAcute]n uniforme entre 0 \
y 1.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7177817771904383`*^9, 3.7177818525934734`*^9}, 
   3.717781933050892*^9, {3.717803755997554*^9, 3.717803828433263*^9}, {
   3.7178038590446444`*^9, 3.7178038600958424`*^9}, 3.717842113048561*^9, {
   3.717842175962338*^9, 3.7178421823544526`*^9}}],

Cell[TextData[StyleBox["2. Probar el generador y demostrar mediante un \
histograma la bondad del generador.",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.7178038966876335`*^9, 3.7178039101859646`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"muestras", "=", "10000"}], ";"}]], "Input",
 CellChangeTimes->{{3.7178039738634863`*^9, 3.717803979733061*^9}, 
   3.7178041667068214`*^9, 3.717805000688423*^9, 3.7178051055185504`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"listaUni", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomData", "[", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "muestras"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.717803935745575*^9, 3.7178039721822195`*^9}, {
  3.7178047927046843`*^9, 3.7178047934199224`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"listaUni", ",", " ", "20", ",", " ", "\"\<PDF\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.717803989805215*^9, 3.71780406749117*^9}, {
  3.717804172285325*^9, 3.7178041726704626`*^9}, {3.717804284758608*^9, 
  3.7178043018567047`*^9}, {3.7178047976170654`*^9, 3.7178047979795017`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5459999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5459999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, 
           NCache[{0.05, 
             Rational[133, 125]}, {0.05, 1.064}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{24.28921568627451, 
          41.13725490196079}, {-97.81874221744008, 92.03272931283504}}],
        StatusArea[#, 1.064]& ,
        TagBoxNote->"1.064"],
       StyleBox["1.064`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.064, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.05, 0}, 
           NCache[{0.1, 
             Rational[487, 500]}, {0.1, 0.974}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{40.63725490196079, 
          57.48529411764706}, {-81.80217037747317, 92.03272931283504}}],
        StatusArea[#, 0.974]& ,
        TagBoxNote->"0.974"],
       StyleBox["0.974`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.974, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.1, 0}, 
           NCache[{0.15, 
             Rational[269, 250]}, {0.15, 1.076}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{56.98529411764706, 
          73.83333333333333}, {-99.95428512943565, 92.03272931283504}}],
        StatusArea[#, 1.076]& ,
        TagBoxNote->"1.076"],
       StyleBox["1.076`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.076, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.15, 0}, 
           NCache[{0.2, 
             Rational[231, 250]}, {0.2, 0.924}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{73.33333333333333, 
          90.18137254901961}, {-72.90407491082493, 92.03272931283504}}],
        StatusArea[#, 0.924]& ,
        TagBoxNote->"0.924"],
       StyleBox["0.924`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.924, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.2, 0}, 
           NCache[{0.25, 
             Rational[253, 250]}, {0.25, 1.012}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{89.68137254901961, 
          106.52941176470588`}, {-88.56472293212585, 92.03272931283504}}],
        StatusArea[#, 1.012]& ,
        TagBoxNote->"1.012"],
       StyleBox["1.012`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.012, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.25, 0}, 
           NCache[{0.3, 
             Rational[473, 500]}, {0.3, 0.946}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{106.02941176470588`, 
          122.87745098039215`}, {-76.81923691615015, 92.03272931283504}}],
        StatusArea[#, 0.946]& ,
        TagBoxNote->"0.946"],
       StyleBox["0.946`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.946, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.3, 0}, 
           NCache[{0.35, 
             Rational[253, 250]}, {0.35, 1.012}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{122.37745098039215`, 
          139.22549019607843`}, {-88.56472293212585, 92.03272931283504}}],
        StatusArea[#, 1.012]& ,
        TagBoxNote->"1.012"],
       StyleBox["1.012`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.012, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.35, 0}, 
           NCache[{0.4, 
             Rational[121, 125]}, {0.4, 0.968}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{138.72549019607843`, 
          155.5735294117647}, {-80.73439892147539, 92.03272931283504}}],
        StatusArea[#, 0.968]& ,
        TagBoxNote->"0.968"],
       StyleBox["0.968`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.968, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.4, 0}, 
           NCache[{0.45, 
             Rational[119, 125]}, {0.45, 0.952}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{155.0735294117647, 
          171.92156862745097`}, {-77.88700837214793, 92.03272931283504}}],
        StatusArea[#, 0.952]& ,
        TagBoxNote->"0.952"],
       StyleBox["0.952`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.952, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.45, 0}, 
           NCache[{0.5, 
             Rational[423, 500]}, {0.5, 0.846}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{171.42156862745097`, 
          188.26960784313724`}, {-59.0230459828536, 92.03272931283504}}],
        StatusArea[#, 0.846]& ,
        TagBoxNote->"0.846"],
       StyleBox["0.846`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.846, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, 
           NCache[{0.55, 
             Rational[523, 500]}, {0.55, 1.046}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{187.76960784313724`, 
          204.61764705882354`}, {-94.61542784944669, 92.03272931283504}}],
        StatusArea[#, 1.046]& ,
        TagBoxNote->"1.046"],
       StyleBox["1.046`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.046, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.55, 0}, 
           NCache[{0.6, 
             Rational[247, 250]}, {0.6, 0.988}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{204.11764705882354`, 
          220.96568627450978`}, {-84.2936371081347, 92.03272931283504}}],
        StatusArea[#, 0.988]& ,
        TagBoxNote->"0.988"],
       StyleBox["0.988`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.988, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.6, 0}, 
           NCache[{0.65, 
             Rational[509, 500]}, {0.65, 1.018}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{220.46568627450978`, 
          237.31372549019608`}, {-89.63249438812366, 92.03272931283504}}],
        StatusArea[#, 1.018]& ,
        TagBoxNote->"1.018"],
       StyleBox["1.018`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.018, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.65, 0}, 
           NCache[{0.7, 
             Rational[273, 250]}, {0.7, 1.092}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{236.81372549019608`, 
          253.66176470588232`}, {-102.8016756787631, 92.03272931283504}}],
        StatusArea[#, 1.092]& ,
        TagBoxNote->"1.092"],
       StyleBox["1.092`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.092, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.7, 0}, 
           NCache[{0.75, 
             Rational[239, 250]}, {0.75, 0.956}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{253.16176470588232`, 
          270.0098039215686}, {-78.59885600947979, 92.03272931283504}}],
        StatusArea[#, 0.956]& ,
        TagBoxNote->"0.956"],
       StyleBox["0.956`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.956, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.75, 0}, 
           NCache[{0.8, 
             Rational[507, 500]}, {0.8, 1.014}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{269.5098039215686, 
          286.3578431372549}, {-88.9206467507918, 92.03272931283504}}],
        StatusArea[#, 1.014]& ,
        TagBoxNote->"1.014"],
       StyleBox["1.014`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.014, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.8, 0}, 
           NCache[{0.85, 
             Rational[467, 500]}, {0.85, 0.934}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{285.8578431372549, 
          302.70588235294116`}, {-74.68369400415457, 92.03272931283504}}],
        StatusArea[#, 0.934]& ,
        TagBoxNote->"0.934"],
       StyleBox["0.934`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.934, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.85, 0}, 
           NCache[{0.9, 
             Rational[11, 10]}, {0.9, 1.1}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{302.20588235294116`, 
          319.05392156862746`}, {-104.22537095342682`, 92.03272931283504}}],
        StatusArea[#, 1.1]& ,
        TagBoxNote->"1.1"],
       StyleBox["1.1`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.9, 0}, 
           NCache[{0.95, 
             Rational[537, 500]}, {0.95, 1.074}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{318.55392156862746`, 
          335.4019607843137}, {-99.59836131076972, 92.03272931283504}}],
        StatusArea[#, 1.074]& ,
        TagBoxNote->"1.074"],
       StyleBox["1.074`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.074, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.95, 0}, 
           NCache[{1., 
             Rational[251, 250]}, {1., 1.004}], "RoundingRadius" -> 0]},
         ImageSizeCache->{{334.9019607843137, 351.75}, {-87.14102765746213, 
          92.03272931283504}}],
        StatusArea[#, 1.004]& ,
        TagBoxNote->"1.004"],
       StyleBox["1.004`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.004, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.02, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.717804029039589*^9, 3.7178040680381136`*^9}, {
   3.7178041630405855`*^9, 3.717804173170558*^9}, {3.7178042875423207`*^9, 
   3.7178043024351945`*^9}, 3.7178048894309125`*^9, 3.7178050086893806`*^9, 
   3.7178051113904476`*^9, 3.7178089781458273`*^9, 3.7178090214051285`*^9, 
   3.7178093035182886`*^9, 3.7178143988671784`*^9, 3.717828489115691*^9, 
   3.7178292594615374`*^9, 3.717830527721478*^9, 3.7178306166062384`*^9, 
   3.7178308034920793`*^9, 3.717830835104828*^9, 3.7178385940237164`*^9, 
   3.7178468141862555`*^9, 3.7186812508124666`*^9, 3.718681436091591*^9, 
   3.7186815044998007`*^9, 3.7186815797479105`*^9, 3.7216542935282645`*^9, 
   3.72165437830614*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Disponer de una distribuci\[OAcute]n uniforme entre 0 \
y 1 quiere decir que todos los valores generados son igual de probables, y \
que la funci\[OAcute]n de densidad de probabilidad del generador debe ser \
constante en el intervalo [0,1] con valor 1/(1-0)=1 y 0 en el resto de \
intervalos. Como vemos, el resultado obtenido con el generador que nos \
proporciona la librer\[IAcute]a RandomData.m se aproxima bastante a esta \
definici\[OAcute]n te\[OAcute]rica.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7177817771904383`*^9, 3.7177818525934734`*^9}, 
   3.717781933050892*^9, {3.717804196186384*^9, 3.7178042290063763`*^9}, {
   3.7178043822594147`*^9, 3.717804515975824*^9}, {3.717804558715139*^9, 
   3.7178046196763687`*^9}, {3.7178421860903225`*^9, 3.7178421862934523`*^9}}],

Cell[TextData[StyleBox["3. Implementar el m\[EAcute]todo de transformada \
inversa para obtener una distribuci\[OAcute]n aleatoria exponencial de tiempo \
entre llegadas 1/\[Lambda].Representar en un histograma los valores \
obtenidos.",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.717804650939085*^9, 3.717804659496234*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lamda", "=", "80"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ro", "=", 
   RowBox[{"lamda", "/", "mu"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listaExp", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RandomExp", "[", "lamda", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "muestras"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Histogram", "[", 
    RowBox[{"listaExp", ",", " ", "100", ",", " ", "\"\<PDF\>\""}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"listaExp", ",", " ", "100", ",", " ", "\"\<PDF\>\""}], "]"}], 
   ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"lamda", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "lamda"}], "*", "t"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.05"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7178046949719505`*^9, 3.7178048707015905`*^9}, {
  3.7178049055640087`*^9, 3.717804934890047*^9}, {3.717804984394082*^9, 
  3.7178050355671196`*^9}, {3.71780508302044*^9, 3.717805131288766*^9}, {
  3.717805219266032*^9, 3.717805225435353*^9}, {3.717805274803236*^9, 
  3.7178052857842236`*^9}, {3.7178089578608537`*^9, 3.717808958491727*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.308], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.308], Thickness[Small]}], 
      RectangleBox[{0., 0}, NCache[{0.001, Rational[383, 5]}, {0.001, 76.6}],
       RoundingRadius->0], 
      RectangleBox[{0.001, 0}, 
       NCache[{0.002, Rational[358, 5]}, {0.002, 71.6}],
       RoundingRadius->0], 
      RectangleBox[{0.002, 0}, 
       NCache[{0.003, Rational[339, 5]}, {0.003, 67.8}],
       RoundingRadius->0], 
      RectangleBox[{0.003, 0}, 
       NCache[{0.004, Rational[593, 10]}, {0.004, 59.3}],
       RoundingRadius->0], 
      RectangleBox[{0.004, 0}, 
       NCache[{0.005, Rational[567, 10]}, {0.005, 56.7}],
       RoundingRadius->0], 
      RectangleBox[{0.005, 0}, 
       NCache[{0.006, Rational[259, 5]}, {0.006, 51.8}],
       RoundingRadius->0], RectangleBox[{0.006, 0}, {0.007, 44},
       RoundingRadius->0], 
      RectangleBox[{0.007, 0}, NCache[{0.008, Rational[87, 2]}, {0.008, 43.5}],
       RoundingRadius->0], 
      RectangleBox[{0.008, 0}, 
       NCache[{0.009, Rational[193, 5]}, {0.009, 38.6}],
       RoundingRadius->0], 
      RectangleBox[{0.009, 0}, NCache[{0.01, Rational[357, 10]}, {0.01, 35.7}],
       RoundingRadius->0], 
      RectangleBox[{0.01, 0}, NCache[{0.011, Rational[167, 5]}, {0.011, 33.4}],
       RoundingRadius->0], 
      RectangleBox[{0.011, 0}, NCache[{0.012, Rational[65, 2]}, {0.012, 32.5}],
       RoundingRadius->0], 
      RectangleBox[{0.012, 0}, NCache[{0.013, Rational[61, 2]}, {0.013, 30.5}],
       RoundingRadius->0], 
      RectangleBox[{0.013, 0}, 
       NCache[{0.014, Rational[283, 10]}, {0.014, 28.3}],
       RoundingRadius->0], 
      RectangleBox[{0.014, 0}, 
       NCache[{0.015, Rational[259, 10]}, {0.015, 25.9}],
       RoundingRadius->0], 
      RectangleBox[{0.015, 0}, 
       NCache[{0.016, Rational[114, 5]}, {0.016, 22.8}],
       RoundingRadius->0], 
      RectangleBox[{0.016, 0}, 
       NCache[{0.017, Rational[203, 10]}, {0.017, 20.3}],
       RoundingRadius->0], 
      RectangleBox[{0.017, 0}, 
       NCache[{0.018, Rational[207, 10]}, {0.018, 20.7}],
       RoundingRadius->0], 
      RectangleBox[{0.018, 0}, 
       NCache[{0.019, Rational[177, 10]}, {0.019, 17.7}],
       RoundingRadius->0], 
      RectangleBox[{0.019, 0}, NCache[{0.02, Rational[181, 10]}, {0.02, 18.1}],
       RoundingRadius->0], 
      RectangleBox[{0.02, 0}, NCache[{0.021, Rational[66, 5]}, {0.021, 13.2}],
       RoundingRadius->0], 
      RectangleBox[{0.021, 0}, NCache[{0.022, Rational[71, 5]}, {0.022, 14.2}],
       RoundingRadius->0], 
      RectangleBox[{0.022, 0}, NCache[{0.023, Rational[27, 2]}, {0.023, 13.5}],
       RoundingRadius->0], 
      RectangleBox[{0.023, 0}, NCache[{0.024, Rational[66, 5]}, {0.024, 13.2}],
       RoundingRadius->0], 
      RectangleBox[{0.024, 0}, NCache[{0.025, Rational[57, 5]}, {0.025, 11.4}],
       RoundingRadius->0], 
      RectangleBox[{0.025, 0}, NCache[{0.026, Rational[52, 5]}, {0.026, 10.4}],
       RoundingRadius->0], 
      RectangleBox[{0.026, 0}, 
       NCache[{0.027, Rational[103, 10]}, {0.027, 10.3}],
       RoundingRadius->0], 
      RectangleBox[{0.027, 0}, NCache[{0.028, Rational[39, 5]}, {0.028, 7.8}],
       RoundingRadius->0], 
      RectangleBox[{0.028, 0}, NCache[{0.029, Rational[83, 10]}, {0.029, 8.3}],
       RoundingRadius->0], 
      RectangleBox[{0.029, 0}, NCache[{0.03, Rational[38, 5]}, {0.03, 7.6}],
       RoundingRadius->0], 
      RectangleBox[{0.03, 0}, NCache[{0.031, Rational[81, 10]}, {0.031, 8.1}],
       RoundingRadius->0], 
      RectangleBox[{0.031, 0}, NCache[{0.032, Rational[15, 2]}, {0.032, 7.5}],
       RoundingRadius->0], 
      RectangleBox[{0.032, 0}, NCache[{0.033, Rational[69, 10]}, {0.033, 6.9}],
       RoundingRadius->0], 
      RectangleBox[{0.033, 0}, NCache[{0.034, Rational[53, 10]}, {0.034, 5.3}],
       RoundingRadius->0], 
      RectangleBox[{0.034, 0}, NCache[{0.035, Rational[47, 10]}, {0.035, 4.7}],
       RoundingRadius->0], 
      RectangleBox[{0.035, 0}, NCache[{0.036, Rational[27, 5]}, {0.036, 5.4}],
       RoundingRadius->0], RectangleBox[{0.036, 0}, {0.037, 5},
       RoundingRadius->0], 
      RectangleBox[{0.037, 0}, NCache[{0.038, Rational[26, 5]}, {0.038, 5.2}],
       RoundingRadius->0], RectangleBox[{0.038, 0}, {0.039, 4},
       RoundingRadius->0], 
      RectangleBox[{0.039, 0}, NCache[{0.04, Rational[19, 5]}, {0.04, 3.8}],
       RoundingRadius->0], 
      RectangleBox[{0.04, 0}, NCache[{0.041, Rational[17, 5]}, {0.041, 3.4}],
       RoundingRadius->0], 
      RectangleBox[{0.041, 0}, NCache[{0.042, Rational[31, 10]}, {0.042, 3.1}],
       RoundingRadius->0], 
      RectangleBox[{0.042, 0}, NCache[{0.043, Rational[21, 10]}, {0.043, 2.1}],
       RoundingRadius->0], 
      RectangleBox[{0.043, 0}, NCache[{0.044, Rational[23, 10]}, {0.044, 2.3}],
       RoundingRadius->0], 
      RectangleBox[{0.044, 0}, NCache[{0.045, Rational[29, 10]}, {0.045, 2.9}],
       RoundingRadius->0], 
      RectangleBox[{0.045, 0}, NCache[{0.046, Rational[13, 5]}, {0.046, 2.6}],
       RoundingRadius->0], 
      RectangleBox[{0.046, 0}, NCache[{0.047, Rational[9, 5]}, {0.047, 1.8}],
       RoundingRadius->0], 
      RectangleBox[{0.047, 0}, NCache[{0.048, Rational[7, 5]}, {0.048, 1.4}],
       RoundingRadius->0], 
      RectangleBox[{0.048, 0}, NCache[{0.049, Rational[7, 5]}, {0.049, 1.4}],
       RoundingRadius->0], 
      RectangleBox[{0.049, 0}, NCache[{0.05, Rational[9, 5]}, {0.05, 1.8}],
       RoundingRadius->0], 
      RectangleBox[{0.05, 0}, NCache[{0.051, Rational[4, 5]}, {0.051, 0.8}],
       RoundingRadius->0], 
      RectangleBox[{0.051, 0}, NCache[{0.052, Rational[7, 5]}, {0.052, 1.4}],
       RoundingRadius->0], 
      RectangleBox[{0.052, 0}, NCache[{0.053, Rational[9, 10]}, {0.053, 0.9}],
       RoundingRadius->0], 
      RectangleBox[{0.053, 0}, NCache[{0.054, Rational[7, 5]}, {0.054, 1.4}],
       RoundingRadius->0], 
      RectangleBox[{0.054, 0}, NCache[{0.055, Rational[3, 10]}, {0.055, 0.3}],
       RoundingRadius->0], 
      RectangleBox[{0.055, 0}, NCache[{0.056, Rational[7, 10]}, {0.056, 0.7}],
       RoundingRadius->0], 
      RectangleBox[{0.056, 0}, NCache[{0.057, Rational[4, 5]}, {0.057, 0.8}],
       RoundingRadius->0], 
      RectangleBox[{0.057, 0}, NCache[{0.058, Rational[7, 10]}, {0.058, 0.7}],
       RoundingRadius->0], 
      RectangleBox[{0.058, 0}, NCache[{0.059, Rational[7, 10]}, {0.059, 0.7}],
       RoundingRadius->0], 
      RectangleBox[{0.059, 0}, NCache[{0.06, Rational[2, 5]}, {0.06, 0.4}],
       RoundingRadius->0], 
      RectangleBox[{0.06, 0}, NCache[{0.061, Rational[7, 10]}, {0.061, 0.7}],
       RoundingRadius->0], 
      RectangleBox[{0.061, 0}, NCache[{0.062, Rational[1, 5]}, {0.062, 0.2}],
       RoundingRadius->0], 
      RectangleBox[{0.062, 0}, NCache[{0.063, Rational[1, 10]}, {0.063, 0.1}],
       RoundingRadius->0], 
      RectangleBox[{0.063, 0}, NCache[{0.064, Rational[1, 2]}, {0.064, 0.5}],
       RoundingRadius->0], 
      RectangleBox[{0.064, 0}, NCache[{0.065, Rational[1, 5]}, {0.065, 0.2}],
       RoundingRadius->0], 
      RectangleBox[{0.065, 0}, NCache[{0.066, Rational[1, 10]}, {0.066, 0.1}],
       RoundingRadius->0], 
      RectangleBox[{0.066, 0}, NCache[{0.067, Rational[1, 5]}, {0.067, 0.2}],
       RoundingRadius->0], 
      RectangleBox[{0.067, 0}, NCache[{0.068, Rational[2, 5]}, {0.068, 0.4}],
       RoundingRadius->0], 
      RectangleBox[{0.068, 0}, NCache[{0.069, Rational[3, 10]}, {0.069, 0.3}],
       RoundingRadius->0], 
      RectangleBox[{0.069, 0}, NCache[{0.07, Rational[1, 10]}, {0.07, 0.1}],
       RoundingRadius->0], 
      RectangleBox[{0.07, 0}, NCache[{0.071, Rational[1, 2]}, {0.071, 0.5}],
       RoundingRadius->0], 
      RectangleBox[{0.071, 0}, NCache[{0.072, Rational[1, 5]}, {0.072, 0.2}],
       RoundingRadius->0], 
      RectangleBox[{0.072, 0}, NCache[{0.073, Rational[1, 10]}, {0.073, 0.1}],
       RoundingRadius->0], 
      RectangleBox[{0.073, 0}, NCache[{0.074, Rational[1, 2]}, {0.074, 0.5}],
       RoundingRadius->0], 
      RectangleBox[{0.074, 0}, NCache[{0.075, Rational[3, 10]}, {0.075, 0.3}],
       RoundingRadius->0], 
      RectangleBox[{0.075, 0}, NCache[{0.076, Rational[1, 5]}, {0.076, 0.2}],
       RoundingRadius->0], 
      RectangleBox[{0.076, 0}, NCache[{0.077, Rational[1, 5]}, {0.077, 0.2}],
       RoundingRadius->0], 
      RectangleBox[{0.077, 0}, NCache[{0.078, Rational[1, 5]}, {0.078, 0.2}],
       RoundingRadius->0], 
      RectangleBox[{0.078, 0}, NCache[{0.079, Rational[1, 5]}, {0.079, 0.2}],
       RoundingRadius->0], 
      RectangleBox[{0.079, 0}, NCache[{0.08, Rational[1, 10]}, {0.08, 0.1}],
       RoundingRadius->0], 
      RectangleBox[{0.08, 0}, NCache[{0.081, Rational[3, 10]}, {0.081, 0.3}],
       RoundingRadius->0], 
      RectangleBox[{0.082, 0}, NCache[{0.083, Rational[3, 10]}, {0.083, 0.3}],
       RoundingRadius->0], 
      RectangleBox[{0.083, 0}, NCache[{0.084, Rational[1, 10]}, {0.084, 0.1}],
       RoundingRadius->0], 
      RectangleBox[{0.084, 0}, NCache[{0.085, Rational[3, 10]}, {0.085, 0.3}],
       RoundingRadius->0], 
      RectangleBox[{0.085, 0}, NCache[{0.086, Rational[3, 10]}, {0.086, 0.3}],
       RoundingRadius->0], 
      RectangleBox[{0.086, 0}, NCache[{0.087, Rational[1, 10]}, {0.087, 0.1}],
       RoundingRadius->0], 
      RectangleBox[{0.087, 0}, NCache[{0.088, Rational[1, 10]}, {0.088, 0.1}],
       RoundingRadius->0], 
      RectangleBox[{0.088, 0}, NCache[{0.089, Rational[1, 10]}, {0.089, 0.1}],
       RoundingRadius->0], 
      RectangleBox[{0.089, 0}, NCache[{0.09, Rational[1, 10]}, {0.09, 0.1}],
       RoundingRadius->0], 
      RectangleBox[{0.09, 0}, NCache[{0.091, Rational[2, 5]}, {0.091, 0.4}],
       RoundingRadius->0], 
      RectangleBox[{0.092, 0}, NCache[{0.093, Rational[1, 10]}, {0.093, 0.1}],
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVkH8803kcxzHj0kgziTiJEytyNO7ivD8KJw7LiugHV7erTmZqNvGYLZVI
ZZz8aDT5/TV1SpqrrnQrncfjln5r8zPnR60LzY/Zkd364/V4/fN8PF7Px8th
X3IU3UBPTy9cl89dpfydJTu93J/QJRzWamko+yti63XSpH/bVtFom4aGiH6c
2nySHrTM4t4cnaKhnY8wu0ySObD6OXcmRmloniCNTSWtBnP+w4VFGQ3JfutS
M0keEL2CY51RTkPe+q86GCQE40zf4yObaEjpGns1iUSFD3RS2Y/cKJTEfhF+
7n4CuLZ04NfOU1G8af4z/MhBKBp6mrJ0byS6YhA61JXMhFLe0vhVhuGoPc71
Y5OUBf1GaQXLGkORwJRoLJSlgbFJokVYTQhKLe/2tHbnwrDRX3cPi4LRhNtl
E9IffBhbzinzkgUiA99dWse7WSBy9Auk+G1Bq2/itBnKk1Bi2P8+WRyAyvs9
sno/ZoPmQaq2MwqhXaLmBPxEDnTc2dn1eqM/cnr8ZSjbKg/WHJ4ZkEh9UVjj
csmEzTng1Rc0kxq/Rdxplfu1rfmgMZeeX1Pgg44lWhy3kwhgYShmnaSJgva1
JDeN3iwA8WiiyoywEVE9t/TR/i6EnHbf0ymJnuiDsTwyqOtXaBVberngv0b5
pNFHirEieNjsu24DbEC0pPKk7fMX4PxzzxOet9ajDlvLHVELxeD85lQsO5+M
/HH4zdPEUqA8VbV70F0QHUmYNlZloMeTRZ7NcUZXOokypxUXoQ27+670tROa
zx1xf04Wgn64655MF0c0V5n+DO9WDvHYXPPADQf033h2Rm9gBdwf3DH4MmA1
ssv1iyqJuQRG75myzaN2aPLYjV9exYjgpF8Jk1+3Cg0/2fag17sS0vjkhNmf
rZGLgMwStFWCvXI/FZdmhbgz3Ztu+lyGfmmXN11iibbPIsOr9y8DZvlp4dCs
BTqxJm/8wOYqeP/9DkIgi4g2KgU9U7IqYBhZ+p9VmaPv+jjvAqjVkE6/QW0L
X4Zi2F5mBk+qwZ61tkI4TUBTjY2UorgaYEwSpEeFJmjMBJf5tqcGps4fP8Qq
/gLtMbLqNDtYC2S3AOXBQiM0XK8l13+sBXld4LSq3RBJWZ1X9I/UAa7EO6TC
A4ec+iK83D/VgTbrADuvUh/1MVvltrx6yNubdY0foofqGieLuYv1kCNeKac7
LIKKNxbdnNMAkxkXZlKvzUMx/55P7RIMohlxfopSDcTLHZeMLMXApvrc4958
Dbh45iiczDAwfrskdyhbA7f+oXJriBi8y2IcUbM0MBA89Gf1Kgzejk2pg7fp
eFN8RJUbBhRCUXeGiQZul4X+JNqGwYNudiiFNwcnVVcpAzQMnMkBjy6y5yAi
zMLYPhqDFdrirTjGHAwu9GCX4nR7PXVxfbvnwDAhaaJiPwZNComgdZOOdxak
l6di8AIUCTOzarDiTYf1cjCw/+G55My4Gga7d9rZpmMQxMnFOY6q4UiuQ7sw
EwMuwyh190s1lPx7HS88jcFKx5BqVYsaEoKsuhW5GAjk60+IxGogX8posDmr
+0N8JjKyWg13IgPDLgowkPOLMUmhGk41NNgqCjEI7vGhMM+oIULfdNz6AgZ2
i99g67J0PnEp92JLdHx6kaHymM7n+ktBWRkGt/2DgsUpavgfHlJICA==
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.00106, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 0.053}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7178049064115887`*^9, 3.717804935506466*^9}, 
   3.717804994106845*^9, {3.7178050250392427`*^9, 3.717805045077158*^9}, {
   3.7178050851517744`*^9, 3.7178051192247458`*^9}, 3.717805226267798*^9, {
   3.7178052774493*^9, 3.7178052870358443`*^9}, 3.7178089782929726`*^9, 
   3.7178090215265417`*^9, 3.7178093036651816`*^9, 3.717814399012294*^9, 
   3.717828489256317*^9, 3.717829259602164*^9, 3.7178306167468643`*^9, 
   3.7178308036483293`*^9, 3.717830835231179*^9, 3.717838594164342*^9, 
   3.7178468143268843`*^9, 3.718681251390808*^9, 3.718681436233206*^9, 
   3.718681504651457*^9, 3.71868157990107*^9, 3.7216542937157764`*^9, 
   3.72165437846239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Mean", "[", "listaExp", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "/", "lamda"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.7178054997155504`*^9, 3.717805505532712*^9}, {
  3.717842261941617*^9, 3.7178422678650255`*^9}}],

Cell[BoxData["0.012531618926820042`"], "Output",
 CellChangeTimes->{
  3.7178055061015277`*^9, 3.717808978308598*^9, 3.7178090215421786`*^9, 
   3.717809303687207*^9, 3.7178143990303073`*^9, 3.7178284896469564`*^9, 
   3.7178292596177893`*^9, 3.717830616762481*^9, 3.7178308036639566`*^9, 
   3.7178308352624197`*^9, 3.717838594179969*^9, {3.717842264177453*^9, 
   3.7178422683494077`*^9}, 3.7178468143425074`*^9, 3.7186812514048185`*^9, 
   3.718681436575656*^9, 3.718681504993722*^9, 3.718681580265361*^9, 
   3.721654293981403*^9, 3.721654378478017*^9}],

Cell[BoxData["0.0125`"], "Output",
 CellChangeTimes->{
  3.7178055061015277`*^9, 3.717808978308598*^9, 3.7178090215421786`*^9, 
   3.717809303687207*^9, 3.7178143990303073`*^9, 3.7178284896469564`*^9, 
   3.7178292596177893`*^9, 3.717830616762481*^9, 3.7178308036639566`*^9, 
   3.7178308352624197`*^9, 3.717838594179969*^9, {3.717842264177453*^9, 
   3.7178422683494077`*^9}, 3.7178468143425074`*^9, 3.7186812514048185`*^9, 
   3.718681436575656*^9, 3.718681504993722*^9, 3.718681580265361*^9, 
   3.721654293981403*^9, 3.721654378478017*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Como vemos, la funci\[OAcute]n de densidad de probabilidad \
obtenida a partir de los valores generados mediante la funci\[OAcute]n \
RandomExp se acerca bastante a la funci\[OAcute]n de densidad de probabilidad \
de una distribuci\[OAcute]n exponencial. As\[IAcute] mismo, mencionar que la \
media de los valores obtenidos se aproxima a 1/\[Lambda], que era lo que se \
esperaba conseguir.\n\nDestacar que cuantos m\[AAcute]s valores se utilicen \
para calcular la densidad de probabilidad de cada una de las distribuciones, \
el resultado m\[AAcute]s se parecer\[AAcute] al te\[OAcute]rico.",
  FontColor->RGBColor[1, 0.5, 0]],
 "\n"
}], "Text",
 CellChangeTimes->{{3.717805676491375*^9, 3.7178057619360523`*^9}, {
  3.717805819779224*^9, 3.7178058457178717`*^9}, {3.717842220801794*^9, 
  3.7178422363232636`*^9}}],

Cell[CellGroupData[{

Cell["Parte segunda", "Subtitle",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.7177821539147153`*^9, 3.717782177581334*^9}},
 FontSize->36],

Cell[TextData[StyleBox["4. Desarrollar un simulador de una cola M/M/1 con \
tasa \[Lambda] de llegadas y \[Mu] de servicio.Representar en un diagrama que \
evolucione en el tiempo el n\[UAcute]mero de usuarios en el sistema",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.7178058661137*^9, 3.717805871698594*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lamda", "=", "80"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ro", "=", 
   RowBox[{"lamda", "/", "mu"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muestras", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InterArrivalsTime", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomExp", "[", "lamda", "]"}], ",", "muestras"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7178058892954454`*^9, 3.717805981800579*^9}, {
   3.717808917636239*^9, 3.7178089371277437`*^9}, 3.7186814873324537`*^9}],

Cell[TextData[StyleBox["Las llegadas de la cola M/M/1 forman un proceso \
poissoniano. Es decir, las llegadas forman un proceso estoc\[AAcute]stico \
cuya particularidad es que el tiempo entre llegadas es independiente del \
resto de tiempos entre llegadas, y adem\[AAcute]s, estos siguen una \
distribuci\[OAcute]n exponencial. Por tanto, al generar valores aleatorios \
mediante la funci\[OAcute]n RandomExp lo que realmente estamos generando no \
es m\[AAcute]s que una lista que contiene la diferencia de tiempos entre una \
llegada y la anterior. Para conseguir los tiempos de llegada absolutos, que \
realmente es lo que nos interesa, se han de sumar en cada instante de tiempo \
todos los tiempos entre llegadas hasta ese momento.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.717806962342062*^9, 3.717806967670767*^9}, 
   3.7178071756598244`*^9, {3.717842303792614*^9, 3.717842314592619*^9}, {
   3.717842347978136*^9, 3.717842357545025*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ArrivalsTime", "=", 
   RowBox[{"Accumulate", "[", "InterArrivalsTime", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7178069791166325`*^9, 3.7178069913902035`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ServTime", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomExp", "[", "mu", "]"}], ",", " ", "muestras"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7178070124383783`*^9, 3.7178070316563234`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FifoSchedulling", "[", 
   RowBox[{"arrivals_", ",", "service_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "checkTime"}], "}"}], ",", 
    RowBox[{
     RowBox[{"n", "=", "1"}], ";", 
     RowBox[{"checkTime", "=", 
      RowBox[{"arrivals", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"checkTime", "\[GreaterEqual]", "#"}], ",", 
           RowBox[{"checkTime", "+=", 
            RowBox[{"service", "[", 
             RowBox[{"[", 
              RowBox[{"n", "++"}], "]"}], "]"}]}], ",", 
           RowBox[{"checkTime", "=", 
            RowBox[{"#", "+", 
             RowBox[{"service", "[", 
              RowBox[{"[", 
               RowBox[{"n", "++"}], "]"}], "]"}]}]}]}], "]"}], ")"}], "&"}], 
       ",", "arrivals"}], "]"}]}]}], "]"}]}]], "Input"],

Cell[TextData[StyleBox["La funci\[OAcute]n FifoSchedulling permite calcular \
el tiempo en el que salen cada uno de los paquetes. A la funci\[OAcute]n se \
le pasan los tiempos de llegada de los paquetes y el tiempo que tardan en \
servirse. Despu\[EAcute]s, a trav\[EAcute]s de la variable checkTime se va \
calculando el tiempo en el que sale cada uno de los paquetes. En cada iteraci\
\[OAcute]n se compara si la cola esta libre o no. Si la cola se encontraba \
libre, la variable checkTime toma el valor de la suma del instante en el que \
se ha dado la llegada y el tiempo que se tarda en servir dicha llegada. Por \
el contrario, si se encontraba ocupada, el paquete de la iteraci\[OAcute]n en \
la que nos encontramos se comenzar\[AAcute] a servir tras acabar de servir el \
que ya se encontraba en la cola. Es decir, el paquete saldr\[AAcute] en el \
instante checkTime+tiempo de servir la nueva llegada.\n",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.717808111464958*^9, 3.7178081156959996`*^9}, {
   3.7178084743264713`*^9, 3.7178085050513053`*^9}, {3.717840882147572*^9, 
   3.717840888596274*^9}, 3.7178423810539308`*^9, 3.717843017218696*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Departu", "=", 
   RowBox[{"FifoSchedulling", "[", 
    RowBox[{"ArrivalsTime", ",", " ", "ServTime"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.717808512781766*^9, 3.717808539204115*^9}, {
  3.7178088849944572`*^9, 3.71780889746339*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListStepPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ArrivalsTime", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "5"}], "]"}], "]"}], ",", " ", 
     RowBox[{"Departu", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "5"}], "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Usuarios", ",", " ", "Tiempo"}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Arrivals\>\"", ",", "\"\<Departures\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7178085552748137`*^9, 3.717808620660082*^9}, {
  3.717808886880165*^9, 3.7178089029793077`*^9}, {3.717808991158019*^9, 
  3.717809028074363*^9}, {3.7178094138411384`*^9, 3.7178094243300796`*^9}, {
  3.7178129308764057`*^9, 3.717812951145214*^9}, {3.7178129981087675`*^9, 
  3.7178130014116597`*^9}, {3.7186827693601694`*^9, 3.718682769985693*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.03148737156310803}, {1.9999999999999778`, 
         0.03148737156310803}, {2., 0.051826102915903186`}, {
         2.999999999999978, 0.051826102915903186`}, {3., 
         0.08020695345181386}, {3.999999999999978, 0.08020695345181386}, {4., 
         0.08465244165513662}, {4.999999999999978, 0.08465244165513662}, {5., 
         0.1252390009035798}, {6., 0.1252390009035798}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.03424760243448311}, {1.9999999999999778`, 
         0.03424760243448311}, {2., 0.07481806020412733}, {2.999999999999978, 
         0.07481806020412733}, {3., 0.08285292784345057}, {3.999999999999978, 
         0.08285292784345057}, {4., 0.0999043319202927}, {4.999999999999978, 
         0.0999043319202927}, {5., 0.13943628266886707`}, {6., 
         0.13943628266886707`}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 6.}, {0, 0.13943628266886707`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["Usuarios", TraditionalForm], 
       FormBox["Tiempo", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 6.}, {0, 0.13943628266886707`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Arrivals\"", "\"Departures\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7178090286587734`*^9, 3.7178093042135224`*^9, 3.717809425130314*^9, {
   3.7178129341575155`*^9, 3.7178129520038376`*^9}, 3.7178130037592263`*^9, 
   3.7178143995386677`*^9, 3.7178284897875843`*^9, 3.717829260100786*^9, 
   3.717830617246871*^9, 3.7178308041563587`*^9, 3.7178308357155523`*^9, 
   3.717838594664362*^9, 3.7178468144518843`*^9, 3.7186812516434803`*^9, 
   3.7186814366897945`*^9, 3.7186815051986537`*^9, 3.718681580469553*^9, 
   3.718682771298391*^9, 3.721654294559533*^9, 3.721654379009261*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Tal y como se puede observar, la grafica anterior \
tiene los usuarios en el eje x y el tiempo en el eje y, sin embargo, a \
nosotros nos interesa mostrarlos al rev\[EAcute]s.Para darle la vuelta, \
creamos una funci\[OAcute]n que coja el array de tiempos y con cada uno de \
los elementos genere una lista de dos elementos, {tiempo, usuarios en ese \
instante}.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7178095538247547`*^9, 3.7178095574105234`*^9}, {
  3.7178133301018076`*^9, 3.717813335173857*^9}, {3.717843042593477*^9, 
  3.7178430473293295`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PointStair", "[", "array_", "]"}], ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"n", "++"}]}], "}"}], "&"}], ",", "array"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.717812483608227*^9, {3.7178125361122217`*^9, 3.717812584961454*^9}, {
   3.717812787063464*^9, 3.7178127875938425`*^9}, {3.7178303081817503`*^9, 
   3.717830308840649*^9}, {3.7178304875762596`*^9, 3.717830512811219*^9}, {
   3.7178305791508646`*^9, 3.717830593786089*^9}}],

Cell[TextData[StyleBox["Las siguientes dos graficas muestran, a lo largo del \
tiempo, los eventos que se van dando tanto en las llegadas como en las \
salidas.Tal y como veremos a continuaci\[OAcute]n, cruzando la informaci\
\[OAcute]n de las dos l\[IAcute]neas representadas en las graficas se puede \
obtener el tiempo de espera que ha sufrido cada uno de los usuarios en el \
sistema. Concretamente, dicho tiempo de espera no es m\[AAcute]s que la \
diferencia de tiempos que existe entre cada una de las paralelas que se \
observan en las gr\[AAcute]ficas.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7178430835023956`*^9, 3.7178430870663977`*^9}, {
  3.7178434327745485`*^9, 3.7178434831101294`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListStepPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"PointStair", "[", "ArrivalsTime", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "5"}], "]"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"PointStair", "[", "Departu", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "5"}], "]"}], "]"}]}], "}"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Tiempo", ",", " ", "Usuarios"}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Arrivals\>\"", ",", "\"\<Departures\>\""}], "}"}]}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7178126206189337`*^9, 3.7178126812394133`*^9}, {
  3.717812720490924*^9, 3.717812812610944*^9}, {3.717812858277678*^9, 
  3.71781292572803*^9}, {3.717812992931239*^9, 3.717813020713741*^9}, {
  3.717813148765462*^9, 3.7178131584691906`*^9}, {3.717814139323988*^9, 
  3.7178141743239126`*^9}, {3.7186826891777277`*^9, 3.7186827055708523`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0.03148737156310803, 0.}, {0.05182610291588098, 0.}, {
         0.051826102915903186`, 1.}, {0.08020695345179166, 1.}, {
         0.08020695345181386, 2.}, {0.08465244165511442, 2.}, {
         0.08465244165513662, 3.}, {0.1252390009035576, 3.}, {
         0.1252390009035798, 4.}, {0.165825560152023, 4.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0.03424760243448311, 0.}, {0.07481806020410513, 0.}, {
         0.07481806020412733, 1.}, {0.08285292784342836, 1.}, {
         0.08285292784345057, 2.}, {0.0999043319202705, 2.}, {
         0.0999043319202927, 3.}, {0.13943628266884486`, 3.}, {
         0.13943628266886707`, 4.}, {0.17896823341744145`, 4.}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0.029182983096634075`, 0}, 
     PlotRange -> {{0.03148737156310803, 0.17896823341744145`}, {0, 4.}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["Tiempo", TraditionalForm], 
       FormBox["Usuarios", TraditionalForm]}, 
     AxesOrigin -> {0.029182983096634075`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.03148737156310803, 0.17896823341744145`}, {0, 4.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Arrivals\"", "\"Departures\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7178129013196917`*^9, 3.7178129262774343`*^9}, 
   3.7178133402011223`*^9, 3.7178143996047153`*^9, 3.7178284898500752`*^9, 
   3.717829260163287*^9, 3.717830312654278*^9, {3.717830597434431*^9, 
   3.717830617293747*^9}, 3.717830804234474*^9, 3.7178308357780623`*^9, 
   3.717838594711237*^9, 3.7178468148269024`*^9, 3.718681251791915*^9, 
   3.718681436725834*^9, 3.7186815052647142`*^9, 3.7186815805216026`*^9, 
   3.7186827065377297`*^9, 3.7216543041858273`*^9, 3.721654379087387*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListStepPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"PointStair", "[", "ArrivalsTime", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"origin", ";;", 
          RowBox[{"origin", "+", "width"}]}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"PointStair", "[", "Departu", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"origin", ";;", 
          RowBox[{"origin", "+", "width"}]}], "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Tiempo", ",", " ", "Usuarios"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Arrivals\>\"", ",", "\"\<Departures\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"origin", ",", "1", ",", 
     RowBox[{"1000", "-", "width"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"width", ",", "10", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"muestras", "-", "origin"}], ">", " ", "0"}], ",", " ", 
       RowBox[{"muestras", "-", "origin"}], ",", " ", "10"}], "]"}], ",", 
     "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7178135015650067`*^9, 3.717813506308833*^9}, {
   3.717813589395922*^9, 3.7178136316930733`*^9}, {3.7178141917232423`*^9, 
   3.717814207720352*^9}, 3.7178146612103057`*^9, {3.7178286991978364`*^9, 
   3.7178287002462015`*^9}, 3.717829054757778*^9, {3.7178293226071863`*^9, 
   3.717829324980715*^9}, {3.7178294434863515`*^9, 3.717829469113104*^9}, {
   3.7178295011157103`*^9, 3.7178295292836065`*^9}, {3.7186827200476623`*^9, 
   3.7186827205145655`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`origin$$ = 1, $CellContext`width$$ = 10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{
      Hold[$CellContext`origin$$], 1, 
      Dynamic[1000 - $CellContext`width$$], 1}, {
      Hold[$CellContext`width$$], 10, 
      Dynamic[
       If[$CellContext`muestras - $CellContext`origin$$ > 
        0, $CellContext`muestras - $CellContext`origin$$, 10]], 1}}, 
    Typeset`size$$ = {469., {107., 111.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`origin$1478$$ = 0, $CellContext`width$1483$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`origin$$ = 1, $CellContext`width$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`origin$$, $CellContext`origin$1478$$, 0], 
        Hold[$CellContext`width$$, $CellContext`width$1483$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListStepPlot[{
         Part[
          $CellContext`PointStair[$CellContext`ArrivalsTime], 
          
          Span[$CellContext`origin$$, $CellContext`origin$$ + \
$CellContext`width$$]], 
         Part[
          $CellContext`PointStair[$CellContext`Departu], 
          
          Span[$CellContext`origin$$, $CellContext`origin$$ + \
$CellContext`width$$]]}, 
        AxesLabel -> {$CellContext`Tiempo, $CellContext`Usuarios}, 
        PlotLegends -> {"Arrivals", "Departures"}], 
      "Specifications" :> {{$CellContext`origin$$, 1, 
         Dynamic[1000 - $CellContext`width$$], 1}, {$CellContext`width$$, 10, 
         Dynamic[
          
          If[$CellContext`muestras - $CellContext`origin$$ > 
           0, $CellContext`muestras - $CellContext`origin$$, 10]], 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{520., {167., 173.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7178135072878504`*^9, 3.717813593929216*^9, 3.7178136331906834`*^9, 
   3.717814399645745*^9, 3.7178146636816254`*^9, 3.7178284898657*^9, 
   3.717828607129836*^9, 3.7178286631142883`*^9, 3.7178287038160295`*^9, 
   3.7178287542538853`*^9, 3.7178292601959543`*^9, 3.717829327431879*^9, 
   3.717829387036461*^9, {3.7178294493386154`*^9, 3.717829470810343*^9}, 
   3.7178295305169683`*^9, 3.7178303162744055`*^9, {3.7178306015968723`*^9, 
   3.717830617340624*^9}, 3.717830804281349*^9, 3.717830835871803*^9, 
   3.717838594758114*^9, 3.717846815247628*^9, 3.718681252301704*^9, 
   3.71868143674585*^9, 3.71868150528872*^9, 3.7186815805426188`*^9, 
   3.718682721703613*^9, 3.721654304909972*^9, 3.721654379118638*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CreateEventList", "[", 
    RowBox[{"list_", ",", " ", "value_"}], "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", "value"}], "}"}], " ", "&"}], ",", " ", "list"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.717829589229244*^9, 3.7178296437930956`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NumUsers", "[", "list_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", "0"}], ",", 
      RowBox[{"lastTime", "=", "0"}]}], "}"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lastTime", ",", "n"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lastTime", "=", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}], ",", 
               RowBox[{"n", "++"}], ",", 
               RowBox[{"n", "--"}]}], "]"}]}], "}"}]}], "}"}], "&"}], ",", 
        "list"}], "]"}], ",", "1"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.717829794366662*^9, 3.717829852419528*^9}, {
  3.7178299378997035`*^9, 3.7178299409519243`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ArrivalsEvent", "=", 
   RowBox[{"CreateEventList", "[", 
    RowBox[{"ArrivalsTime", ",", " ", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DepartureEvent", "=", 
   RowBox[{"CreateEventList", "[", 
    RowBox[{"Departu", ",", " ", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListaEventos", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"ArrivalsEvent", ",", " ", "DepartureEvent"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"usuarios", "=", 
   RowBox[{"NumUsers", "[", "ListaEventos", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7178296508567247`*^9, 3.7178297879400463`*^9}, {
   3.7178298616306477`*^9, 3.7178299049989433`*^9}, 3.717829960021055*^9}],

Cell[TextData[StyleBox["Esta grafica muestra la evoluci\[OAcute]n en el \
tiempo de los usuarios del sistema.Como vemos, con los par\[AAcute]metros \
establecidos, en un mismo instante de tiempos hemos llegado a tener un n\
\[UAcute]mero m\[AAcute]ximo de 18 usuarios.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7178436911712475`*^9, 3.717843699361888*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"usuarios", ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Tiempo", ",", " ", "Usuarios"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717829974072139*^9, 3.717829981726307*^9}, {
  3.7178435593362007`*^9, 3.7178435812187815`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
m9PFzCt3N7v/j/8fGIKYFQ==
      "]], LineBox[CompressedData["
1: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
yIyCXfKHWe1HFqi9a2VkwnFkkbqKy6vyTiJL1DM3qyTkFLJM/5ZeeNj0LLKK
HvZKf/0HWqaXKgPd1lnIEll82/dDcxlZppK9Pyun30SWaF8Ii+5yC1mmtvcr
5l8tRJbI5+Tpv9H3kGXq4edZ6vcEWUWORQXPPj1FVpP9zdTq4mJkFT3rrG11
9A2yTBE+9+L5e2SJPm+b5deqDFkkt6Y37RdCC3T47Nc/Db8gi7Tv0ugHRhxZ
oC2zTl/dWYPM6OSp692CdfSBufJMzkocrofMqM8Wg4IoI2SuVN+Nt08zQWZs
ebVpt7fdkLnSdN+8yb36IDNm/rZp5F4XZK4E2RxbljgJmZHV+d9aWh7IXLHr
VDR2EDSjxb86xDnNQOaK2RGdQ34zkRnrn/6t2Yh5yPX3u+lQ2C9oxsYXHD3T
PxCZK+Hleu4ngpEZe/15zC79MGSuHA8f/KJtODKjzb5ZyuiVyAK1W7e+T+Za
ZEYzNG9/T9uKzBWbmoiWfgnIjJVX9i3TbEfmiqqt879Ve5Drj2+1q28cR+bK
gOmNo9efQGb0d/z4h4ZZyFyx7n9yTDV0fd6d1+dM7lVkruzwqjntkI3M2Mbq
jUsuaquAueIT9H1s+0bIjH6MW/NnUhNkrjg2TqCX0Iy1OJ9zPb0NMlfI5aLy
qS0yo+Rj7wK+QwuUJnnrdJaQRWpYYjg+tB2yROn72k/4ZIEsUvthC19E90UW
yCP3Vnl8f2SRqvYdZTMHIgt02r/Fp282yIxG7nGYlz8YmSsX+aG4Sjtkxr4s
O31E2wGZK5uvzDwzwRmZsRU1zfaFzkDmyl2Lu8uG+SIztvLLjBnWK5Dr58uT
dF4Nzdj6PluOrkpEru+3fu+L0k5CZqzf2YUHP0FzpeWWjsdytyMzWvj09piI
HchcOSo5f0mBZjRp6KS/mw4g1z9vr7LxsYeQGTlcuRpRfAJZoJdDQoeWn0QW
6cKTy8nDTyMLdNdtlrZyFlmkh32Opja4iSzRmJMtDdvfQpYpKD7bw/4+sorM
L+8x61CELFPsndKIlOfIEtlwea7tW2SZvBvtyzArRZZoyNaER/c/IosUaqd7
x/wbskRTx84oL6xBFmmJY/31apElelN4zTbxD7JID/YEWz/7iyyQo9ws8Xgd
skhm1prB0wUDYIkKclKvWLZEFunUiwMupXrIEj24MXBpihpZppbPDhjOtECW
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
pSz+//1/PuJybg==
      "]], LineBox[CompressedData["
1:eJx11mtQVAUYBuBFTQMdM1vktrR49nA8HA47XGbkUuqrxEiYDewoKskoJCuJ
qbkUSE4CgxlqKJKCeYu8tigohUZMgBdETFfFNLmpdCFGQgVJUAGj/vTr/Wa+
eef59f15f3wT41eaEoZpNJruof033zpwZcTj7EBo/htfpIypsj6jNmL4oe4o
3SZmFavmFDXkbGFWkBZR99O0PGYVqcJky4R8ZiO8avTzO/Ywq5h/6U62/15m
Iy7bcuPfpVbRH+4Wf5HaiAelrq+Y9jH7onmkrar9K2Yj5j9p78r8mlnFzls/
bK04wGzEktacudsPMqvIMGsLkr5hNiL4+chtH1iZVey2vLHWo4hZwakiXWfK
UWYV/mFhu24eY1bgEx20oZFahsWhNnhcMbME+7qCMpcSZhl9U70rhePMEjzH
hHdNp5ZxZ3aRfdAJZgm3PRfcKy5lllEmf+R291tmCQEdEYt6yphFrD36tGFx
ObOEzV6hz7wrmEU42G3TG6kFlE+Z1BlDLSKssWTFFmoJ16JiT9yvYpYxN/Cy
b3I1s4KDi3u6Dp9hVpHo+fu8vrPMChpPjh6rr2GWseYz88M6agUvd8QkHTnP
LKMxOdX6ei2zglbfG7dmUss4ZRjx6Fwds4TmwdV/DFxkFmEVzz45c4lZQJfW
a8FGG7MH3B6meEtXmAVkLN2e8epVZhF11r5w43VmCbFPG/qXUYu4JG5w0/zM
LOHotU8PuVKL+GXZGPOBW8wCQmLezDS0MHtgwHq9P4Jah7z4X+viqJ2xJj/u
49N3mbWYUZvsPfM3ZmdUGgJ6PduYddhV2LQiktoZBUuPF8ZS6yCstYs332N2
RkV9+LRcah0mX6g0ze5g9sD6L8wBbX8xC8hKt1SFdjJ7IK3c572u+8wCimdM
L736gFmEzi4xxLWLWcKoH+2q+6llVKiKdkI3s4JPNJMi6qllfDl7R2oDtYJJ
DsEb6nuYVWTPvDkh6W9mBS0B7+zI62VWEZn/Ym/YU2YFUSubB2ZRyzi/u2xW
9wCzhOyx2vb3B5lFoK0kWqcJIpYQ05c2ZxW1CJPNPDhlOLOAZIPLjURqER8u
35q1bgSzgBb3XZtNLzCLKPFz1DdSC4jwtw0es2cWUd2gnejuwCzh8e3IqWlj
mUV875QbMvolZgklpS3R+vHMMjaNCwyRqIfutQ7b850js4wHtrebW5yYh/5t
h3G3XV2YZaw+mWMeqWOW0BuodXKklnHhTuWNYmoJZYuTDAvdmWWY+mss1dQS
ru/sbs/UM8v4/Lj5zx4Ds4L1jjGlsZ7MMhKdetoWycwS9hXq8hu9mEWUawbO
mhRmCaea9u3P82GWsTvniN85agkd9qO8nP2YRcRFGIpa/JklHLasWx4ewDzU
Ny/vDCmQWYFheOTppiBmGeMd511ODGFW0O4SujGdWkVCk7VzP7UR6QlLFt6n
VlGg6vfGvMZsRMcjIez5VGZfVEdXWrLwv/8BOGiy4w==
      "]], LineBox[CompressedData["
1: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
hlPWbX0eMqvKuqLQo1fymIXIH78wZfQTZlUJ+U837By1QMNJfs8KnjNL6BaQ
mRTxkllG9T+1l9ymlvAmfFKLn9Qydtz4PFx+xazBJv9hf25Ry0hs+Cmy+mtm
CR8PaKs5vGEWGP882q/oI7P5eUu5WxtfmQV8StRa+d+YzX3b9vCvwO/MQizd
9vZgvWJmVbn1X4Lz8hJmIWrdaDDhkWU7YlX5aDMs70N5ZiGubZ52/XAlZlU5
feZGtRBrZiEe2DTrmiAzq0rLlRGJ022YBe4UPfLzqcqsKnuOxi7NohYocdO8
mK9hllB3m+WWldWYBYLC7w7cQi0hPKhj8LXqzDLaLfyUl08tIUJ5ONVSyyzD
omK/zGfUGjwzBuR8o5YRqkvo6lCL2dyXupcv9KvLLGOlX/RcTwOzhIcV2hUk
GJllrFncs/S1hswShrZzmG1jYhb44hD0MbwRszmvRK65HkstxBPfKc+eOzCr
ypqLgd/bODIL7E271X5KM2ZVGW9z5NVLaiHCFVff5ObMqvI9bXRUz5bMAic+
Bz3JppZgX2qex4zWzAJwGJh0jVrC+FcWWTfaMMsYULln9E4XZgnR06tPeOvK
LLDz+5bHNdozq8rxxSHrtrkxC7R/fWukdUdm83rN/Fb/I7XA90vrf/h0YVYV
272pg8dRC3Gj37LJKb2YzXnt1rgQu97MAla/Ag6O6McsYUXS8WSrgcwyDnYY
evKYN7MGoy0qyYGDmGUcGPpp1U5qCafqzz7/ZzCzjNejUuPXDGWWYLT5FPqa
WuDbjTV1JH9mVUn1Onq5/QhmISYY1uaPHsOsKhvG+e+qGMBszluZkTdLBTJL
UEPzUmypZVRwzfMppNbgzJ99V86OZ9ZC3XC68g9qDdxTm/d0mMAsw33xf+fu
UGsQNs//6x9qLYZNVqZ3CmbWQJ5QdnCLEGYZp5JeXMil1qClRXFg3VBmGWi6
xH7XVGYJhUd8xt+mlnE8cGZE0nRmDeLmj8oqPYNZi9Wzb4/Imcmsw7wOHveH
zGXW40XK9qKW85h1KHn4a/a0+cx69Pu8om8KtQ4nTq3eeZdaD5+jNZIzFjLr
0OPlLP34RcxaHBoeXlRxMbM5L+xN+V6whFmLek/Pzai4lFmH0bvT1rWn1mKZ
0/0ql6g1yPVdHVpMrUUn15j9p5Yz67D21sX7P6OY9WjpunhQxgpmAxZmvuk9
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
tnA6mf1cWs1sj86bnKsNoLZFj1fO9z9Tm+DtO8J6zjpmW7RuvPvL/PXMJkw8
K5wWbmQ2omCl/ZS8TcwGlCqfNOLpZmYjNjcKtq8by2xAfpu8lKfxzEZMdL4y
fGwCswH+JQMqW2xjNsKl1Kt+d6kN2NTN5KPZzqyHn0va7e6JzAbEFCxqV7yL
2Yibfitql9rDbMJz37G1C6mNGHPN9CV8L7MJrXqPHV0vidmIdZ6bT6dRG7Bi
ad+2tfYzG7FLqtvi2UFmA6wtUNAghVmPWgX5jyZSG9D0zjP18iFmPUomt7EV
h5kNOH3t1pUJR5iNaHbuUOvf1Cacf9IqotEJZlu8/u3usPkUsz3iPdZ/aJLG
7IC9H59nXaduim5LHe/+onbC9ykz/fzSmZvid6MeB+TTzA4Y+2+29xvqpthZ
sPNYqwxmB2wetLFKq3PM9jCMX/1pMLUtIro8m97qPLMJX5QPvq2pbRH152RB
3wvMJqx+/ysfF5mN5r62ukC6xGzA3baBcSXU5rxXbUGRyxVmA+q3KWvcR21E
3g3HRg2uM5twdJBDvTU3mM15wyt7Us+bzCbEz7ap2/kOsy0WNHOqXSab2YST
WXvDhlPbovGHx5tr5DCbcGv3tsZt7zMb8afu6pjr1CZcdjy4cdQDZlvk9twr
1X3IbILLlnnLQqiNWDS/a/UVj5gN0JXtXd/xGbMerx08gt88Z9bhyW15aJMX
zHo8c/MftY1ahwTb12WrvmTW497crornK2YdOlapUno0tR7jjw5uvKmAWYfO
X5pViviPWY8f9jtmt33PrMOC/BpORz8xa7FmTnzqlEJmHQIWPno8g1qLE1YP
DXc/M+vwwLrH8/ZfmLVYWeTnk/GVWYPRCyudvP+dWcaR2ArHVv1g1qDgaFST
Or+YZfhvnJbVhVqDsYWTPGKKmGUEzJamG/8yS8gZVebjV2oZL5aOPfSLWsLD
votP9yphFuh7Izl41D9mCfXFZq+/pUAs48fXY05NLJg1eOI7/Ig7tYyi0jZd
TpZjltCn0cjfkiWzQGZ6Zn4vagmPH36ce49aRp9Du54WUEuwmdCn3tkKzAKa
rv/Fda7IrCoZF2pGp1IL0bhR4rIKVsyqYnh1Kj6UWoiDz8/W7GfNrCpyL1Oz
MpWZBY5bXisqkJlVJXjuub9LqzAL0UnV5ahVmVVF/3O8/ZHqzEKkHqo2ukct
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
XU6twfZ2kTE3qLWIOFRh3W1qDfYUb1fXnGfW4vSbqS7vqXUY+mqd9vJFZj1a
rfzS5je1AZuHGi/mXGI24r/zXk93ZjGbsODfGKnhVWYjLj77Zdmc2oCaWbHh
w68xGzHgUljmI2oTvlQq/G55ndmIw+ufp3pTG7DRud/8vzeYjVCWOlw23GU2
ITzEbnIotS2iJpVq43WP2YRBsyPzk6mNSJqmWf2G2oAGZ+fuqJPNbMSCuS80
idQGXMwfNqFTDrMeZf9Gzj9zn1mH9XdORj6j1sNymGhW+wGzAYcjz1j5UhvR
50nx54cPmQ0IPPpl5bJHzEYMrtax6zlqA1rE9W7TPJdZj7Crxfdq5jHr8OHX
iZfbqPU4nfV7cO8nzAYo28MG7n7KbER64rp5518wm+BuKlXj0ytm83oNT744
/jWzASd6RBu+UBvxd/DMr3YFzCZcb5ZYbt07ZiO6Z9Rsf5/ahO5zpj74QG2L
9KZdLBf9x2yPGUeDCy3eM9sisPHKceOpTdg2Yf+yEGojGiUs8Kn5idmAsAPJ
SxpT67E69+wiL2odvp57U+RNrUfdN01dd1LrUONMvZnHqLXw8vg3MUtl1qG5
vzriObX5eh9DOg/9wqzDr+UFpmxqPQ5cjQld9JXZgKVPfZ9spdYjP9W1zJQf
zAasSfCOSKQ2IrDtlpm/fzGbcGle4N+AP8xGbHX3mWhZxGxAmZ9pWzTUeiRN
3RrvSW1A8h/tk0xqPbpdDHnn8pdZh+PW9+3XFzPrMXr6uEMHqXXwTZgWOaGE
WY/z83dvSKM2IO3ujzPZ1HpEHV5uWesfsw6x//ZmTKXWY9GmFZ7VS7kR61Cc
75FZl1oLyzkv4m5bMOsQ/qHM7VxqPfa3z5rjV5pZh3N+q8sVlmHWwjhhz4aW
ZZk1+N0t4dubcswygvpZzmtnyazBQaPFyGnUMh7EDdkcLTFr8P7exfNyeWYZ
Tg4H4tZSSwizf3VnVUVmGSHfB5/aSG3uC9Z1cywrM2uRXWlkrcfUGtRJ7VY3
S2bWwmn67An9bJg12P/HQ/GllmFsGRiVSi3B3ydmyoIqzDK6Lm/4fGRVZgnX
IsdH/UctY0WOl1s7DbOEfrfHXi5fjVnGhclXPPpWZ9bg8cukJUOpZdyp5NFo
Sw1mDTD4nXZeLWYZTxfX7BZRm9nc91YlLXHTMcswTJjtFVyHWYOPEdn3p9dl
ljFyaaVDy6klXLU96ZFBLaPpUF2NHvWYNQhzHD+uTX1mLb6dTxxUrQGzDmt3
1K/8iloP18+tNj5qyGzuK6vHujUxMesxc9bTe+0bMeuwtWZBkb8dsx4e41/E
/7NnNmBF1qGzDo2Z9RhV0HH7Rmodns8sU7SPWo+miT4nHzgw6/D0RcbzGk2Y
tUg3qAVdHJl16OBX4jSLWov62gMt2jkxaxA0o9mzIGoZMfLuh4upJQw88tM5
hVpgTtazJKtmzBKS5Oe161MLvEp4t201tYSM3boP76gFJvVMX3KvObOEoftd
5rdrwSwwOf/p+6YtmVVlks29HwmtmYWYNamaeqENs6pE1St616wts4A+7s7M
7tQSFgV8vjzZhVlgyGdj7lNqCQnL2jgHtmMWqF8wMjfLlVlVxn5wUmLaMwux
f2LIusvUquJWOXNeWAdmgfDYj6GbqSXcGe+6dLPCLFCcVP3OQWoJx+L7JXxx
Y5YR/ahgRoeOzBJcf361XUktY9jdu41bdWLW4GW8249BnZm1eNPa2+0jtQ7X
M917enRh1uObrahRqSuzAasKfv/t7sGsx69lFRb1oNahprOxx9BuzFpctfbc
NJJagxEObWJeUWvR/p/9gPtezDpkOpzq9YNaD3nSsyzvnswGXHS8eqhyL2Y9
yvV4UkHbm9mADU2zOqykNuLG+rzU29QmfMoQxz9QG1Hr2q0Pw/swGzDINcgm
rC+zEfrZY8q06MdsQEav7L4J1Oa+fzPym64/swEDBmwK6ERtxMtLDTfupDag
zdTeQ79QG/Flr/F7mQHMJrxa0iktmNqIMjFpkYuoTXhQeeyDdQOZjeiuc19x
1pvZhLN1rA7tGsRsi/mHwpc8orbHp581Nck+zLZwrH3ys+LLbI8CdXbJEGpb
FM56M2UCtQn5i+ofCKI2Im7e12H3qA3QW714UmEwsxEnPk2e3pbahFYLbWzr
+TEbUW7n2dPzqA14ucPlsvNQZj32lfXYvYzaAJ9tvXrmDGPWw3Nxvz/dhzMb
4B7ibUim1uOc9HNB6RHMOtSocOyVYSSzHkucD95bTG3O21rbi8up9ejbRVvY
YjSzAaudO+2xHcNsxMwY95aDqU0wdJpa8x+1EZcDIwbuHstswoiPnp3fUhsx
QtPJ9IvahCVvKn55Eshsi9d/vIZVHc9sgmM3//8sJjIbYSoZ134WtQHj9+QV
7KY2YlhUsbGY2oQDnzd6D5vEbIQ6tZrOM4jZhD7NSj2xmcxsi9XNjlbcQG2C
ttjmR0EwsxElX546WIUwGxD3zL+5lloPi6bTV1qHMuvwKOFAD2dqPc6PnTrV
n9qACk+2NN05hdkIQ2Npt+tUZgOGN7y2MYzaiAlfiw9rpjGbUCpqQ5I3tREd
53yf32UmswkXc4M3RVAbcUbjXMVqFrMBpU6FLMikNqJFGUuPi2HMBljdEIF3
qY3Y0KrqRttwZhPGVFqdMpXaFoNGOP+cS21C0+c2AfHURrQvZ3N/O7UJMdOT
Yw9QGxF04rtNx9nMBuRMXhgcRa1H21axw/RzmHXYY33whUKtRan3Fc4NotbB
pWGlar7UWuiGdNs6cC6zDrnle8drIpi1eFmuUYsyC5g1GG9326obtYye2hKH
uguZJWTuSfJ4Qy2Q+TFzUr9FzBI8Woa1GE4t4+PBN7t2U2tw1evMnM/UWhh8
lwf8oNYBYdMyHy1m1mLfo2lZTZYw65DypOCyK7V5Xkfmr5iwlFmHHvvaujmt
ZNYjWj175AO1DvcrdX68PoZZj4Vvu888R63DoDYvpAermc3rrW11beBaZg0e
DZy+xHIjswykj+hbi1qDcDdt21hqGct+puzfTy3BO7N9m2fUAvM/WVq9ppZw
+/p/M3pvYpYxZeP4jQeoNdhZ09W64hZmLUauvFunUxyzDsktd97yjmfWYu3j
+CVbqXV4GalrcZdajwOtdp7xSmDW4bC15ZAwaj2Oefw7ZbmVWYf5VV61sabW
4uEa+4y225g1qBTd8WBvahlJJVZhp7cza9A4WHmh28Eso8n3Hbb3qTXo0tg3
xm4nsxbBrRJqSbuZdQhr8KHx+T3MWqyuF7PDsJdZh6BVvRtspdbiwJTjRdep
NWibs+zVnCRmGWP3l7F5TC3hxchxNkX7mAXyrXqc1+xnllDZrsm9zdQy+sZ3
jKuYzCzhqsv09G7UAou2aKssp1aV80Pbu0cfYBbicO/li/0OMqvKmvsLP0dR
C+Fl37f23JPMqvL1o+Z1q1PMAo0et0blNGZVid07pX4MtUCrzenBLunMEhrP
7L/XlVogsNvrBe+oVeVv/UrVp55hFvgyY6Vt1bPMquLslRCQRi3Eu1Jt/rXP
YFaVp05vdgyiFmJnXpTS/zyzqliVLSfnUAvhXez47M0FZlXplP8tJP4i8//+
XkTHq00vM6vKibI/uvaiFuKt69O1U7OYVcXlRi/3fdRCVPkZs6bLFWZVsfP7
7buGWuD3Lq8LKdQSup2bF9foBrOA/Zyb0XOpVeXqk0td51MLMeRhy5TT1Kry
p/2cCYE3mQVaR33c9otagkvRjhVlbzPLqOeaZ2+6w6zBL/+jLl2oZWTeuPkv
klqDTxN9v3ndZZYxNPH4h4X3mCXsu/KxtTGbWcadpvaD5lNrkNHnv9POOcwy
mtV/FbORWoOYtqVbnbnPrMXYrOYLblDrMHnIqfTLD5j16FTV7lnFh8wGjFh7
/EZNaiMsb9rfSn/EbMDFHrd+Nc5l1uPmonJr11EbIPa4726Qx2xEfoxY4Uxt
QGQ932s1HzPr0Sz2eu6pJ8w6FJkCZ12k1iOjXp+vu58x65BU+uy5k9TmvNAj
8HL358w6JN5Tr8ZRa5FTv+Vc/QtmHa6G5Y0rptbiaEvrjrVeMuuwt9Lid02o
9WjSoIvNOmoDrEo1eZxKrcemlD0Hr1LrsHzByCjpNbMWgSP9VtWj1uFOxETf
SGotUqxcb3i9YdZh066ov8uptbh06M0w8ZZZgwdnQ6v5U8uw7/Qw8Ai1hJjg
F2VzqWUE7713yK2AWQPN+Dfz8qm1SHo4WFP1HbMOLqktXy6h1iJDRp+X1Br4
PAhpV/gfs4yuTyvl6N4zm+ddn4EludQCd2J3b978gVnCp6MdGxRSy1jbwDv0
5idmCTvPfxod94VZxsR7ZertppZweXWwu8dXZoGbg6xKllNLmOH4OWMjtcDj
ESMX/qOWUGrU2KrXvzHLyN+QZir3nVnC/acXdJbUAtuzn8+sSK0qYyo7jW76
g1nggGuZvOHU5vfr/c4eXX8yy3gWeryi4TezhAt91k90/sMs4Nf7UExyEbOq
BIfNmfqeWojqV5a/yy1mVpXurfYfdS9hFiKs35JZ06lVpZ9th/GXqQWslSDH
ImoJa+2D2g//xywwfmuntrOpVUX38PSN06Lj/9Vxp1E1ve8bwO+kbFO2OnHU
oSRJMkUqQ89NGUJIModkyhC+GaJkjEwRITJHJFOZylAhJSRD5gxlnh9DpqT/
+b37v7nOu89aZ629z977uZ/rWmetDUw0q2LrtwmVkKWQPt9CJTRRxdxVW9YY
IkvRznHX4NjKyMRN1fQMbyNkKXYEVQrtYIxM5Pfn8sfd0FK8aHXGtnlVZGLH
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

      "]], LineBox[{{42.306186057912306`, 16.}, {42.31264970299287, 16.}}], 
     LineBox[{{42.36647071960804, 16.}, {42.37139124652246, 16.}}], 
     LineBox[{{42.598683427189385`, 16.}, {42.60103090916036, 16.}}], 
     LineBox[{{42.60110198858116, 16.}, {42.60635717313302, 16.}}], 
     LineBox[CompressedData["
1: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
njsmFVrHd7qVez6iKbKenybsTAqDNvCNtd7Xst2Q7bjrWOc6p5oj27P9Z5Ob
LVog2/Hu37v+LWiJbOBpVdr3b+OOrOfHXjWH34U2sPni4hqPoPX8ydO/834P
ZB0P2Thxy6RWyHre2cClkmUbZAMHT8/rOADajmvqXxsWQxv4yWKX8H/Qek7r
W3ezdVtkHa9z/GraAFrPy17Pb+cIbazXTmP76Nsj67mBfZdDL6F1vP7PwG2p
AlnLU+64+H1gZA3buJ6sM90TWcs92u+duwxaxy2/71hcviOylnt9mhPfClrD
4xvPHTUcWuXiZWeuPIbW8B7N5wlhXshaPnIzv8Y+aB0njo51Owut57J51sML
OyHrePVt39W1OiNrmVpeP/sKWsMvfic8/QOtcpPC5hbCG1nDj85VuVDTB1nL
/eqnxC6G1vCCnL4fa3dHVjnyvVonCFrDn7bYyG/QKjd6XXJzcA9kDbdQZ66s
5ouscnbqy4SH0ArP6Xdj5n/QxC+Oryi/qieywm77bE6P7IVMvD47aqpZb2SF
N59fsPEvtMp76m1Z8rMPsoa3vftl0rEvspavNvh9x9sPWcOZ1+1qTYHW8oV/
5TOuQOs4IKL6sx/QWr4162vdEH9kHTv07JZyH1rLlToELTjVD1nHmwabWXft
j6zlhH6X9s+A1vGDJykxpwKQ9ZztdqPrd2gDO3l3b/IDWs/D5nrS4IHIxnmp
0KPReWg9b1ryYs3HQcg6Hqcur1tvMLKe9buHX9cMRdbx4dXfS+sHIuu53tS9
ezpDG3iMbphTNrSek9/5nHkGreN7n3P6fYHW8ucZmVXDhyPr+Il1YZt4aC13
UHxbiJHIGr4Xad2z9yhk47zXr8qzEaORNVxr7aIGV4KQtTzI9ffrWmOQNVw5
fUDY5nHIWpYbV9arOAFZw8WdLzW1h1Z5zVz1UkNohZft/XdwGjRxv9LIZ2cn
IksRwZuuX4MmernGynHTFGQpDnx8HnoHmqhsT+Si2VORpWivRi77Ck0cu9Xr
WpNpyArrR2+6HwxNXEcsbL4lFFmKZzXPhLwKQyb2DY9vfiUcWQqTd67+LjOR
iRObdcp4Aa1wn+R2D0xnIxMv9RhlCIdWuLVmXNk1aOO8PCktXp2DrLC26LN9
CrRxvc24nOC5yArLhy//JUGrXNK1xPIetIbrVnOe/wxayzXGWCb9gNZwyyz3
/nsikFXW1w9o8xxaw8E/naqVQavcf3f1SLNIZA1f+ug0vBO0ytW3qC3nQit8
qtfnHNN5yMTt5t+9ZzofWYofV3pPPLsAmejyNf+tX6GlOBRTklVxITJx+ZaD
opKgFa41IuB5HjTxk4nNOs2ORpZi0olcj6QYZKKMnX+UMbHIUgwaVufumUXI
RME/1t1bthxZilVrTetuiUMmzpi2sK/5CmQpYsz3a1pDExUtWzIpIx5ZCuVT
woeAlchEli2fN1u/ClmKd1ovTlqNTDRjWvcqzdYgS9En6H36Omji+IclUZug
pSh3ruDmLWjihimJm7omIEvx3vHF9yPQxIemXKxqtQ5Zigvny67Ogib2GZjc
0S0JWeHEK6ubLYU2rt+ceX4ltBRdXDZt27gemTh6y9GFe6ClaG3SvPQtNFHI
oaB3n6GlqPu+av8hG5GN58WjR88Om5ClePBBtyoQmviS86bkdZuRFb5wLO58
zFZk431/TLdo8HZkhYfUiF0+Gpq4lmULfRC08X1V7/s4AZqod/aZoj07kKXo
N+7cmZfQxB8PzU8/kIIsRcXLy3IjdiITrY5ofaDcPmQp7BwjF07fj0zUbOD5
tzmpyFLoxh+gKQeRiRq5tX5xH1qKRX9swzSHkIl75L/+qk1DVtjj2db41tDE
Mwrq/kyDlmL8lKQ+X6GJxGuRczEdWYpeG5ZVugJN3Pmn179SaCk6euXMDclA
Jjr03uqW+TFkKbbdDTyZCU28/amf177jyFJEuV23D89EJsppfrvKyCxkKWq8
Lz2TfwKZmCvEdah3Etn4vcN+PUg7hUw00rfdzl6nkaXwLFfNcQo08af61Cgd
Woogv9NPiqCJ01rvKql4Blnhu6F3bP2hVf628ET2JGiFx0WmRf6DJu7jfOvS
vnPIUszrd/fNiVxkol3h9OgCtBS+1QMP/IUmPvDZukHV88gKjz3wpr4bNPEy
h97T6CKyFOJ9ddce0ETmQ7dEfICWIvVGrQ37LiMTFX44Oc38CrIUA14frKG7
iky85MbddwnQCps7+TulQavsv8xq6DloDbctqxJa9xqyyn0cX72Jg9bw3wH7
lryDVnmedsPZeteRNbyjQn6FLtBa/uwzwHI3tIY3tf1byyQPWWXbb7f21IVW
2H/B4dIcaJWHHXt7rARa4UFxB5e3uIGssuPLhRewFf5VcPviS2iVrRZemqi7
iaxh35wMsz/QKs+dZNOu/S1kDS97OrGZ7W1klScXnd+dCK2wr/3mJK97yCo/
vFp2a959ZGO9jlt7uwxa5RfDOhye+wBZw4MPpHb6D1rL0btatd70EFnHY/4e
3rQDWs+Pgg4cewWt41pnx011fISs566WwwbfhjZwmM2qEw2eINvxVZuY7jeg
7dki4nTGHWg73jjUvEhCG/jfh3otUp4i23Hj8Z1+pkMbeEPCzTmnoPXsVrPz
JY/nyAbuPnyn2VJoO7ateTuqyktkA1+L9S5uA61n8xO9Tm4sRDZw05bbtrq8
Qrbjj0u2pE5/jWzg2St0JT/fINvxIJOd/9m+RTZw1Uf3r795j6zno+/m7Jnw
AVnHDayGWdyD1vPJSxaLzn9E1nHFky4N70Lr2WRM5wU/oHXcM+9yzH/Qen5x
fWLNGZ+QdZw5dXXcTGg9f7q9uVHDz8gGPnis9tlO0HpueHRYd/OvyAYenXLW
pOI3ZD2faz082Rtax+HTSwY9hNbz/Brzp1f4jqzjoxFNf42H1rPr+vmrPX4g
63hQx+7XWkFreV//evfcfiFreGh458odobVsFpDUdgG0hs0Tb11NglY5otP0
Qaa/kRUOP5Rg/h6a+OJM/Wv/ImQpJvr0DlkNTbTxbd1bVn+QjXm7a5PPh/8i
E7+e+ae/bymywju69Z+6DVrlmbvvVthehqzh3DUuoRPIB1jL07KPl5w2QdZw
tLgd8rscspY3Vst43bw8soZt5uSNOw+t5ft+ayznV0DW8Q6n7cNMTZH1XPtu
K5eu0AZua1mvYjdoPW8oiLRtUxFZxxF2Zj1uQ2t5+crkjSmVkDV8/8tr5zsK
ssrnUzp0r2+GrLD3plGtsqGJn8/RViysiizFmA3i4bZqyMSv0o8GzlWRFQ4J
fDZ7Ri1kle8Ulcw9Dq3wo5MW525DE+d0cnX21SBL0T2x+s610EQx7y/duQ4t
xbSXprZ2FsjECYMHVxgPbdzvx0ztFGiiatFfHl6FlqLx5jajrSyRidWDskYo
tMIiwGzNJC0y8alD4Wnx0Ao7rVue0MIaWeV6+WMjQqE1XPC8y6jj0CpnZrcp
dx9a4R6J2j7rdciqsR/87bCiHrLCbw7H1cqDJp4zW9qJ+shSnKrxU3TXIxPt
fzXEYZEBWYp785Y2zYMmCv0z2pZskaW48OTMqERoondrq59zbIAsxYjhuZk+
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
6+s9X2Ix9f/9f5akohs=
      "]], LineBox[{{58.94931887559616, 16.}, {58.9522834341476, 16.}}], 
     LineBox[{{58.96860595142051, 16.}, {58.97701269035132, 16.}}], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQve5hG3t/m68DAxgYOKjefimwDCdfz+H7lRd/zuPk
GzhExqw6KtOOi6/noLLb8YcSTr6Ow5cLVkoGOPlaDsmyXBttOnDxdRwevTk7
4QtOvp7Dgq9tS6Z04eIbODDEc5/f2o2Lr+eQsdNQoKoXF1/HIWvbKROPPlx8
PQdd5n9vQ3HydRziuVXq03DytRwkbb/MnYKTr+Ow4vZNhbJ+XHw9h77GqzdP
4OQbODxhYV6vPgEXX8+ht333lIU4+ToOR7udzCdNxMXXcjAzrOoym4SLr+Nw
06X99nmcfD2HWO565s84+ToO5UEuhnyTcfH1HJyvXmLfjpNv4OD22N9aaAou
vp7DjpziPBWcfAMHld8Oq7qQ+AATitkQ
      "]], LineBox[CompressedData["
1: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
LQ==
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQfYXv1v3iBX4ODGBg4DDlRyTDB5x8PYeHN/YUHluI
i6/jEL+wYzLTIlx8PQe1/iNTJHDyDRzcPzPaG+Hk6zkYssioHluMi2/g0MN4
cPnKJbj4eg5tfvd0E5fh4hs4iErKa7/FyddzePb18+LXy3HxDRx62fIsklci
+ADjT1rF
      "]], LineBox[CompressedData["
1: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
ccw65Sm1+TXq74akdsy6lhSzdHSN9sxC/LyOoAbUuibuDxzZkNrcL5tZTIih
lpC89Oj8T9QyXrT4s054Mku49LD8glhqgajACXMTqHVt1YeJ26t2YBZISbn0
pDq1hJa+p/P9qWXM3qZfmU0twTJA6feQWmDfgYNvu3ZkNp8XFdb/iqU2rzgw
77+FnZl1bfX4+KerqQWm93WKSqXWtVeH+rsW78IshOPns0kPqXXtbtGwTgu7
MgtRMufkol/dmHVtxp0pX7gFPj2tKsV3Z5YQHrhz0V5qgQFOP4769WDWtTDr
AZnJ1AI26fGbL1Pr2oi545Om9GQ2v3OjvnsEta55jB77cgm1eT3rLqHHqSUY
im61uEItsKl26JMpvZh1zSmm2221N7NA0fwNEwKoJZRaEDBkOrWMf9u1xTOp
JdjvjCtepQ+zjEbdNieaqBWoUw197lPLKHTpe6VCX2YJdtoFj/rUAni5qMZa
al2r+NL74gZqIUJ/D89r/h+zrhVMiX3em1qIuJHL3y+jNp+XJftm/aEW6Ob6
NMnZi1nXynT75GvlzSww5tWrbyZqXVty48q4/tTmX/DLlv2oda3slOGH1lEL
1Llwq71Pf2YJr7N7mJ5Ry+j3sU241QBmBZP+VTxppJZx72jE8doDmSXMulYz
rBO1jPPlm66ZQy1hWMyfmLnUMn59Xno1k1rCutdXLQYOYpYRYp1zfS21hOIu
d4/spha46z0/eg+1hK69r3vaDmYW2DFis1szagmnZyyKvUQtcGlWmCQPYda1
vYMnn1pPLUSyZbHWb4Yy69pXu9pd2w9jFiJ4s+uBmn7Mura15C7jBGohEtw2
r4+k1rXyG1xuJlELMe1n99efqHXNVZ1ntWMEs0CgMcS1jj+zeV65kbU2gVqg
bcDawnEjmSXkGtrs3UwtYGXYXK9xALOu9V9we3pLaiGsUob99RrPrGuXAvwf
RFALMd92Fn5R69ohx6k3a01gFuJGXvfZo6h1Lci1zxrHQGYBw5p5ejdqCRfm
zX+6lVogzGCIP0stwadw+7Ur1DL6nim3uVsQswRj14wRt6kFNvcdsuLNRGbz
8zpZdarjJGZz3ri6bZw7ta6V7BV4U6MWoq/X9avrqXVtap/CI6nUAiMtfX/+
pDbnjcuFFf5Rm4+rciVHqVOYJTRe8rRnC2rzvN2y+rFO1BI2RU67508tw9/i
Q7FV1BKuzmuGNdQCicV6FXQLZtY1VdxfrU9lFsL5fZNDtacx61rXpBMbfKgF
fBr2vhNOrWu20zbcnU8tMHGz2PmaWtfu3Gt/5Qu1EN6PT7w4HcqsaxNcpPwR
05mFaPryfMJdal1bu/NP50UzmIV4OzF9/elwZnNePe/Q+BO1Oa90d9pyLYLZ
fP2KNmk3ZzKb67VaztEP1LrWI2h1unE2s8CICysLelLrWuyCcMNoaoEkl1K2
16l17dyskJ2F1EIcsWhdYsQ8Zl27Pt3i6i5qAd/dad23zWeWEFx1zcXX1DJq
NLw2q+UCZnO/OJhh2ZNahkPUmBFTFzIr+Nizxe50ahlBziXK/KVWMOuiX/ai
RcwqfOrlRlhGMiu4kBjzsCO1jF5LP9XvR62g88uYUsUWM6swRG34WYPagPnp
S5K8qVXUOrX2d/ElzAruzis4a0+t4uzC5WMmRTEreHztT+fF1Oa82rtjQS61
ghshL4cERjPLGDBBMbSMYZZQqd6NVb2oZSReSdwxhVoBhlaZMZ9axqZqu/4r
sZRZwrHWoa+qU8v42XlOidbUCorHWMT0olax/7+FGxYvY1ZQ2PZWlfvUMpyT
fOuPWs4sYeia90dXUsuIPfTu5ktqCXU/jCwRuYJZxvLaWVePUCuwdC84Y4pl
lvHe+adnfWoJves0f9aYWmDZwdRSvtS61jg9cNRkaiGu1oTz6tXMurav0ata
E9cwCyTLjS5tp9Y1cROmEuuYBWZ0rBZclVrXspqnNTNSC9F+bgV9OrWu+ZUc
mNpjPbPA9k+Lp46illDLr0LMGGoZbhOPP1xJbZ7Xx4S0eEQtw9Yn923HDcwS
MtIfn4+gFrBIaxDediOzroUW3m3Zi1qIvLJxZV9vYta1z3JDa8vNzEJ0stqb
0WYLs66VrW73Yxm1EL9HD7Dx38qsa/GZ7ZomUwu0enVpy/ptzBLed3h7I49a
xsrb+dWCtzNLuOsxpc+qHcwyXi9ud/wmtYT8tMsZdXcyy3jxPbfvemoJv6eF
fb9BLXBtRatBfeKYJVTY4vfMi1pALdW16RRqXfPpFKrtoxZik03OyGW7mHWt
9okuA8bHMwu4mFYl1tzNbL5+WeUEnz3MQqwdPeDuImpzv6lx3XSJWohtHuda
ZiQw69pNl2/JtfcyCxHhMefou33MunZ7f9KnHfuZzfN6ne0vb1LrmsOQVh0/
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
f/j9YRy1jN9lkyxnUSuYcCo0fgO1CqX1kUMbLZgVTHXq5tu7GLOM2T0KZ56k
lnCz4l7bD9QC2U2mG9sWZzbnzRH2nTpRC7jV+317ArWu3U/et7pCCWYhyv2s
ueAzta49mzstu5klsxCjPgYVv02ta/W7V64rlWQ219u7uescqXVt/qgRX1tR
CzFMsn++glrX+j/JcNhHLfDq47k+f6l1rVfJ1Zd8rJgFbGt9OeVLrWvuixqs
zKEWYpHty7AapZl17cn+SQ8bUAsENU+zXkIt4WFSXJloahlx0b/3xFNLSBgR
NOELtYzEra32VSzDLCEtOGZDfWoZTZ6aBnWkVnBGapw+jFrGz78usZOoJTgc
TbedQS2wK730k/3UEuy2fu19jlrGnneLej6iVlBFkvPfU6vQPkuOg6yZFVT4
2LQol1rFgGt1Y/uXZTag0FMuHkmtYsP0vS/vUBuQum5JvRfURoR1mpL9idqE
SscHvOhUjtkJ3htDRkdSm7D14VmPVdROGOTqd/AItQnr/deuSKY2r1fj0Qvr
8szOuPTnWf/KMrMLfuueofHUrviVuuLZM2oXLOvdx/YntTO8q+9M+03thJ4R
Yc8sKzCb0Lb2sXKzqY14lld36Q5qE949HbjvH7U5b9e16bXPhtkZWQ0+Jh6g
dsGPJzb1HlA7o2efevuL2zK7oJFvFV2idsaZkVu+VqJ2QmK/2qvcqM314lu/
6hRqI6yOLqvqqTCb8Nmh47ur1E6AhaN/3YrM5rznfr7rPWonuPxKT31GbULV
ocMa2VRiNqJ7pXV/zlEb4PmwtsiiNqLgskefuMrMJlh7eHtaq8xGnCxp8cGL
2oRqnmOqNqrCbMTC5oua9aU24Lbd6cRl1Cr8Su77uZbagFVlXM/uplZxqXa7
dXJVZgVZ37ql96CWMbHeI0tfagX3X9xduItahv+pojI/qSUcHD1sGLeMwWvG
va5Yjdmct460i99mYJZRtURnsYdaQet3Y57colYh/wj9fYdawbR0zz2z7Jhl
ZH4r6TCPWsFFLO+UQq3i1sSecZPtmRU03rN4XEUHZhk3/NYdCjYySyj+fmSf
Q9QyvgdNjr3lyGyel751GptJLdDiisG2vInZPK+7JxV7Ry1EWOCF4Y+rM+ta
15Ae5zs7MQvRZ0HgLc8azLp26+z2EonUQiwp9bbosjOzrsU0WtHxG7XAuUW3
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
bQ==
      "]], 
     LineBox[{{74.30023032117711, 16.}, {74.30475447681678, 16.}, {
      74.30475447681678, 15.}, {74.3062831940433, 15.}, {74.3062831940433, 
      16.}, {74.30701072413595, 16.}}], 
     LineBox[{{74.50180959814497, 16.}, {74.51070044576439, 16.}, {
      74.51070044576439, 15.}, {74.51744217166387, 15.}, {74.51744217166387, 
      16.}, {74.51771298932336, 16.}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQrfRkqjPvkiAHBjAwcNj8yb9cHCdfz6Gd/1V+LU6+
joOBAofaUpx8PQdD0Z0LCpbi4us4eJqde31xGS6+nkNrvLPAd5x8HQej1VK5
6Stw8fUcZoS+/nEcJ9/AoWWz6LTMlbj4eg6VxmFx83HyDRzc9I/qHEbiAwA0
IVgp
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQfeyQnJL+qiAHBjAwcBA73KbhjJOv51DYsYHlA06+
gcNCjq3vv+Dk6zmox/3omLEaF9/AIeaA6uQ5OPl6DkWfmN8cw8nXcdCInF2Z
tQYXX8/hjO01Jra1uPgGDv//LrtshpOv5zBtnVnKUZx8AwfdC7v1HyPxAbzY
X1Q=
      "]], LineBox[CompressedData["
1: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
      "]], LineBox[{{83.58844536789387, 16.}, {83.59389513125558, 16.}}], 
     LineBox[{{83.59579620748691, 16.}, {83.59660689486867, 16.}}], 
     LineBox[{{83.60436276260295, 16.}, {83.60620859198771, 16.}}], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQfdj9oPy35yEODGBg4CAtPnPb9Re4+HoOP/mXNT3B
yddxKHRcbPEUJ1/LIU1PuUToJS6+jkPNgWknbXHytRw61y/YU4+Tr+MQVuDG
wfIKF1/LYZGVrwkvTr6OA2vyBzMTnHw9h5rvjHb2OPkGDse37puXhcQHABf+
XG8=
      "]], 
     LineBox[{{83.66812190229973, 16.}, {83.67161682724485, 16.}, {
      83.67161682724485, 15.}, {83.67803257024087, 15.}, {83.67803257024087, 
      16.}, {83.67841256934476, 16.}, {83.67841256934476, 15.}, {
      83.68322354460142, 15.}, {83.68322354460142, 14.}, {83.69250070824361, 
      14.}, {83.69250070824361, 15.}, {83.72780237412263, 15.}, {
      83.72780237412263, 16.}, {83.73058670438573, 16.}, {83.73058670438573, 
      15.}, {83.7322398624757, 15.}, {83.7322398624757, 16.}, {
      83.7364051342553, 16.}}], 
     LineBox[{{83.99221797680623, 16.}, {83.99594873516939, 16.}}], 
     LineBox[{{84.08571381440099, 16.}, {84.08731062313505, 16.}}], 
     LineBox[CompressedData["
1:eJx03XdYzf/7B/AbybuEd7zpxMFRIUmyZb3ulr0pI7OENGyZlZKZEZU9sluy
PkYIWRkpe5S9qbyyV/zO9/f/8/zT9biu19X7nNe67+d1na7q+U7s71+WiHyd
if73c2V2tPkiUy+m/385887Ep4eyoZ34qJ+DxxVoR066sLWafwVkJ27Uosev
vdCOPDHhyvQv0E7suuF15m9oR3av+uHFJwXZgfsdrzzlF7Q9u3z2Cu5ihtyA
w7L4yk5oOx7fPEU2Mke24c21gta2gLbjo7Etf5+HtmHbwD226yoi2/H77EpK
cwtkG/6xYmG1EGg7XtzWY8lFaBu+GVyrUR60Haffe13BsTKyDUd9evEoENrA
zfxKE1xUZD3vctkR5gmtY/61NGMTtJ57X0h3vAdt4MANuzwLoPV872VCbkdL
ZB3f6FsxyhVa40h38+De0CrHpC61LYJW+PTHn4GtqyITJ+bHZg2CVlh9cHT/
G2iVTU1e/pTVkBXu7fHC7bGGTBx01nu8Vh1Zipp3VxTaQRO3CzyxZlQNZCki
w+bvmwpNVLPIYl4lK2Qpgi6/WLBBh0xUtWR4zQM1kaWwr2SV07QWMpFJZoPn
3aCl6FW5vc01aOI7i4OmYSvss7fv+pfQxC/dN91x1SMrPOZN2T+LoFUOqD9u
xDpojfMm9Oi1E9q4X9RuJo+gFb4edneNf21k4vh2J67Oh5biwepeB/ZAE/fd
emVKmTrIUvytOyXKAG2sKC2SZt+FlsJO7T3rYF1k4geT7Fs9hJaiZ5s5lSsb
kIk3fR3R6BK0wq9eD/HJhla5wHKp+hta4/4HeiW61EPWsX2TfeeToPW8W99/
TksbZB0/PX3QhKE1FofLeIdB63jyzc7vl0Dred6QdhuELbKOb5l3nP7WDlnj
KJNe90MaIKv87GtgfCi0wqOfjq21F5p42Pvhc/dBG8+bh/XKG9DG+37Sxl0/
oTVuNuNbUuOGyDpOc74f1MMeWWNlT2jgamiVt604ePgmtMLzjslD0xohqzw9
t9zqbGiFbzVvdaOXAzLx2ulKlcnQCt8Pfpnh1BiZ2H2nzfN0aCk+pw587uaI
TJT58MeiZU2QpdDZjhuxHpp4ae7T4yXQCpc5rUv6BU3sIvNfRTkhS1HZPOaV
a1NkYp+dOXcmQivsYH2oznJolbO3pg6Ig9a44vl6hhvQKo9xbbrvPrTGI1q8
3jfQGVll9wiTQ6nQGjt5BtQ6Da2ybUrhattmyAo7nRj4Zxm0yv+Z1blWuzmy
ws+C22mfoIk/LPjUeEsLZCnaT65e4QA0ceCLIa28WiJLkdH95qzV0Mb19rdc
eBzaeN/c/LnNtRWy8byn/955Hlrh2tU6jxnRGlnleYesDryH1ni497DGt9og
67jinz1lbkNrbFHUd0aLtsg6LljSQe0MrXHX3q8S06BVbjnnYsPL0BrPXL9u
qJkLso4rzbmw0B5az0XlnLNuQxv47fyG/6zbIdvwpffnR62AtmO3Jbnv1kPb
8Ktzq2aubI9s4G5XZJl30DYcnJgWb9YB2cBFE9JM1kHb8IiR83fuhTbwsVGt
2zzriGzDlkU7u/6DNvDaZ7a5TToh2/CMuYendIC245uGzpfmQdtwp2q1TWOg
DRw5JyvBSyAb8+KNHy/HQuvY8+fPDeuhNS7scOyzysgqJ/9zTu0DrXA511Ox
K6BVjsoo2P8JWuPng6fN83JF1vHVUiv9SDdkjW3rH7gyBlrly9/V6kHQCle7
0uJrU3dklcOmXD02EFrj9akuXXdAq2xob+lt7oGs8OLXli97QBPvmDS0fTq0
FDsetLc9Ck30qFnZRX+gpah3SA6x8UQmulbpdszAzshSDHW7uWYlNFGD4tbO
Hl2QpehgE39rNDRRytWN7iuhpZjyY33Hq12RiYsXRhzr0A1ZigV+g1/tgSY+
kFFongutsFv/k0WF0MQb7ecPbdAdWYoJlt7ha6GJa7bbsuEytBTlzN9NLoUm
6rTtVnW/HshSLJmVPqhJT2TiHj3Mm7eGlqL1w4Sbo6GJE2acDTsLLYXJ57E1
/XohEzdOCas0A1qKI/ee/ToETZS22cqxFNo4/rvf8bzeyETLG/4IH9wHWYql
Xmnbr0ATu1Xs2LVMX2QpXge19GNo4pxn5dZhK/zlj5dzPLTKGV4/Aq5DKzxY
TfpW0A+ZOLZkR0B8f2QpdqUtWr0L2nhjd5iV1nggshQ/n9kdGwZN3KqixYJw
aIXji/sPSIcmDl2598IhaIUjDN+qn4JWObC1r9UZaIU3bhm/LQ+aeLpnkHM1
L2QpDjhVfb4Smijn3sMGkd7IUhS28zVNgCaOSvG7kwctRWKFrAsfoInmD91f
p9kgZClyTEqP9oQmaq6a5R8ajCzF7a9DEm8OQSZa2P3mL/OhyFJMGi5TrHyQ
iSJczXZ0hDbWy1eTAjygiRsoQUGx0Mb9npi1zWwYMtHHNm2znYYjS+HTVPcz
AJo44oDKcdAKVzyYdkoZgUw8d0vUADNohUNGhH9aAk1s3nDi1FPQCh9ZM++v
yyhk4imTvy3vB63wh5ujGvaHVnngr5EndkIrfNDlv2mPoFVe4+zTQhmNrHFv
k85O7aGN43fpKntDa1xvysvNR6FVXpmZOP0WtMJm5yel6H2RVV7vOf/vVGiF
XTLzDx6GJjbx2G+YPAZZ4UEjZ4cshlbZ0WZWg2h/ZIWnfaqYEA9N3Cu4zogM
aIX3v+069f1YZJXFSDH85jhkjY+F7nu0eTyyyjEtLWbthVa4qGWHzhSATBwQ
3+q+O7QU3Va1rNpzAjLR+I8fno4KQpaiSdkPkcHQRGuv/apyBFqKFhYjW+ZD
E00wN3XzDkaWwu++/9Ah0MRZq8cvLoCW4vGgrp//QhNnVvOabBOCrLDHrM/H
HaBVHvRPb8iF1rip478t5pOQVY52azipO7TC/z3z338Kmrh3SP6vN9AK3+uy
aUD7ycgqV4x5lHULWuHc4+mNH0CrnL24xYruU5CN901ykz1LoHXc5qN5RCa0
xkPv6ZrnQuu4Xdaz+TZTkfU8sY5vyVpoA2/0O3j6ArSeJ62OfWo1DdnAkcf6
JHeG1vOr6x8ubIPWsXOQ+1ab6cga/3a7fLMJtI4//bn0qB20xjMvb5zUHlrl
rOJu/7pDa5x/bbPNV2iVz/++Xxociqzxsnd9W7ediazj8310Pa5Aa8ye48p0
mYWs8siuRRc+Qyv8u+zZ9YbZyMSD43wDL0JLsd6/pFnDOcjE8xwaX2sHLYVh
THylwdDEaxwiM5fPRTbel6ExQ65BE9fbknz+JbQUM46087aYh0z885p9JRto
KZ68TZy1FprYPmOPzy5oKRbLkWtPQxvzzuwfT29BS+F7Te4ohCaqFnDt35cw
ZCkmqyZLqoUjE/UrtRojIpClMI233z4UmsiqelePlfORpQis/bOoXSQycSe9
pfNBaGO93rHxuhaFTJyQu7z+eGiFE5q0fHgfWmWrc1/TiqA1tt2RcC9lAbKO
I1q9f/ADWs9f7zvPdYlG1nGtgH8zai1E1vOPzJiiJdA6jh9QGnkWWuMXHgvP
/4NWmRKK24cvQtZ4e1RejONiZJVP/rHZsAta49TCiKQUaB3fT9r66SS0nkd1
6Rt+BtrAbV+epRpLkPU8xHOQ/gi0gU83oGt9lyLreeHc3oYB0AZuWO3RwLnQ
Nuz3tcNFbDvO323orFuGbMOBfcWEMjHIBh4zpcqh0dB67u5f68t0aB1Pm7hr
kN1yZI2fBH02aQWt44w/k+yx9Xxq8oxZG6F1fO9lcMS4FcjG/bqvwj+Llcg6
Xr1p5JJ60Brv7JPr7Qqt8ta02KaLoRVuePfY3B3QxN3W/0nYBS1FiknywU6r
kIl3nHF+lgItRZ6/c0urWGTi7slddumhFf40zuNac2jiR7nrctygFT6+I27H
cmhiny3DD22EluJ+5+wqhtXIxEfGTJw2DVrhnY4v/KqsQSaOvdBgrye0FMNq
RBzIhia6Zfgw1ioeWYoBaTdPNYAmiuxamtIyAVmK8mmH5k+FJqp/efvp0LXI
UlSa6T1vCzTR296WkQ+gjeM3j4r+Ck10v163Pr/XIUtxIiZ1g+t6ZGKXCrfn
8gZkhd1/lDf0hSZ+uNN0b6dNyAoPjAt/Ox+a2Pbwy5J10ApnNQ19YrYZmXj+
6rcONaCN6/3eUN4Kmsip+G9bly3IUgyva/JfCjRRHaveJ5K3Ikvx4vb5doeg
ie72O3O3/TZkKTadsTQfCk20drfhUSC0FP0/WPWdCU3kxs3G+yciSzHX3Tco
DJp4/LMzb6dvR5YiumpqkxXQRKtyz4ddgpai9ewfH3Q7kYlKN6ecC4eWIqNm
1P1t0MRvH/epnw4tRbXJpanldiETDSq+syUEWoqN605mr4QmbrK4T+IZaCl6
bOke8xqauKHFxNhiaCmmjf5ntXw3MtE3swc9M6GlWF3kv77qHmSiuD4P27WC
luL64CprBkET+V6pOPUDtBRlylv2lNBEBy8vow9JyFIoK1/db5iMTHSu/5FH
A1KQjfs1XSZFQxN5trb5kAEtBT0tuHEemrh++4fObVORpSibNCDTDZr48aDP
n1ZCK1wcF1juCjSx+5PTVwugFQ4aP7d5tTRklWu7Bz7qvw9Z48pRt3YXQ+s4
VS0ysUpH1vOG/3btc4A2cG0to85UaD0vaJQ4Ln8/so4fdDm9/je0nr/9s59X
4QCygVvtOb2mLrSexy4KP90KWsdnU46bf4fWOHTUmD/qQWQdj/w8N78ltMZx
01899oTW8dit/nVjDiFrXPIyddQmaJWfmB2K58PICh81XTRlJ7TKQ4bHnr8G
rbBt17ndN/6HTKyLqfxuM7TCFSrP0J2GVjmsksXILGiFw99OrFMCrXJ6jT19
rhxB1jjyuN3TG9DGvBbb7dMXaI0bVbfvbXYUWccNDwy+1xpaz+f+Wb83O46s
44l3h5rezUA2nte8sbMNJ5CN59Vl+tYl0HoOWdg2PfoksoEf52qx408h2/CC
UcPez4Q2MG/0yrgIrefIKQUbS6F1nDa6XNfCTGQ9H+nyfYHuNLKBF5x9M6EO
tA1rw7x9fKENHNChzveZ0Hr2it3b4OgZZAOH+pWd1+Ussp5PRp0bGAht4KkN
e4UsgtZz3dkzGx2C1vGZReWXfITW81LH9g9nZyEbeMalnKj70Ho+GNX1+sBz
yAYu63cqYAy0DT9pvD8zBNrA5ZeEjIiA1vNwp+Fv7c8jG/i8/4aQ9tB63vrC
J2IMtI6X/fF+9ARa454hD61LoVWen+vnQReQFf4W+vjIAWiVYz23DrC4iKzx
g+yD892hdTx03ICc4dB6vn3mT+wmaAN3Wlhc4Ru0DcfZuTWvfwnZwGJH8zMT
oPU8LMtKdwTawKui6ny5C63nUUMTXnyHNnC3yJI6LS4j65ntgv7MgTbwB4+B
ATHQeu6mFk7eAK3jlGPFtU9Ba+x2Zvnx4KvIKp9Y9+5tPLTCce2TCi5Aq/w8
3dInD1rhEVnXsvdfQyYuemZ/Oi0HWYpvjzyKJ1xHJu79bHPfSdDGvPhffPw5
aKIXro2PHMpFlmLB5EdVluYhEy86MzM1BlqKfXkbb96HJk6Pdsr/Bi1Fi6LF
rqY3kIkW97x6Zwq0FC9KBp1bBU1cPeuUuAStcHSRsMyHVvnTi4YTrG4iKzwo
xiLc7Rayyt1TisQ1aIW9qk8KewFtHN8hvvfc28gKPy1NH667g2zcr/sLnvWD
1vjjn8inr6FVtvIeFtbqLrLGkw5W/1f5HrKOg/aaTugLrfG6t11u97+PrPJs
k5pN90BrnGdS8mw/tMpvvcz7PYdWjP1OlO3RB8jETWN3fDwFLcWXjttmnoMm
qvBjUMsfD5GlqCd+bOyVj0z8Wqdsq1WArLDNygWn0qGJ94faFAx5hKzwFL+i
jMnQKvu6BUQvh1b4WMrj4C/QxH1/nXH5Ca2wR9NpESaPkYl9dzVLngRtvC/n
FjlfhCbu0yim5cgnyFI4VHSjg9DErR5P6JEHbfy8NRslV3qKTJzll3O+BFph
19rmq7c9QyaeUsWk8Dy0wv8sqnwrgVZ5dJUxB75CK1xr6JVPb54jq9x59gb7
+y+QFb60Z7KpyUtklW+1TQqKhNZ45t7AxUuhdfxuwSNeDq3nXffdio9D69is
e6o4C63noLQrW01fIetYnzjrvPtrZON9GWiljoLWsdO+2nZB0Bofr2fiuABa
xxafXFerb5D17Fg1qHo7aAObbvqYV+4tsp5nvl2xxxPawAeLnJY6v0PW84mf
cTZ7oXW86/24fXnQGnc+OLzgGbSO5waWt1TfI+v5Ut3lSeuhdWxSkDMu9AOy
nm218/5roA18et7R2DxoPS+/0fdM60JkHYcsnN+yH7Sez28f7egNreOooO2r
souQNT5Y3OdBdjGyjr3L2N99Ba1x+M+fs10/IqvsYrVsa0uJrPDpjqu3toMm
tq44uMdOaIXrXUjadRda5cc7vTfdh1b4buv+lZqUIBPfz3lllQEtxZmQccW/
oIki3rTeWQotRbfdf9L0n5CND3w3NnYftBTbKlv7uHxGJq42JOjYji/IxnpX
rceR2V+RiWPTatinQStcOCHd4hq0ytfGt7xZ+g1Z49jeyyu0/46s45pzLHqt
gNb4dY0Rrfr9RNbx5a/W9Ux/IWvcxyPgohn0//7e83WfKtAaF4afTWwCrbK1
7ZELgdAKR57pkt/+N7LKW+Yszu0ErXDumLQJPaBVXrhMfTMcWuF2h5LXbodW
eVh2x01mf5AVbuucNeQstMoTIgzd1pYia+z6o/G999AqdykpbFPzL7LG8eZF
8cuhVaa1rQcVQiu8xCOwQrd/yMS/+kwcGgwtReNxmbUzyBuYKLJg3dk30FJM
WLzYb0MZZCIHv5T9DibIUmz2PHN5BDTRtD3vP56FlmKkmTbDvTwysWej6JZv
oaUIr3140gBTZOLLv+86R0JLoW9ddPctNFFseljqe2gpKu7ocMe8AjLR/n3N
BoyClsJq6rgjExRkIufdaTP1ZshSNM0/XPYWNNGB5NtxT6GlCK3r3Ly7OTLR
iva/S0dWRJaiVv3oB9nQxKe6b/nwA1qKsMZRs+wskInKqVP6TICWYt1/N2PD
oIm8TOr2WwEtxcbSWd0bV0Imeurf1s6vCrIUIa5bQmZBE7d81vnTcmgpnnuX
rjkATVRx96zVb6ClWPEh7mZ9FZnY+8zvgg7QCieH7r7dCZr4zLcejZdCK9xr
4pG82pbIxLPrj5l4B1qK69wsr2JVZCLPoHurmkFLsdJ019mZ0ERJY663nKgh
SzG/2vxPl6CJGg8oHl+zOrIUOf89bNkCmujTonpRe6Gl8FmTZrCrgUw0dV/I
8OPQUlxs/fcxWSETXfd70rwRtBTVx38c0x7auKLv+h8Kg5bC/D9l6kloomUr
P98L1CFLUflFkxbboImb3nqS+BZa4TS3w7/qWiOrPMN6dNlW0Bq/s5Nx2Cp7
6502TYdWeP6BNc7Z0Con9RtomQetcenMtmWoJrLKZm1blB8LrbD1Bi3+MTRx
cd+E8IO1kKVodzTl3SY9MlGG7kWLBbWRpTCE9ZmyGZqoyoNnj7vWQZYicufq
4G7QxFfmLzhhVRdZ4Sv7hz21hSZ+fNnOrwG0FLZV10hvaOIKjTPfmBqQjfN9
uv0Zc2iVfRpapn+F1tj+4rezFvWQVX5hSLkyElrhC9sfFIyyQSae4n27/GRo
KeSQ/z5chjb2Cz+3bW5kiyxFo1e8YKkdMlHJ0X/mHesjS3Gp0HagBzTx2lZt
dukaICvc59QLu43QxIvGRiedhVZ4hZYoKzZEVtm29+JDDaA1HhgQYPoeWse2
v67PDrBH1nOV5e7tpkIb82KZZQHToPXsenrVzSfQOv5+pk3fhEbIev71IaXH
G2gD57zd1bUQWs9DIqyv/YHWse8DK4dKDsgaJ5jdaGOAVtly4MvGTaAVXv3K
+0IzaJXfGdr+y4JW+OHJMbob0MSV6vRKqdUYWeEvX/w6fYZWubUuvEmwI7LC
Tfb9HPwHWuW1vH5ChSbIxry9pceAkdDE1at8fnUAWuEz/v7jnkMTr8oZ/rll
U2SFizfOsuoITVxur8nSwdBStHAe6D7EGZl4gf3TPaHQUsS2+u0TB010Ovps
m9fNkKX4m1161q05MtFID+9aS1oiS1HPdJfHK2jiNwdbOZVphaxw66T6t6pA
EwcdUIUPtMKzPl+0iW6NbOxX6hbfPgmtcavYdkOvQKtc/+TdjpltkDX+FVql
TvW2yDqO21F2TTa0xvnpIeVNXJB1LPabswqt8f4pv3NHQOt41BWzwoR2yBqn
nv8Q+hZa5Sq6qp+s2yNrvPt0s6+O0Co3GHO9R2dohd90f/w+Dpp4/JWNxbID
shT7asV5tuqITDTO8Hbr6E7IUogX1ucjoYkSPTcdCnBFlqLit1/fd0MTJX8M
06LckKVoMPGs1yloItv5z4smuCMbz1uF7yVboI15abVrvyJoY14fd8aKPJCJ
w/rHZ2MrPOLg6eLh0MQ7zEwj46Gl8Gvx+/FuaOL/AgdZXYKWonHFXkpHT2Rj
3jM97PkeWoqmX1N9qnZGJn7W1v1YM2gp2neqXbNiF2SiuJthJ6p2RTb2e6ll
ZatuyMTfdm/ZPxNaimX3Ct8XQhONWd7G164nshT/EgOrzYc2Pi8/OXw9tBQZ
EVZuN3shEw9rM9nvJ7QUiUlVJg3tjWx8HR868EcfZCmG9RznW7UvMvGMgrXs
DK2w3qeKRSo0cahJl+B30Ao3rvyn/m9o4sX1fv+z7IescPaOTb61oFUefHWH
xVRohTsMmXEntj+yym3aZXQ5Dq3xy9K65TKhVW7hv+/QW2iN25ZGD/gDrXJW
3oAvZgORNV56J2d5OLTKu1/GbHkAbay3/j9/PIRW+XrZTW0/QGv8r2WnnEVe
yCpn2AyPuwWt8MaiarWfQKuslnadZeuNrPD0QWJ6DLRxfPsXjeQgZIUfrV9X
vtJgZJUbTwz2rQytscfLtEq1oFWesKQCnYPWOOv35tOvoHXsk3NSfIHWc0Bf
8Vo/BNnA16t4z+0HrWeXyyr5Q+u4/uhyJtHQer4SPzzzArSB7X+97HQR2ob9
z0Um50EbuKVW8e4HaBu+XLu3o+lQZANrj2a7OkHbcJOrdbcfg7bjXQcspJUP
cgNel/68syO0Pc97fcs9G7oBzwzcnHoF2o77eDuldx2GbMOt2q8Y0xvawCsX
u+wshrbhqhc7d646HNnAHU//aeoIbdxvI0+aP4c28NMFdP3+CGQ98/guJp+g
dfzxQO88i5HIGls1qJboCq3ylDkX3XyhNU46V3xpyChkY97Z8SZyDLTCMR1z
1fvQKienXguZMRpZ4cmti++dgSaedDzwr5kvshSfG7ivGAFNfCnz55E10FJE
z7N8+wqa6GCPzDLWfshSJC8x++4KTTTkc3nLOdBStAlPfLEPmnjalfT7Z6Gl
mOZQ5U3FMchE5VsG7KzljyzF1D7Bx5pDE68OuFer8VhkKaz9nka0hyYqbtjB
Lg9aijXuOcrzccjE23uOW1N9PLIUp164xI6EJgp+/9C2eSCyFGx/UesKTfT2
z9KhU4KQpdg2cKrbO2iiZcfkSLNgZClGJUz/6gRtXK8I2XtMCLIUu6M2LrOc
iEzUM6hRxaqTkKXoeue2T1do4htrwtucgJaiX2G90begibK+1sitNAVZiuL2
Jzc1hCZymuGwWkBLUS0jauZ7aOLml819PkFL4ayuv7RqKjJxbqfJjW9CS9HX
dXHjxtORiVy/dKwZBC3F0X9R00qhidt8HbVs8gxkKY7N2pZqFopM1HSOSdzh
mchSNNocetV/FjJReo/ItIWzkaUIjHtZYRs0UUSY11zLuchSeHuE1KwNTTTW
p8+1LtBSnOvyPmoqNHFJ/9AKy6EVHuVolvsDmnhvB33vQ/OQFXaf/S3eEIZM
3PeYbZOp0FK0cJloHgVNNHe4Vu4stBQN1XlbsYnvz8v9nQUtxZiCS2EXoYkG
WHcbODgcWYo3I2sNTo5ANta7sAO5J+cjS3EmyhDwAZo4oMrD+xJa4eCYj89d
IpGJw/s/fDoMWgpP/1O7+0YhGzvSbbf3boQ27tfFDRzeQhOf72mdgK1wWDFP
D1yATHxqYFjz5dBSZIbH1dwZjUzUrsNgxxxoKW55Kr5iIbLxvF/VnIZBS+HW
ODVgDjRxM6dNozZCG8d/2LMjfBEysf0ct/NR0FL8CrUatgiauMvh7K+p0FIs
r3IrYt5iZCLP4J/VV0NLMWmkZ+YeaOP4YYsPZSxFluKhHLvhCjSxfvBa65vQ
CsdNXrKvEJq4V+3ksSXQUnTYuLyc1zJk4t3N9w/yhVb42qaaVaOgVT5b9Ddi
L7TCWVYeyzxjkFVOPXr5XSi0wq+H9dgWCa3yy3YBs5KXI2vsVMHP3GwFssp2
NxoNcoBW+EipLm7zKmTi/EfVK3+FVriqm8PrMrHIxM9a1u+QvhpZig0lvxXD
GmSiHTVqfVHikaVowBGlAdBE+d9EykxoKXIHvYs9Bf2/evk+6Aa0FO3LXP9z
C5r4glkPUQht7NdnPI+zTEAmart2+KVQaCkW/HKaNWAtMtF4l9hOWdDGvDXt
UZMt65CJ59gPWHt0PbKxX/18fVG5jcjE3Vvt+88dWooTH3vF3YYm6uOWWq7n
JmQpxlWt+AWbaJG6aLn7ZmQpaMzF64XQxv1SNHnMm63Ixvke/cmkaSIycVpW
3R6boY39ms5xRZntyCo3XVPvYhy0xs9SLTpmQOs47PDfQ7+gNS5jHWJTdwey
ytGRpu7O0BrXScyxcoVWeVX6H6eCncgKn/+3Lfs7NPGD86+22O5CVrjK7wlD
T0ETD1rW4sx1aON9E7x4+wtooktr5w1N2o1szLvV6wzJgCbKaW3/5TW0FCZj
L1s77kEm7l9juuUtaIWdRp86VXcvsrHeTTp0414yssLragZs9k5BVrlvctzP
59AKp/3qUrNuKjLx/HpLK/WHlmJs8ajAddDE42u6lq2ehixFZLmKySHQxGMD
Lr18D23MCw7DC/33IRNfiX1zcAa0FF67bmXkQhMNfzhixENoKeal5vXsmI5M
1OVshdVB+5GN983QMzVnQhv77R/B1VdCS7GtvO+bZGgiUeaVbfUDyFK4LO6/
ZRg0kWF06LW5B5GliDJpWrgBmqjI0WrbocPIxrwWUaTlQRM3XV14/za0FGfN
M3fchSZe/y37+DtoKX52XXrgBzTxiPy7zw7+hyzF+JNNs72OIBPVd2t0q/tR
ZCmejO6euBaaqGsTzzr7oaXYH9or0fk4MlHSzdk53hnIUphujk+MgCbq2+J5
3OUTyFIsTKjcYcxJZCLLbYePNTyFLMX3WV8urYYmmhj+vYdNJrIUYni2iR+0
sd/9uFWfAC1FcrbPkyJooiszz+36cBZZivuBc/w7ZCETt248x2I+tMILP8bd
3wmtco8uo+ccPYes8KPLTWbQeWRii8GVr6yElmLxiCTP/6CN/WL9Vk/+QSu8
uwO9bX0BWWV/T+f1s6A1XmNV07z2JWSV65cftSQcWmHbzHpuG6GJN4VPfXwF
WgqfUyuHOWcjE6+e4JX+4TKyFElbmmY4X0EmGtv4fmXTHGQp1swS4XWhib73
bVZuUh6yFNv3dXh4GZr4VlikVfANZIWdJbvkQhPbxLhYOd1EVjglioZGQat8
oPcY3wxojX1DZwY8g9Zx28+q4dstZI2do2u+1d1G1vHYiKMJCdB6fuUywXXh
HWQDT2+9LPQEtA1fGDatXR60HX9vcc3e4i6yDd+12OAWBG3HO5aPjAiGtuFd
aVvta9xDNvCkWiO7joPWc+TeEeGF0DruVSf/cr37yBqbWOyu0Bxa5dgVsafc
oBXWvrn6d4M29vtBX82nQyvcze3Og73QKk9vHrriK7Rxv/C7tEkPkHU8y/Pe
5JnQGpc7ObP1OmgdH9y4vnzVh8h6pqOleRq0jgfL5D0joDV+fr5j5xhoHSe/
MOsUC61x+20bd56G1vG5l3Va6PKR9ezu51fdHlrHFhuuJN+D1nO1oU10rgXI
Br7/vkrBUWgbPpmU1fAUtB23vJb26Aa0De9tF7G+9SNkOx57Yc+HkdA2XHHD
P10QtB13zA8y2DxGbsAd/yxNOwxtx8/ujXiMbcN1gz84NHqCbODxavbKCdA2
XPvcnA5HoA1cGtFizDNoPS+PHbrD4Smyjs2uu+7vBa2xx9vvD8c8Q9bxiyHh
H9Y/Rzbe1+HByjtoHR892GCJ+gJZz30bf3UYCK3jkrNV/EdAazzBz7xnELSO
L34/st7wElnjojc/J22EVnmQ07vEa9AK/zs+sUftV8gq+9n+To+BVthr5a91
BdDEY3y9Xo55jaywftfvF9ugiT2Ca088CC3FpIKNUSegiT9NXWX5Blrh2q5L
Gn6EJk4yLPvxB1qKHjXqzdn7BpkofkT8eOt3yFL8uPSqbT1oovPpwds6Q0sx
YeeelIPQxry1vP7Iju+RpbDN7PCpLzTRuqI/VxdAS1HXy+dnPjSx6V3f0hkf
kKWwTAjYthWa2NzvaMx7aCn+xnTt/guauJNH8FKrQmTjeNeUP9HQxhst8ndq
UhGysd/utyd7SjEy8eTuA+rehpbCLiXQc5BEJvrUZdjjTdBSZE0cvfcRNPHJ
vQ9udyhBliK00n0PV2jiyg72l9ZAS/E+U3TfA0300Co+K+ETshTfvIJ90qGJ
ika+u7XxC7IUFmGbV2VCE88XLv8+fkVW+JlvtNOLb8jEx8a8yZz+A1mK/WXc
foZDG+d7z6SrJ6ClsOpZtLb8T2SiWlfKn+wDLcXBFfuWXoImHuffcPgbaOPz
ns5Z1/0XMvG1xMr3Lv1GliJqVPGbW9BEl6LqrvwNbTwv7+UK3R9kotvlbbyb
liIbP29pePu20EThV9u8mA0tRY1y+zTbv8hEvRKm927xD9mY968dPNoBmijp
b4W7FWkQsBSeDVafTYMmOnDV8m4mtBTPs6nNNWjihBo+5i3LIEvhdkapydBE
k4Znp0aVRTbOl79YdQ/auF89KpWrUx5Zipr+LvXGQRvrlVta/j5oKZoE7HDw
MkUmGm2940QCtBRDy5LzWWjiVUPm38+GluKCq+5NPjRRHefE9BcVkKWI9v2v
xE5BJv67rNcIZzNkhSPMp+5sDq1y9vLkKmHQGr871zLsNLTK86dFx5qYI2v8
7WSHfSq0yla2fxbtgdb4wcajnmUqIqt8d9XnqquhFTb9lPw42QJZ5QS3HmMv
Q2u8LH+VdcdKyDrWCleddIXWOPhx8cYu0Cr3t3x7+gq0wt82mH4+XxlZ5dMf
q06tUAVZY/+OT51ToVU+dinO84yKrLC/y7zXFS2RVW4cfUH1hta4sP7vZNuq
yDrOrx3tPwBaz5kPrFpNroas44kPHu5Ng9bzQtPBzfOhddze3lOpqCHrefTF
KjtHQuvYeoX8MQNa49z459cvQRvzYqjvYX11ZI1LZp9r7w6tclcPtVxnaI2b
t7uxYB20jh0mXKj3GVrPkyOqTy9bA1nHAZeqH7OE1vjYjsxOHlbIKg+z+rHJ
WYes8IeUOhne0CoviKkyLBBa43UP795LgNaxmpDdSLNG1rhGxpHKsdA6PuV+
SvWsiaxxp66vIoOgVb40Ju9nPLTGuicVvz6FVvl3VuTkf9Aan1v1yOBaC1nH
r+IaePbRI+s5cofJjgnQOi44/Da7FFrPdfpP69KrDrKOW3nOPe1YF1nPQ/6W
r9wL2sATq3mdCYDW8405Y7yeQhvYRZkzxdKAbMNtlU559aHt+HXPBnle0A24
9FPq5WJoe+69Z2PIV+gGPDguJahpPWR7PuLo+KAftAPrhy3XD4R2ZMuPFevG
QDvwsGKPrgttkB257Xydc6gtsgP73l72xsIO2Z43bLg7eRG0AweV+FvuhHZk
6yfhC5T6yA6cc3bv4P+gHfmnLHQq2wDZgW2nhP/pDu3Im1pWPvIU2oFDa3pU
jbdHtmfD337fH0A34Bdnrr2p0wjZjgc0SbhxHtqGz3gcNd3kgGzg09u6VZnb
GNmGO+sGmv4HbeClTj3OvIG24cIjR292c0Q2cOmwZnW9oW3YuVLV5/HQdpx/
vg7VboJsw1UXVy1JgjZwq+fHLrxzQrbhTWsDty9uimzH5xb+e7oe2jhfr+5U
vgBt4KJZr3K7OiPrOddnffdB0Dr2mDW/2nhojd0z12bXaIascot768u4Q2vs
OyogYwa0jstt373hBLSeQ8xHW5yE1vGMz5lbcqH17O5zNu4mtIGXLT0hHkPr
+c3iWY5ac2QdVzR3dW8ErfGEtrvPV26BrONLCweWHwStsXiVcTgTWuXb+gsj
QlohK9wvcEVqMTRx63En3dXWyFIELMp51xyaaPywIfPM2iBL8WRM745boI0z
mu6T4NEeWYqB30KeREET31lSGLMFWoqPWQUJe6CJrOoVm9+AlkKZ2GXtN2ii
9ieqthvSAVmKR3OcJ8VCE/e922FwIrTCl3IsBp6CJq594YtzWkdkKWrN2NMj
B5r43ZK9q6gTshTrm1ca2guayOlegUsQtBS60eMLbkITqz9m7foArfCDX7+u
DRPIKhdcKNd8BbTCFaJrLyqEJh73Mbu2myuyws/SMzclQhMfcY1KGuKGLEXR
1Vb5EdDE++JSKzyAlqLw8Pb4e+7IRCa13F5W80SW4mX0iAne0MRndV1/dOiM
LMWpQdP/PoUm6tqzX1fPLshS6Cs1uh8PTZTQSFctsSuyFK0f/L2YAk30uee+
LjnQUrwbvLj3fWiiolpb02t3Q5Yi1TBge09ookrlbLZP744sxdNOlfxToIkz
W3+zfwMtxYbJH8yceiATV7SaO6UdtBSel67mLYUmdtfPnHcKWuFZzys4lUIT
/3KOK2/eE1mKGXtv5br3QiaanTxd6wktxZ0mE0LL9EYmXv2ff7kF0Ap/HF4n
eis0sVOE19lcaIU3X4hYXApNXNYiqe2KPshSnHZoGrUemnjIeUstCVrhcp0a
5kzpi0y80KLBtVfQUuT2zLEohSZeVG380Ab9kBXObOXDM6FVftT4re4GtMaz
/+k/5EOrPPH6p5oD+iMr/DJ+uvVNaOLjn9T+owYgSzG5c8OAUmjiWvOaF1UZ
iKywqps+T4VW2XLtojWzoRU+e715/6PQxNNmVDr4BVqKiZlvRzT0QiZ6Pn5k
5LpByFIMHd8vLBeauEB5d68AWorbxbe3GwYjEzXsUc/ffgiyFB1G/+k9H5r4
2uEhrsuhjfu9Sr+4iKHIKvea7XA7BlrjJ3M61NkDreNfKR3X5EDrufIrs+7k
g6zjqbOb20ZD63lHgzaDXIch6zg6pnBNb2iNm4mZToOhVW7/aW2/UGhjv3So
7TFtODJxu8d5MU1HIEvhOKzS1vIjkY2/UXfrUXNoKfJPPJnUAZqoYrvmK8NH
IUtR9vO7sSnQxMPqmu/4A63wo3njbpuORiYOT5+z2A1aCvcHqctW+iIT+wzv
V+0StBTc2+xWTz9kY16Ysf+OF7QUFwp04VOgiWY0/9t0FrQU5kNyC+dBE3/v
cjD9DrQUl7ubK1XGIBP1uLiluJM/shTHa9XJGgVNnB0TE3MOWoqxr/q1ewxN
PF5/vvEbaIU3Wnp2LIUmjtynU2uPRTb2O4nV009Cq/y5oek6n3HICrePM3yb
A02cWjx0xQJoKf7kdmz1HJrob8qzgb+gpQh76rNGHY9MPD94XLNh0AqXD7w9
YBM0cbNJ9yx2QRvz5oVnTzoFIBPn+Zw8LaGlyDht3ZonIBMdX3xiW6dAZClK
p/+MGwxN3MDcxGwZtBRNX/yuug6aOHRJh7+XoRX+9iBrQIMgZOJX9VadPgkt
xZdP8UMtg5GN77fviQ8e0Ma8FDGuSQw0cfuHJhdToKWIWNnQY08IMtGjST+s
601ElsLtzYH6NtDEP+fNGegArfCxPo/LtYb+3/9LHXdwMLQxL//dtCQBmsi7
48S59SYhS7Fq2zeHc9DEK6ZGzPedjGzs91Z38kqBVrn50GHR6dAK35s+Ka3s
FGTioBsj9reGlmLLBf+66dDEF67fCDkCrfDTc3V63INW+fGzsMTeU5EV1js1
KlgDrfLm8oYfPachK7zk1eZJ9jOQia22lvxdBK3wCCUjdje0yvUXOQf1CUVW
WNchoksgtMpD54aHLITW2LP3YNM9M5FV3vOpdMKoWcgK7/31Yd8vaJUH/93+
oNxsZON87VPzdNAqN7A2H+8CrfD39DX3t0MTr4l+G9h+DrLCUwpaT8uCVvlV
zpug7LnIGtve2Pql/jxkleMO9o3uDK1wg+pVWveBVnnjmd2vZ0ErfCI/uX8O
NHHKPZ9V88OQFU6pFLN8GbRxvX/UjYyDVjim5zW/vdDE5y7/izsMLUVB64Kz
l6CJnqwYu/sJtBQWDzvN+w5NvL73V3YOR/7f9wVHT46BJqpWybloQwSyFHO2
vqz4Dpo4boytU735yApfdHa1ENAqu3YKjJ0BrbBJyLEzsyORjf2SX6vqjaKQ
pUjyXOz8D5q4qOLJ+EYLkI39zrzw7c2giXZ/3WVxIhpZis2Vr524BU3Uj0vG
l1uILMWDyr0/lIcmsuh+fkYbaON6eyWMTIU29mu6OU1nL0GWImX2PBkBTbzw
zRxfbSmyFK6p+du8oYlner2YkQWtcNLC1/W7LEMmHjO94LAPtBQLCjNCRkIT
jxzkvnAitBTKsXqDpkMT9Y/qM/UptBRmdZpuxSY+Os2kTKcYZCn+69QqtTs0
UWIPyyaHoaVo0fflSY/lyMRX9C6ukdAK2/w7NW0LNHH1e3+8HFYgK7zsWfv+
TaCJH52fnTwNWooxD2oVz4Qmyo2y0F1eiSxFn1bparlVyEQlS7yELbQUuRsT
d3tAEy1OrHQyGVqKNl/LmOZDEz9oab6y/2pkKRr93R0wE5r45qXnTh+gpahQ
rU8f3RpkoqLZzk9bQkvRbets73HQRPkfd037CW2cb5/XC6zikIktcrwGW0NL
4e17WQuDJpo+/0O76vHIUnBWdNxkaGNezCF9KLQU5x/vuJoITdx44qg9O6Gl
2MUz/qZDE912XJrXLgFZisEPBr9yhyZeYuH2cRu0FO2d/0zYA03c8PCR6jvW
IkvRq3fLIyegiSZudq7Rax2ysV+JGuY4Dpqo7aH97Z9ASzG8f/idF9DEpXaz
fg1Zj6zw2J9fzk2EVrniyT9/sTVuZzpGxkHruOee251+Q2s85GvW9wYbkHUc
H+ReEg2tcf2NVQYnQat85IenIQda4eDyCysv2ohM3H3pmeF2m5EVLjmTXnIf
WmVf3+cb3bYgK3x37c+re7YiE5/WbXTMhFbYfrP9t6RtyCpPKt29JR9a4d2+
AefeQavs932/dflEZI035EZPt4HWcfCL96FO0BqHmKcc7Ait4zlmC0tioDVe
rk/zPAetco3LfuN3bkdWuLJ7mXbZ0MTZl3Ju1tmJrHD4ovq2/aBVbtnqWv5s
aIWvD1mRugza2C8sNWl8BlqKxIu6kAfQxKPXblXfQCt89eeQ/iXQxN86B3dz
2YVsvK922UQvhyYanWZ9sOtuZCkCHw4rngpNPKHxD/+V0FKMfNC0dMIeZOLF
ms+m9dDG8+43rN/tvcgqJ1zId0lNQlb4wvuj2d+hVQ7y+ZTlnIKscYsgs9E7
oHVcqcOmhseh9fw08nvgaWgDDzhskpgPree+fqbNTFKRDeweM+eUDbSeP8b6
L2FoA9devm/xRGg9/x55J6tMGrKOa1yq0u09tJ7HXbpRrxRax9cCSpr0SkfW
uKp5UZzPfmSVX3556PsMWuHZzaZkVD6ATGxd4m0yHVphO5cv37Khide/tOr+
A9p4X9lkXGp8EJl4QPKi/ZOhpXjY8MzJXYeQiQ7dt8+7DS2F740Mi9GHkYlu
aPUG/oaWot3MYJ3uP2Tiii87R32HVjhg49q2o48gq9wm5PuEc9AKp1fz7pBw
FNlYrwPChx+AVjj6RkTiZWhi1+5R5cseQ1Z459ndJ62hjXnX6sLpMGgpApye
Xo2HJr795+7mk9BS3Dn723nKcWTivAW+F6OhpRBqtaafoInKbjjgsjYDWYpv
uovZB6CN/dbr1+tvQEtR6dzJyi+hieb3HTS07wlkKeIWTzZ/BU10Vbl65dpJ
ZCm61HrTjU4hE604e/n2aGgprHeWWzUXmsjs9/7IsNPIUqy7nqj+giaqVClI
DjyDLMXfLqETfaGJC286m6yAVnhW3/Dbw84iqzyz76HAYGjjeck/4CyhiTs3
79jpYxayFP8ex7ZyOIdM1GXgt11jzyNLcfjv1/o7oImi7zvV7nMBWYrXx8f8
mAxNZD1/VNG/i8hSVDjadbF2CZnIqcLRkmfZyMa8udNztIQmquxVaVKdK8hS
LK5bpW0jaGNefWHRuzu0FNP49dZe0MT1Nn2cVQKt8Pjzta+WXkVWOWTsqy9W
15A1vjjqaOZOaJUD8/1mHYNWOPBe3Q9XoVUOe7fsTQm0wnVujnKZk4Os8pO3
SWOPQms87qYjv4dWOXH5RlECrXD8hiGzM64jE0/vvWBwFrTCZbZlmXyFJp78
80SlLbnICluuX63dgSa+eKBvjaF5yArnVjGUuQKt8o5Dg+8/gNa42ubBtlVv
IKvssrus3h5a46D27/wcoFW+tGLrzQvQCltteuf6C5o4Y/Xr1PI3kaXIu3P0
/CFo4rHDDqeY30KWIi0zZhFDEyUlJ/vn3EaWwuHkp+Cyd5CN/UZGpFUbaCn0
a4JDh0ETvW3Ru+wiaCm4JG7zemiiRVt/W7yElmLM51URX6GJ6nUPd9lzF1mK
2buKkk5CE08KiPvQ5R6yFMUr3OrGQBOvbjeo2l1oY79blZMN95GJO3jX9moP
LUWk8u6WNzRx/ZGeV0Y+QDY+77D90Cho4mcPQtpsglY4YvrcPeMfIqtsdeHs
+Ar5yMa8pEYt6QFNPL7GgkpLoRVeuLJkl2MBMnGzpeEFLaCN9fbvu8L10MQe
//oEnn6ErHC3CjUrlEATJ7ZoHPUdWopVQVm7JjxGJkr33DX+OrQUsm7tR7eg
ib3zA3+deYIsxQZ93gLbp8hE5ayezdz8DFkKnyXx5/o8RyYy3dwxNRHa2G88
MnU4DU18s3v6tWvQUoy9UafbjBfIRMX+1a6ue40sRbOlyV/ToY3v1yzF9TK0
cXxWuzd/oYnDF5z1KfsGWeFQ2+8FHaCJW0zd+HwotMJjU+r0OQmt8raEkr4X
oDWOqyGbrnyLrLLHoM37d0NrbPuurXv9d8gqD3bJ/JwJrbDaxzXH+T2yygsO
Bk7Jgla4i/Vmt2xo4vYBIY+uQCscHhNk7voBWeVzc1tVugGtcbsBkeaPoXU8
wN99hHUhsp4T/v3+3hFax5N+7py9EFrPx/9cebgWWsd+3f/rUK4I2bjeLn++
tYTWsfP5br13FCPreYCc0ysbWseh+zpX6f4RWeMNDUzdz0KrvMFl9eSb0Apv
GCzXh0tk4urTU6vsgVa47/Vla/ZDq9zZdv+G6BJkje2Xxw5ZB62yo27qrnvQ
GpfduXdsk0/IKs8rPjpWQCscbHbq0SVolfd02ZZXCK1wgw0j7xRBE6/8PDih
3GdkKXLOpF6bBU08r8+4vrHQUvQ83Xr1f9BEyV8r3Wz7BVkKz4/3ityhjXk5
tnzu6q/IUgx43H/ZKWiiBil7EmZ+Qzb2W0+r5R6BJraKfd2rBFrhzJh1y79B
q9zozb3ttb4jazx4sXzkDa1yzxt7Y9dAa1y8rsu149A6nlHDbEohtMZ1Lw53
s/2BrOOvyefKO0FrfNDuWMtJ0Cpb9B86eS60xjstN00Og9axm/MCuyXQGqfO
e+/04ieyypOjrpsP/YWs8XbXObVn/0ZWmfWz53r9QVb4eMjPdRalyCqv0Lq1
nQmtcc8g35Cmf5FVvtx9zr/u0Bo/cxywY8U/ZJVv1k7KWAltrLeDJmZhEz/p
fPnDKWgpns/9fr0MDQYmqttoojYJWopbnzumR0MTT/nVYvdzaIUL43+1ty6D
TBx3dvv2odBSlLfQpvcqi0xkufLodN9yyMa8fLKd/SYTZOIV74/57oZWOCMv
TdYoj0z8dfGdvx2hpfgyxa/camjitOovr6yHVnh8Yq2koabIxOU3j7MrhFbY
YmKP0j4VkFUuU/pr2x9ohavy0+qjzZCJt+b0qTUW2nje4pJDVkIT+5Zv5noP
WuG8T51W7zBHNua9hdkZuorIUnw68O9XM2iiKqO/LfOAluJB+IIrEdDEX9YF
3/4MrXCd8PWd/kKrLDu9P1fbAlnhPRdTvZtAE7+s5WrWA1qKPaeH+/SDNu73
bVmOBdBSvJtQd459JWTi5sFJ3cZAS+HSyjRtBTTxglWX1a3QUjR/QH2OQhPv
fzG37T9ohV27H6wfXhmZeFDSMZd10AqfjC9pXgBtfL/He3hhK/ze+4xUqyAT
rz06+l1PaCnmvioqrq4iEz3KKSi7FVqKld06jrsGTXRuRGTz8pbIUmx2+/us
AjRxhZLLPz9DS/ErPONvQVVkIit1f9bJashS/P0dei0Xmlj/O/jzPg1Z4YOL
uoTdhybet/buds/qyAp7e53zCoMmLgoSPeOgjecttUm9S9DEd/9bPWpoDWQp
7j6nu9OhiTaN7TVrC7QUBZ2amFyGJtr27eLnT9BSvC4xr/gNmrjrZOtatayQ
pXCqfPBjODTRjPnLK9vrkKWovHZAt5fQRG4vz/UqY40sRa22hukmNZGJRqxI
/5pQC1mKSaleNzOhiTKud5mdCy1FYmzui/F6ZKJpdvNC5kFLEVa6sHEWNPHl
xh8mfIGW4nqP1nZ1ayMT7bpwpFtnaON6by33diI08afXdW+dg1aYA5cZ1DrI
xCVKQ8tW0AqXyXuW1Q3auN/cBoYNhJZCC7m8bjU0kV/I47+7oaUQlbKmNayL
TLTQL7aNJ7QUpUnBG6sakImW/2wnnaGlWNs1t64rNNGcFbENUqClGGm5tP2V
eshEH5QKtS7bIEux68kF77vQRHF9Zi3tZYssRcDhUP90aOLY4I+rPkMr/MnV
w36rHbLK+gkmzRrVR9Z4dJFtvx3QKl+cuHvbAWiFG2orgg5BE3s+7PzMriGy
wsmbh2QNgVZ5+bbqCT+gFXbZ/b6B3h6ZuN5WxyXUCFmK2H9/EsyhiQckTM/P
gjbWy5NNDHnQKlsZ/tZe7oCscfn8kRU6NUbW8cQaLZsPg9a4V7JXQTi0yncO
RIbEQCvs4TrP8wA0cZP81cXYUqwvb/rJ1BHZWC86pY+zhpZi1YngIl9o4uGT
Due8gpaiWq1td4KaIBNNOOngFQIthX/dxWfioYkLfzd5fRhainInhqWehCZ2
DdhT/xu0FH0+5RWNcEImHvZ18JAd0Arrl842OQ/9f3Td919O7x8H8IvQsU8c
HLqrW5Jkr7JyXhmFIoVEVkYoZO9klLIqIzMrhYxkS4iSHT4ykp29DwqZ3/v7
B7x+fD4e96NT576u6/161eM+yZg84IRNIbWCsXr3k6IJs4pTBzEsmdqAK4OX
RxRTG/HbddeSRc2YbbF+2+Kjl6iNyIj7HNO9ObMBnUo3H3qWWsX5EYtal2nB
rGDgmNDeoJaxxW1NQdWWzAoSN+V3GUAt41RC2vnn1BI+ZIY5FVLLWHFt7tCM
VswKgp/lR7VzYpax2vvO/ZbOzBJ6Z7Q7fJNa/P//lb16Qi3h+e2RV2u2ZpYR
6H13iyu1gtEVnqz2pJbR/4SVT782zBK+x95aM4ZaIKjO4F2XqSWcPrj71hVq
gYzbGyf+o5YQZbVuaum2zAITfm//N4naNO9T39U2a8cs8DfhZHRPaglfl077
OYlaYMTCpr2zqHXNKkLq/ZdaiF0dtblSe2Zda7iq0lwraoFh4QezdlHr2r0n
5qX3Uwvx/b/eOe1dmHWtt4X3EW9qgWlTGnkNpJbw6tEDyaEDs+n9Cnb8xS0h
vsaiHE9qgZY7pFvDqSXcDTpzLYdaYMh4PddMY9a1G4mXMl2oBdb57O/ygFrX
fr0YmTcKzALne7Tet5laQvawpw1+UAt0s43sIbsym+b1++6WoDZNhFGvJhyl
1rV2/2b0Ok4t4HKysXaRWoJtwsK3nh2ZBWqWdV4wohOzrp1vmBEQSC0wZ+nF
I2OodW1v/kezydQCm3M+HbDuzCwhLWByhdHUMiaFtlu6kVrCm6JhQ29SC0yN
iz6dT61rBx0Cr5h1YRZiSbPyP0KpdS37hqPXE2qBrVeL8v5Sm97v3Byzr27M
AotyH2Z5uDPrWmr+gVZjqQUObmqcNpda13b2XpIztiuzENH394+Kojbt16gq
y45Qm86bpGWdBnVj1rWUP/6bsqkFpA+ro/5S65qv3bgllbozC3HM1cfZk1rX
3Au7vTtMLTCr4GlnWw9mXRsRW9X+CLUQvZa+eTu2J7OuNf+WdXM+9f+f171s
Qja1rv3Ydb1nsRezEBlNBluG9GI2rZe6E4MnUQtRYF/Js5o3s66VcJg/pAa1
EPbjap+qR216vzI37wj3YRZi4uUzyem9mXUtZ5iP9pZaiLaDhx9/2odZ1+SM
I4FqX2YhvH17bvtJrWsD/jMfVM6XWYg/U5u/2UOta+FWK7u9pRbC0nxMv6B+
zLq2u6VjmSfUQuy7G9u/px+zroUtHNwqgVrgt/FnzBlqXVt++syHhf2ZhUjc
dmLuXmpdq10x6+9PaoFVuyKv2A9gltC/T8tSQ6lN522Ype9Magm5Hjk/wv2Z
Zcwr1WrSOmoFE3ea22+kVrG1VZr9IWoD7JwrfM+nVuFxYcPiH9QGFHmknrIb
yGzEqIScLhq1AXus5Z/9qI3ItN5nU38QswE/a/vd2UCtYk/XTR2yqBX88G9c
5j61ipO3r56JG8ysoPZSH3enIcwyAqxPDJ9OreC08V9YLLWMi1K5LxuoFZRt
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
dadNFWYJbZP//LtBLeC0p+ciUZVZ12YtUFtVpBbixGmbvcnUulb9Zud5UQqz
wIXfMU0/UEv4PGmlv1U1ZhkrupvV86eWUOw+fGUMtYxqdc0MedWZFWR9vrzq
dw1mGQ1cc3PdajIrMFZ6HO5NraJ1d7NLt6kNeLNvy9Lf1Cq6fVp2rGItZgP6
bCyaYk1tRIX7r9ztqA2IDBw8fgO1isikwp4hlswGzI2z8JxGreKbMSBPpzag
qrW3fZyB2Yj+JZembaA24MPCR+fOUauou6No70VqBZ7XHr+7S60ir27j9s+p
DbjzXPxuYMWsoodF7x2O1swKaqZUTB1ALeP7pTUn4qglfOmTH7PDhllg4uHd
ZqFGZgmNJn7aPZdaxtgrt1rMp1Zw4frAnIPUMrbO82iVTa1ALnf9coPazCr6
xWcfrGLLrMCuZ8COttQqbj1/MX8WtQEhSVlyAbWKeqpU7wu1AfklU/qLOswq
OgadnOxGbeobd59dC6BW8bD6TBdnO2YDOl78dqM1tRH7OtayMavLbIuG+RNd
l1LbIa3Ic/UWans4bms6M5HaAeul0277qO1Re8ue0jq1HaoUvN5WyZ7ZHiu3
hVnuq8dshxHjKvvFODDbIi3hQkQctRFeJft67aM2YHrcbddP1CoWN603uHx9
ZgMq+yQgjFrF35Bn9/dRK6iO2iXTqGWg8GHLk9QKyhxWU3VqFXdHW/b9Tm1A
ZtS5ro6OzCo2zm+jadQGjCnYujadWsVg5UzQVWoDanUdc+59A2YV4R/M3Cs3
ZFYQuDHdxoNaxpYSX7IGU0voFxMxeju1jINOeWtuUCtI7HpwfWFjZhlr9mjy
5CbMCvreDrmXTq0i66loe4VaQaXbn/vnNmWWsXj/Gce1zZglVHsbnNmpObNp
Xjnu855KLaGojUO7PdQCPvkbVx6nltDk7Kd6Pi2YZdj0u3FzPLWEsa2dwrxa
MgvcO9RzdSq1rtVu7+m+phWzgK372u2bnZgl3P41bvIbaoH9iXGXC52ZdU0d
/29Eu9bMAld/7qleTC3h5O0/hyu0YZah1jY87EgtQchPw3tRy/CMv1TpCrWC
uzNLjf/dllnGXL9Z5mXaMSuILhpn1ro9s4zwM/6ZnV2YJZhZuzQYQS3jdGQa
LndglnA88E+79hqzjCunO1uupVZQ6kzbC1FgllErRa6YSK1gyHZR9wS1ipyA
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
zz4wKyh3YaWnxUdmGb5LJ76JpVawdszcgjRqGQvTq356QS0h1HlrzdxPzAIb
hyWVvKMz69q215eK31ILUeWZ2df5X5h1bdh+5dxiaiE+vTnq/6yIWdcWfW1f
8IdaYFdE6VDzb8y6NrRrt5u1qYXY0SKmxjBqXXvteqLiEWqBuosrWDynlvBn
e8HIut+ZBS7lzh3WilpChFenRt2oZRwy97/Rm1rCECvz1ZepZaxb/7l+DrWC
JLtLpwf9YDatt7RJF1OoFXS6ad38CbWKS31t99cuZlZQOqjl86HUKh7cXfxs
DLUB49v7XYyjVqF5WDk5/WRWTOf9l4t9qWXY2NoUj6aWUOKp8fgUaoGAls2b
3qGWULV289h6v5hl6D33ezhTK3DucWt3IrWKaeX+lVR/MytY4ejcbT61jK2l
BrhGUEvYFzh2Tzy1jPulNjzNpJaQXdfp2gdqGRV8DlVs/odZgdfYm0+DqWWk
la9mkP8yS5ienRF6nVqgy/SyAaH/mCWUvKQ8riIGEAs8+DnjkTO1rnUetKfd
GGohQgf5lh1UklnXwi6v3BhDLXB/UbUNDcyYJVx2Lvu7FbVA19435k2k1rXe
wy1a7KYW0G8tTz5MrWstC8qeWl+KWYgc73PjI0sz69rpQ1YT1lMLhJydNMSj
DLOuvfpS6XA3c2YhfG50Syyg1rUC3ft+SYlZiCOZXZdaUutapu8MizBqgeRn
XtY51LoWa+mX2a4ssxB9L/cr61+BWdeWPww8+IJaoKiVFPyTWsJDp32tK1Zk
FoDr48B5lZh1rWLpmvcSKzML4eh2fO8Oal07W+bwyvPUAp8799lQRmbWNb8B
DYODqAXCcob/mE6ta11gty+KWuCLbcXfh6hNect28r3f1EKc2nGxYENVZl27
sKFa9wRqgd8HnNKTqXVNSndYfodaiBlth5eerzDrWlT2yvE51ELU+3XhzJFq
zLoWb9+8SqvqzALuSVXvWdRg1rUKA0rl96X+//Oytxy1VJl17ZZP+LRyNZmF
OOBTkNHMwKxrre7eO/vSmlmI7IkRZ79Qm/Lm7zkdatswC7G+4gy3g7bMuvb7
WvHKx9SmiRdZ93Yhta4dGHt+g0cdZgE5/3Wz2dQSdjZxexBNLePmo5bJqdQS
Cs8uzCm2Y5axNO/4t5p1mRWsCXmfNZtaxYiNSY5h1Aoabb3RJIZaRnR25bTX
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
othUNIX6PfxWM7sl+f/8B9U+w0s=
      "]], LineBox[CompressedData["
1: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
+nR8xEZjZEYDyfnwkj7IghssSEgJ/z//F2FXGU0=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Tiempo", TraditionalForm], 
    FormBox["Usuarios", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 124.17911710161212`}, {0, 16.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.71782998249225*^9, 3.7178306175437517`*^9, 
  3.7178308043977404`*^9, 3.717830835994194*^9, 3.7178385949456186`*^9, 
  3.717843581890643*^9, 3.717846815419518*^9, 3.718681263138623*^9, 
  3.71868143693419*^9, 3.7186815059773407`*^9, 3.7186815812470207`*^9, 
  3.7216543798217783`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXW2QVNWZvvTnMMNXNO5mU5uN0c0m+ydrJZtUqvYrmx/ZrVpTtVVbtZUf
i4hgCyQoGiyTykfRIwKKCCpqYmwlBg1EoiTrNAMMCEEQFG3UKCp+BIi2K8mq
yyoJLJnt55zznvue2+fevj3TAwO8VTDdfe75eD+e57m3+557zpenzp1x6eyp
c2dOm3ruP101dc6MmdO+fu6XrriqUZQdEwRjZgRB8NK5Ad4PNt6aP4ONf4Mz
8Qclrd//jXrJBrVKKSiV9P+M+lsIytW6OhoeKwfV+uAnVGFXMFir2Cqean+u
CnNBvVq2PTeqZ0yxt3a+8bceVMuhLZXaYBDT5Dxjum5SCWqDsVVjis91BtU9
kCe55CB8zg0fmQ1zs6qsoOJTKleDOnoN3/+FOjzWDZ+/aqBdHKfLKjUbasQU
Q8W0O980Q7UwQ7WgUjI++pt9TFWc1BSOOOti3n9UNSo2d5M+Rp/V0f079dKt
Yx9x3+PX+SYZHHEay0VVPS4c57FwqagyvxPa8Shb6+rVoGy6jWkWF+U462LK
P+pBf7a9eJko/z0DJLVyQxGOQD5H0US9x7SjCPsMQ/WYZloUerRlSCghJcHC
pPD66seU+8KbayNQJrb/YLSSO+rJhHUU8IGTkZC2RG2lYhHPLUtArR2KmJfc
TMfjLO1jtTZc9H6EK2+ku3y6mH2WK3CzRAJqCRL5cUMVglYLJY4T4hajnM+b
pVdQfV76QIj70pDFOPgzUuO4vhreZEzEW3jjRLwniJ6qOTsjZ8vgEyynbV4z
NAyMOX1/3F/c8nIhROdQLhcKrvhZ3pfoVJMUB3PZ0HQ19h9kHFhp8NWtj5+t
Dw2iG3tmwt8vDaHNX8UGId/kFmzPKusnalSwcXxXTGGdSqOfUIyao8mSakwd
C1PnPbjlJfq/dumq3SvuXPs03i9aPbC3f/HKx4MMPgX5Of2PvYp3y1b2P79l
wQ93No6/YI71TN/65AG8+949Dz+LY3h/8S9qB++662fPrF22ajf1h/dBVrXp
qvzgZ0/TuI1xdlG9xvh70IfuukAfqap7OLvqtjU1OqStMYH9wt7XfsPbMFe6
4AK5+a+7976JFuTe/bevecr0Pem9I0fdvoMcuoVn1FQPCb+1X4ig8lLXHwfP
uI3cU/SDodEPooN6OjiT8JEspMDCaj4ETwYdI8+MB3AcTbkH330ozDWCYqrC
fxhz7qG33+fOEpIv2F9/1yAhaoBCgjY8B2NoxIWN8mwkPquWr6mFqVAHdK8f
QjQwSDTRF+558U185m5yCxCqaAj4Z2QRfRvjYQDhCU1RzfhbpCHhUAzUJxJO
KCuUXKpLzqMvyiDMRT3CH0CAY+irtHn3AT4m3utYFjhWCDthcnOADXqgwOlW
EwBgijRaUxVqzWNLg95yb/U5wzcKJ/cDtptBOZ57f7r5xRzeTEyrb+YCK0dn
2rTaVvKU87PoGBSPQfkYrW8T8DIIefsU/oxNOAtFrpv0N9Bx+nyZWnvtyZJ/
e2kcNtY1SsegeAxX3zwsG7yo3Gf/Tyn3BQW8C7KvXXXzZjoe5HQZYKTrzusL
MrrskYU/3Gnr6ba5w5cu7Ld9No716Kp8uMbgjb/aaIUbqhsU9eF7GuqMo2TH
kWnXraMxIRG2I12mYKBsMf1kyPB5jns5jynZ0BOMqEbOxtZr6jLjqdplfDRl
e79x21YbYN1NAY5hOGgcGR2ePnJgTDrDu/ZdvXyLk0YYaOv19ulqRcfuxn/4
q0ZB1I2/EJFIZLMY3WbHOIYM8GhjmKDbY6JJg8oiM88Xs1xkOG5Cox66WHfj
fY8bE3xtxyN1qGdds+aV+wAgigheqZ5pm+P91S9fMlCMR0p99pKNURMDQ3e6
9E+tR+G10tnh10pHc2rquoq+bg5Pl4T5wnxh/ihgvmGs/vY4Kfx2HPkmhXL7
DYq+YTZ/20rzZas16SP5iCP92zOv38BIn+WkD8alZbxBZhPjTcLSMh5th8n4
sf7mE3XVDjBY0yPvY6txKU/YdI4xY6nLYdHVcCCY6Kfm2JQ0NM2jlDOxiWOb
YRUI5gIjLdN8F/kfO6MB3t0JMGc5mLkB9MVbfXf1QKPrBKOajTlcVDPPgWj1
aULHUN0Th+DxhOBa+Lu9/qktZy7vLLL/9MQD+4MCYgFxaxB/RpApyBRkCjIF
mYJMQaYgU5ApyDypyPydHc5amxucXO47NGvxRnLMxGfvNbdtfe/SBf0cnO9P
XxA2/6Au++en972FgfUtSYpmmJ8oRo9OnV81Q/zLnpfeSgfRLO+RAgEL0bP6
pYV+a+DpGK/LXpl7yyNpwHnHir5nOTjpJxcGefMzzLDA+Y3/3PZyLDjHh0CE
e2mAWCBm9jopN9YDYL+ddcMGjsXDpYXrUR6HRRPDCBZ/f8n8MPn0gyFPiyl7
Z8b166NkI5Co/xcwuGbDH9ZpWJNeV2pCXMKqI9Ovc3B5hMPa4JJmbKTF5bGL
ryVcfmXns68PA5eELaWf+fhA+bD62tdvToVVsn6EsUonnVZYdTHZNlY/FI5o
pTuTDMoJ8XE9XFrUBEBCQxMAY/RyXEsM0iijDINdxiaGLY7HJDjyslEHxyKH
Ix3Dq5oUNDEBigWPLYWOwzNy/hZ4CjwFngJPgafAU+Ap8BR4CjwFngJPgafA
U+Ap8BR4CjwFngJPgWdb8KRHRiJPabixDI8RXs398uzxKcysbFzse23KHTcK
rsmPlSvb4/PXa+0BRPDIJ0XsD+Gx7OwNu16Lgh13IdWtv8nlvvrsJQNtgh1N
CYX8/pIP7ET2KWrmQD9FOYJ3hXFjHAyie5gt8P7+9AX9cTFJwjscaIX3z798
8O1O4J0FCO99PegRe96ecf2Gvdcs38p7CdGkX5Fh1As6RQLfzdFi+wx497Lr
19PNuqGiXYGhNdqzAAs96kE+z61ufyXqM02H4Dcc00Icr2khfraLZfYskzLB
yppt2wzkJnenlFMBGWO2AjJC1QaQ3ZlFRT+K/8TT3BfhiR1Caeek+tCsGzaY
B+Tcc9FF9HyeH3tdJxyrTafKYvtw/fAZBs1G+3ho+hOVJFoZgapAVaAqUBWo
ClQFqgJVgapAVaAqUBWoClQFqgJVgapAVaAqUBWojjhU429UuTYVQ5cO0TOJ
9sHiTuDSezfDh0esdh11r375TQORjMbgMe8moNynTPmgx2MznwDD0wwGuhlz
j1lUW30aF2t+Ehgt8PWi0e74B69YuomDrimMBerfoyRFt39mTxP4zolN9CjQ
ydb4Mw+7779y2eZI8j2RseArcPChBDd+cbzQYcxZKhR8wtMYdT2Lj+3dPH75
zmXho7ioPjEWjXmORusrLVbZHirzHJV4fejm1bvJ4UacN0Xz8R6bKkD2jCRi
fWqb95jiO0OMALJpWfsRQvYDtz7wlK03yY9e/doJ9LpgMeJul4e4SEtlxuOB
mYziTpNqE7Lz/JDtMn8jN8o5RJlVnhNu9tCsxRtGEKFume/MmffY4YMnrSLM
3feVJdzo5zsJCBwFjgJHgaPAUeAocBQ4ChwFjgJHgaPAUeAocBQ4ChwFjgof
s5cMvHOZeTA0AY7Xrtn8YtfRY8dR3wNHrOT5zZ+b5TGN5Q8vuf+JTsBxxqYn
9g8NjrVvf3/bKIIj1tIcNhztI2pDgJ7vOStfWQIc+cOBLeGYM3cXuf2+n/C7
aAT32eUuDxzp2acpaunbDXojVZ6GXmcYZxlegzd9w2f4uFSbIQ0Jl1FgnGRc
Ols5jTQuE7CVFoNOWXuSqBQhThKTYYiNWKOjYtvXOesfe5WXYePdaARawtV4
RuoK2FLbIcHVTIfgEgyJfujm1U+aPnIO4CbTRn85MoGamKA8eMvq3bQy9lDQ
nHcdhIxEb3vHItw4lhLh2I4XJgwF4do8i3D/vdK8x+z4KSnZl2kR6zhUmxkE
2+bfswPhfGD5A0+R3d4pK74JE6bsk28cOpyCBeoybWgsaJ4OlIHRBoPY+nio
2Kdcdgj7kathtvqEsx6/7sB5zhxVlbeZcK9MigbJXLu455MNRgj38Dey6nNq
3NvJXEk3ydvEPT9VJuFebeTegKiaajVE3CtsCe4F94J7wb3gXnAvuBfcC+4F
94J7wb3gXnAvuBfcC+5Padz3qJdcUKuU7Mby5Wo9J3QQOpyBdOhWL4VgsFYB
DezherUcVGqD2ZNFCx3+wvvTruu/Y8XDv3RT0NsXAQye2qKI2pVs49jQ0wL5
dNdnOMjHHb0o8h++6f7Hl9633u6f2Bbye9yUc7RTfUcGTgW4E4D4/d+JHrgn
TJPxQXqCesk6kFZ7KCsYx6O2tROZtmHczdPrV3Jez6vaPDytVJtvXjxU7Hrw
n3+st7KDl3cMu+NOAZySLPNEJMly5NlwR5Z5HylluVSqBLW2ZZlmYzFP8zfe
z9XHzSLuWe+fs3Qzy0D2s6++/o6d/KStLeDeMD+v427+let2vGqCuW/ureFt
at11FxLUCOgWWtqfusTdexzTFhejeUtLhivW73zN3qkfEhn0Ov6hZ/Po/OJM
jyy2QY/JNuhFtMcTvvj01He+vw2f7QQBPR9oLEWEQ7aJKmYBj8Yp5DlMFvnU
gTf/B8dzfrYMLLp3p2FLEeZQOZatv+VH657D+13lu7bTmXbhTza9QHXuu+PB
GiXKXmu4E3iwp7aX7Gb+B4cfyKT5kldzP1gOGwF5lDaIePeyhaoJgvPWV/V+
5CvveHAPsP6J+m/+tzW9CtFjaubJ0WPHP81ZlW/8rQWVcjkom+v/UqUWpPgC
QPNtOaX4dhVRSincmzXjCcB8h3myGmWcUrRKiaFU7TshODil1MImDaOtqY3X
w5cudCnlZi0tpTC6leNhUIpkjVFKrVRhrE6gVJZTinCMdggWeRxObA6pxC1s
RSW+pEQClXBy8kbLBIDvjwHEGUbxbmh0VI1hFCbuJDGKT39jjFIxmuJCnjhN
gEWMDs5ZqtZdwOWJuhpqTaemYyqln+FcwomoHlQbXKrW1flKOCQcEg6l5FCP
OR/x36JKJc2lFJd4wiXhknDpM6nvZwhfhC/CF+GL8EX4InwRvghfhC/CF+GL
8EX4Inw5jfji8yJ7unDo95fMXzf6ONQVPtUdBhGvxKPi8CmEnbFTUgj7UwuF
0lBIL92fJ+74OHDKccYNvm+ZiZNznvH02vHzDPWVgiTuNEwhSSfPM6hDgKGJ
RjTRR6W0GMaUuMLwNwy6YFSNb30LKUucUQcyySxxZlBQYlUyVV85fhXDFq5J
T5csp4tvppfFalc7nMlo82zyDGGYeba+5mcP8SuOPxTpYxdfW9XjZuBwNsQ8
eUHWH5l23bqMn1mLVm/cawZWQOZAVWjQ9tsL0frsJRsNagqEGLShocLphgVK
IoUbfoWZyTs4NMYSbgkxygI2Dz3CyILyZopLD/RjskHda3yFmCNDTVkXBwS6
U5E1CgkGx5BRCamQUcgoZBQyChmFjEJGIaOQUcgoZBQyChmFjEJGIaOQUcgo
ZBQyChmFjEJGIaOQUcgoZBQyjl4yHpyzbPPwyfjcN2/fejqR0S7109v37gyz
nZRx9eW5t2xpl4w/W7Zqdxoybp9/945hk5GmpwkZR4CMeppaMbp+iFrZpPH5
uW/cvpU8xJBYZwurl5A3v5l1w0YT44EPvXP4dxRfs0bL4UsX2tVKUEzzlNFN
0CY7v/LYs68br2hFrme+dccv8KosMhlWqyURJRr/f3z7T2sYTnE1KO69JlyA
CP91V/P63rnMLrKU4yjACmgUy8iEK65anN3mEfOzaK4kjuE/ba5DzmLoJ+b9
4NHt1969A2Ww9D2zf5fF7uVLBjIhpP6vkWUek4DNxBrrIz5oRGM23HnEzOwa
D9f04jjap4NXLN1EY6LN4dLCfsorRdtAT6ksfMMnhNPkzOiC3dAI3WBIfbgH
6PBJBPGG0n106nwuETqtMI/cMqTAbm0Y8rczb9hI883IgzilgLUepRhPCoNs
HJ+i7UJdVYcpBo15wf76u0EqyRjnkwxK/srvPbgHxx+6efVugrHutfjG5Tdt
4p78/pL5Vb32XS9hrgtWgxRUBysQEbyVXutA0RpIymhd1sNVBifM/eCGUY83
v3bjRnQVhTigYJX607Hnc5pPSHzkE1pp7iY7N2OBLxfNkROgrlfkKzlxJeES
nFZJ8JkpOt5h8qQ1w5wYKfvaKPw1GsLt44Te1jjbRTUELuO4mVGZfEVgKUxx
JkDTCMoks6IS1aU6LIIK8pi625ZWcJiqTBmtwHtavyuqFUpHDINRZsOf14bw
UOH9ijvX7qHUoC2/0NYA7O0zs2ijwgA9aRIGgo+6dAvlifttTqzQAjtSNtQE
fc3YpAkFfnFGkWHyY68B8YlFtoUeFOP0gF+40NDqfJ8NccwxBzaGFy5dYY70
YU4FpgX2Os9aHV5dqKBmQ/yg3I7KdMC55hQdEB0QHRAdEB0QHRAdEB0QHRAd
EB0QHRAdEB0QHRAdEB0QHRAdEB0QHRAdEB0QHRAdEB0QHRAdEB0QHRAdEB3g
OqCnImZJAFigR7cIFAlpJAIPLH/gKV013KBwFIkBJUzEoD0xwFMLIgYn5aIA
3R2beu06O9naEPnCPS++SWWkC9gTMtBZzZJucGGg2ZZJwkBM1n2FwkDbDLcp
DOtvWPk4DCpt3n2gtTBo9xAxmMqfgdB9/WgX6cJ70/WWzKQL5sLjXdojMnmC
8ljMCEVTNTO0hUBQXdpxU8/g1sdQ/l9fu3EjRSE8llIgMLM1rUBgji6FGvFR
871jBALbeVKKuUDQHHFSNqIw8oVjlNJDX11Mc4sV11CO/+hn0eqBFyyvjFrA
N7I1VIue6VufPEAIo8nUq25bU0Ms0eSbP9+2D2Uq3ekUA29V1ELujcUG3UgD
mq5avqZGUcLnSe8dOcrA3L5yGBjBfPTFngEoknrgE+3vi7bqCR2DVLQhV1pI
CEUqKiEoH4aEYPQjDb7wZlHvSEK4OTQklxBqmyQhvv7RF0W6TQmhDZFD6U6W
EEqwMjsiIWuXNvoyiaElXiMSQhPuYyWkqCPslQx9LGuTGEbTeY5JncjaUAlV
plWiu5VKgH14b7bjtifXMEJNYsES5YgFtcV7PI7BxQLHKHn7rl6+hdo7QDJX
QDiiKKHFKkvtYCqdmFEWDak6Masm3RaHkW6jIqEToK6JCBs0Wqgh3fwqIEkP
EuSAYqPJ0SwHa81zYiEMVFK0ec5VDzv9MAT7dADlogOiA6IDogOiA6IDogOi
A6IDogOiA6IDogOiA6IDogOiA6IDogOiA6IDogOiA6IDogOiA6IDogOiAyda
By4SHYjRgX1zb32kEzqwq3zXdtGBEdSBnJqXXDhiJttREMmXU5H7vcL9k8N9
HaJclPdDoD2SK7QfydN/d/T0P3n7nl/TitaffOPQYZiLiY2mpxmbntgfVYCu
o8eOoxqqU5lex9VVgNt/2PdL1EMUkhQAK9CydhNRhr6pP6wHS5/Rx6ZF9+5s
JQG0li+XAEz3/fzLB99e+JNNL5AE0HrGN/54w/NRCcDc0ogE0HLHUQnAMsdp
JACuK+C3koBgHA0FHaV1hvmK1FjOVs1YNRDVFk3gi+dSj1wYfnXlss3cwq0L
VuxsQxjgKOBhAjDWJwwYDidwlK24cy2xwRGIZ771vV8YmDgQM+lENcCMBAJD
JgkE0krIHZpAoAeaM+4RCBiDIqwpjmo04R5HKTuIjVcg1N8JGIFz+/3pC/r3
X7lsE2xGjQYE93KBIAAYiSD0kj9EVgNuDG5l1SQOh9GsPYkoRiWCG20e8wnR
b/swCOcnreiVH4lwnBBQ3I00okgf7SHeUHzU0u4tJMCxTuOoSHnh7tmYR+iP
MSP0t6eFCP1VMJPoPy6J6gWnqjmzokwd1iulF/iZiPKMfGpLms7/dKlD74nD
KWlu0cGoy2keeR6Nh4+zHHT1ZaM7vCCi6zkKKWe19jo9lbvdqwk1JDtbUhe2
+4zBe0z3Cp7mKQhq8/aM69eHAbBPNHCE43OPe13MIJgVMgoZhYxCRiGjkFHI
KGQUMgoZhYxCRiGjkFHIKGQUMgoZhYxCRiFjJ8lYsLmpB9VyJagN2vtvQa1S
CjAbolQqB9X6YE54K7wV3o4m3nY7vFVVapWgVK4Gdfd99rTi7qyBx391xnIX
q3LRXfZRzd19V9/6yJnJ3YuGxt16tRyUq3VTvRZUSuqY8jPP1kulYTOnDGHn
Vre/cqYQNssJa6yzDOSEDUYdY+uzl2wUxrbJ2EqNZmjZY9pPNZWY+19I5mue
Y8rGLOdaH/KUna7zLu+cyU5uBjJhBsBPqq/4qa0YH+Ul5zphLMpLWgWdpvBF
QRT1NEpMlbJ0xKT00CVsvjl2KFFWMUJqL9zHICwaul1c0TCZkIsYjYZQfGWk
o2Ptk05VJdKFpGniGE8hxQEOTRo6n1SmEvmUo1GJT2oN67PbI44eYZwmR7XW
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
qk9NXf0sU+YEEmUXtkH7Mf8PoAHs/g==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"usuarios", "[", 
      RowBox[{"[", 
       RowBox[{"origin", ";;", 
        RowBox[{"origin", "+", "width"}]}], "]"}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Tiempo", ",", " ", "Usuarios"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"origin", ",", "1", ",", 
     RowBox[{
      RowBox[{"Length", "[", "usuarios", "]"}], "-", "width"}], ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"width", ",", "10", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "usuarios", "]"}], "-", "origin"}], ">", " ", 
        "0"}], ",", " ", 
       RowBox[{
        RowBox[{"Length", "[", "usuarios", "]"}], "-", "origin"}], ",", " ", 
       "10"}], "]"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717830878534042*^9, 3.717830909324725*^9}, {
  3.7178436021542435`*^9, 3.7178436024042463`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`origin$$ = 1, $CellContext`width$$ = 10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{
      Hold[$CellContext`origin$$], 1, 
      Dynamic[Length[$CellContext`usuarios] - $CellContext`width$$], 1}, {
      Hold[$CellContext`width$$], 10, 
      Dynamic[
       If[
       Length[$CellContext`usuarios] - $CellContext`origin$$ > 0, 
        Length[$CellContext`usuarios] - $CellContext`origin$$, 10]], 1}}, 
    Typeset`size$$ = {360., {107., 111.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`origin$1667$$ = 0, $CellContext`width$1668$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`origin$$ = 1, $CellContext`width$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`origin$$, $CellContext`origin$1667$$, 0], 
        Hold[$CellContext`width$$, $CellContext`width$1668$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[
        Part[$CellContext`usuarios, 
         Span[$CellContext`origin$$, $CellContext`origin$$ + \
$CellContext`width$$]], 
        AxesLabel -> {$CellContext`Tiempo, $CellContext`Usuarios}], 
      "Specifications" :> {{$CellContext`origin$$, 1, 
         Dynamic[Length[$CellContext`usuarios] - $CellContext`width$$], 
         1}, {$CellContext`width$$, 10, 
         Dynamic[
          If[
          Length[$CellContext`usuarios] - $CellContext`origin$$ > 0, 
           Length[$CellContext`usuarios] - $CellContext`origin$$, 10]], 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {167., 173.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.717830757904873*^9, 3.7178308044289875`*^9, 3.717830836019148*^9, {
   3.717830891141125*^9, 3.717830910591756*^9}, 3.7178385949612403`*^9, 
   3.7178436042963877`*^9, 3.71784681543513*^9, 3.718681263240717*^9, 
   3.7186814369539685`*^9, 3.718681506148483*^9, 3.7186815814211907`*^9, 
   3.721654380024905*^9}]
}, Open  ]],

Cell[TextData[StyleBox["5.Representar el tiempo medio de espera en el sistema \
normalizado por \[Mu] para diferentes valores de \[Rho]. Hacerlo con la curva \
te\[OAcute]rica y representar los puntos obtenidos en las simulaciones.",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.717830958946207*^9, 3.717830971532707*^9}, 
   3.717843730271305*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"curvaTeorica", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", "ro"}], ")"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"ro", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Ro", ",", " ", 
        RowBox[{"muEt", "[", "t", "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Teorica\>\"", "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7178310229566407`*^9, 3.7178310731179347`*^9}, {
   3.7178316824910297`*^9, 3.7178317492977543`*^9}, 3.717833132586971*^9, {
   3.717844140216241*^9, 3.7178441403568892`*^9}, {3.718682401205946*^9, 
   3.718682411649685*^9}, {3.7186825446729975`*^9, 3.7186825873171854`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetTiempoMedio", "[", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mu", ",", " ", "lamda", ",", " ", "ro", ",", " ", "arrivals", ",", " ",
        "services", ",", "departures", ",", " ", "meanTime", ",", 
       "nmuestras"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"mu", "=", "100"}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"nmuestras", "=", "10000"}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"lamda", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "mu"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ro", "=", 
            RowBox[{
             RowBox[{"#", "/", "mu"}], "//", "N"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"arrivals", "=", 
            RowBox[{"Accumulate", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"RandomExp", "[", "#", "]"}], ",", "nmuestras"}], 
              "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"services", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RandomExp", "[", "mu", "]"}], ",", "nmuestras"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"departures", "=", 
            RowBox[{"FifoSchedulling", "[", 
             RowBox[{"arrivals", ",", " ", "services"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"meanTime", "=", 
            RowBox[{"Mean", "[", 
             RowBox[{"departures", "-", "arrivals"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"ro", ",", " ", 
             RowBox[{"meanTime", "*", "mu"}]}], "}"}]}], 
          "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]", "&"}], ",", 
        "lamda"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.717831265654569*^9, 3.7178314039196315`*^9}, {
  3.717831439288156*^9, 3.7178315173902864`*^9}, {3.7178315879243703`*^9, 
  3.717831594010558*^9}, {3.7178317757450905`*^9, 3.7178319867763166`*^9}, {
  3.717832051537219*^9, 3.7178320702397013`*^9}, {3.717832234009514*^9, 
  3.717832328138949*^9}, {3.7178323700702305`*^9, 3.7178323933224287`*^9}, {
  3.717832425670985*^9, 3.7178324579689927`*^9}, {3.717832497409117*^9, 
  3.7178325075012217`*^9}, {3.717832634446438*^9, 3.71783264571883*^9}, {
  3.7178327292538996`*^9, 3.7178327418548613`*^9}, {3.7178327834944906`*^9, 
  3.717832890087246*^9}, {3.717832954744425*^9, 3.717832957382702*^9}, {
  3.717833079183482*^9, 3.7178330911090813`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"curvaPractica", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"GetTiempoMedio", "[", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Ro", ",", " ", 
          RowBox[{"muEt", "[", "t", "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Practica\>\"", "}"}]}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.717832340827986*^9, 3.7178323440954676`*^9}, {
  3.717833015053854*^9, 3.7178330460657086`*^9}, {3.7178331283858776`*^9, 
  3.7178331427425547`*^9}, {3.717844125798998*^9, 3.7178441331360874`*^9}, {
  3.7186823352985783`*^9, 3.718682354703804*^9}, {3.7186826345358887`*^9, 
  3.718682647585907*^9}}],

Cell[TextData[StyleBox["El tiempo medio de espera simulado se calcula como la \
media de la diferencia de tiempos en cada instante de las salidas y las \
llegadas.Tal y como ocurr\[IAcute]a en casos anteriores, cuantas m\[AAcute]s \
muestras se utilicen el valor simulado se aproxima m\[AAcute]s al \
te\[OAcute]rico.En mi caso, he utilizado un total de 10000 muestras con las \
cuales he conseguido una aproximaci\[OAcute]n bastante precisa.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.717844044772341*^9, 3.717844052728545*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"curvaTeorica", ",", " ", "curvaPractica"}], "]"}]], "Input",
 CellChangeTimes->{{3.7178331556599283`*^9, 3.717833161797368*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVlHk41IsexsfQtebOWGcm6xhSUidblvh+HVKUS5aktBGFktOoUBLSYqks
cV3KMtRBRFFupxrbpQ7KLlSyj5kfjRpUnBz3j/d5n8/z+eP979X2PeXmTyaR
SFEr+X87+fM6aqc8bcxCI1eRSEKYLN/jO0Q3gajv5k9txYSgIttz4zHdHnx9
47LjyELYaKFUdIfuAbkxgkXJVUKwbDeuSKUfBesbXuqKMkKozW4wTaaHQQtZ
a9pISQhxMYnhCfTLYL7HTjlLXwhHwz7Tr9PTIVSSZkV2E4JUumO+cLYQ3ocL
9arLhfC03Wj7do2HkGykbC8vPQt7494PNCRWwWBsUWuw/yycqmQb/lv0X9Cr
SS5kvZmFL7d6X4mJcWF/tYpHsMkXeFXXxH27tR4CKwfbUn7/AoERjqu9iUbY
1O6/fEjrK9RJGy0/ONkM+0sdJMpuf4V7nMafDN0/QcwqOPPoGhGgyosC9/JW
SH/q+rDrrggMm9/XNK1/CyUx+dn79eagG91nimfaIUGppiumbg5OyAR39vzS
CQaaJalx++ah5Z3XC/kbXeCgr5i5VmYB3B32Do+NdUPi2B81/nULYJaX6JXH
6oVx26H7g2e/waefad3Ho/vA1mf/Xbcd32Hc8S1HpeEdQJ5q6TDtB1RkDUV0
aA/AKNKvZsosQtE18evrIgfB6CpbLlF6Ceb89vED/ngPtv1vxQmpv0DW/opb
pepHuPnB7co6459wgTIuN+wzBPNDAR6Uw8sg99KA1Of8CSIG+//h7UJC67Mu
fzX8+AReq6RiNWTFMKcwiaOTMwwp9Y1x8KcYHvQ0aZPeOQL1a7gRUEbG6h7/
tJfzIxAcqv4OOOJo0VpBnsgYBQNWX0dJngRqbQuYS7MfA3a0eIpU5yo0NTFN
qZoYA7f0XI9miiQOfUl+zYkfB4WEWzlFIVJIGO+OpxtNwL5KF9cgNRnUExjy
xbomIBR2X3OekMVG1pnO0JhJeCRh1m6hI483u3v83Fg8UDz2NlnkSMGki8ms
Dj0e3NqUgUwXCibobxt3WccDp3xPcPegYPyFqgDnjTxYcDpoyD1IwfOstMAd
5jyg/OhjcdkUPBbmespmFw8y0yS8fe9SEJRaIteH8SDHPDHMeZ6Cn91rU8iN
PKiX4FTEVlJx/n78iadNPBA7WVyjU0PFn4tO20+85sG9mA3PXr+kolxhz1LP
mxXP1qxltVJRX8Q/VtzPA7ulrrOqk1Q8nK5s4/qZB4dfjReK1BWwvTuIf4cx
BSPFc8k1NxXwkaeyncVvU1Dg4d8xeFkRU/8ZzeOyp2D0qHSYX5Iinn7NS3Y4
OwUbBOt5wjRF3Gz9/J37+SnY+150SJ2jiBUsv5CQ+CkQ5O51flGniOVfK7I4
WVNQ8SYCNUlKWJKyS7i6fgpW51uP3Y1RQk5b3J0RBT7kKITJ785SxqTNiz65
ynwIv6/FceEo49nbp9V8aHywZYnOe5Up444DR7J71PmgV9hiGFenjDOETdYr
fT5wmWViu/jKaC73I73chg9Ro79veWitgm1OoUmRQXzYFh1TpUmo4JPyyZ1b
TvJh89rMhiMLKpincEhWdIoP1mtpk+VkVTw94Jxw8gwfmnqly4LoqkgLMrh2
+BIfumJTJYO2q6Lv9Yk4hww+XAlg/JVRpIoLzT7nFer54CLoZa8LpqGGu8OZ
+kY+JIg/eVJ1joYOHzedOt3MhxelMaO7LtMwQ0T262zlQ4/vnFPhHRqaaBc7
pfbxIdpYPnG2nYanI+foCtN8mOKcM6BZ0pHYcKOGShPAhg3qZkaqDFSqOfeo
jiGAdnJ/62VdBlrZHXnwm7oA4tW7dSeNGZjgbZLXwRTAWLX41UFXBq67MnA1
xVAAzyMDZuITGRgwpOdFtRPAfXvy3u/ia/BTCneOEiKAkI1PZPXJavgp1vlZ
aqgAhj/se5hMVcNh9uBFJbYA2h4sOUpoq+GI54IkLVwAussD3SxUw1H6JoZm
rACUHCz9zKLVcCL/ro1hhgB2sAcdq0nqKKiMuur4UgDTGi+alqkaSBTI7mqp
FUAYldfD1VnhtCyKc8PK/sE1E+mmK3ymOsv1lQBUY07kXvTWwBmL6VKvTgHs
nFIr8CjQQGGdT7v/hADOieSiDM01cb7Dih4rT0BZiBXvg6UWkk72LVhQCZhx
sHus7KCFMlLs3llFAh4vfZY5sFsLNWxK0o7QCShQthlhHNfCbSU0eVsWAfYO
w517MrQwPXaOTLIk4NjCsuTMnBYaGz8kovwJ2HJgc1J+vTZufePUYnqcgNVW
+12p7droEDhRPB1EgLdWWfjtD9q4L1f92IFQAmw6blUMftPGWNmk4a3nCbi0
cPDb0V+Y2Dl6vHfxFgFRJJPKDA4TQ9OZtRHPCWAzGnAhWwfdbvsGinMJWDM3
EfhrqQ6aZhQoJNcRwNV+cqnomQ7+yGT65zUREB7h7V3Vr4Px2UyZ5nYCtPM2
yS3SWPifAqaH0jgBF6N0Uo7ksLCxgskrXz0NS3rD3IAaXbxX6ZtiTpmG7pm0
AYMWXbz+qMCyXmEaSIpmsdSPuvivKmZyj+o0RA/saAMJPex/yjRa0p6GnIGK
yc1uejjzknnB0Wwawh+EE89Fehj0v19Xfm0alEoljBY99fFv3lWoSw==
          "]]}}}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJw1kglM02cYxtvKYBwTwSIRR5FmIkzRoEyR6Z5PYZnHBI+BRGAK0U5EEKMh
UpzIRAbLHM5jmxKRDWZkkCoOOeIxDhFnYRYKVC7lhlLKUSjlsDra7/NN/vnn
f3zP+z7P73UOP7rrII/D4RyYvQz3eL7kiw5xEkwX7Req1o2APl+G4kRNqOXJ
ERQLzql2Fmcg4XCB+EHsu+/ZSK0SZQZ8P4JrVw2Vg+Nnch3m6979L0H01/zQ
E9MjGNxpeJOP9fem+ULBKDtfgNrEH8c9w0dhociK2WBRhOQYT6nX6VGmVwLn
hJrmN1WjcAtJK9e6PkB9wRyrGuko038E7nfTN8u2apA9e1qRVYqJ6+Ic8UEN
61cGz9sm3JJADVYbqwLcvCshfsUa1v8xlJUhPr1dGlRoXWc7VCIldof6wJEx
Nk8Vjs5pWXNyyxh2GRs+xUZZk0Wc3Tib71/Ikz5/L9FnHB1ig+AztOdbNukd
x9m81ch86dVzc4kWxwzjxdRgV8Avc28JtGz+/yBvnVO8bI8WHGPJkPO43ip+
qZb5kcHWQfUiWKrFZmODWpwdO3+YG6hl/mpROpV6x1eog6FbSFodJNKYYy3i
CeZXjmOfvvUJW6+D0Y5CjjahKKPhho75r4fC9+yQ53YdnAzjCBqgvhYf8cRh
kuXRgDLZjaCDqychMlYjtu1bsW7rUx3LR4ETKX2nbDynYFDjSxTgl/+zNlU1
xfJ6gd2Rae7Bn01hwiCnfYHrXY+f35VNsfyacOb08JoIx2kY49nQjAh5Jv/1
JzMsz2bYaKKdErxewzjeuRbkP/vJIytshuXbijCBlWTfwAxqqg3VipwjenvJ
jJ7l3YbChUXqhAV6GO3yX6Lst+BS+/43LP+XONLECzaNfQOjXMgr/NmyzDVd
95bxaEeUX+IO77UcQv20Y39knE9KI4dQPu2IUJ9vauBwCfXXDvGFop6pOA6h
vDqwKqtOcM6bR6jfDtyzDEi5fJpLKL8OJN/+I2mSzyPUfyc2aZemDw7yCOXZ
Cevtwzsjd/AIletEmfPfQUIlj1C+XdgrX1HVeciE0Hy6wBku3dCWbEIoni4U
VecteVJvQmhe3VBszHMrTzQhlH83lNbfRN4xNSc0v26s5rh4RNeaEroPPYj+
QC9yWPs+oXn2QPRR2oAmyozQ/ejBPNv+mFNO5oTm2wvxAok0+64VofvSi+ZL
fcejSywJzbsXUv/pL30mLAndnz60dneoC7usCM2/D3mOATXSFdaE7lMf8lcG
2cn85xHKox+5vx+uCjxgw3j0w/vG20vtc20Zj36E2gdnVlhYMx6z/5tmx7+6
Z8N4KLE346HXdNs8xkOJvEJbtdLXlvFQInVMdnXLhwsZjwHEfnxr8ufd9ozH
AERij+5D39oxHgPInskWcXMdGQ8VkrcGCy+7LWQ8VDj08P7KsYHFjIcK2+xc
lsVGLWI8BnHhwv1eVaOQ8RhEY6D/yOKLzozHIOzmp3+lN3djPNQQkb/y0t2F
jIcap57fNtNfcWE81PDNvejyKNWd8RhCHfnBQSlczngMYbLCSV6UvJTxGMLm
yl8dl1d7MB7DqMsvTnYd8mI8hpG4fU+FWbkv4zGMIImlIMBzPeMxAr/wqKRV
YWHkfwrECBg=
          "]]}, {}}}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["Ro", TraditionalForm], 
       FormBox[
        RowBox[{"muEt", "(", "t", ")"}], TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0., 12.167932093686922`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Teorica\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Practica\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7178331682819085`*^9, 3.717838607463132*^9, 
  3.717844158434067*^9, 3.717846827558617*^9, 3.718681455601816*^9, 
  3.7186815246428523`*^9, 3.71868159747966*^9, 3.7186823764242268`*^9, 
  3.718682417236376*^9, 3.7186825716052413`*^9, 3.718682669903722*^9, 
  3.7216543918497953`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parte tercera", "Subtitle",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.7177821608120303`*^9, 3.7177821642212496`*^9}, 
   3.7177822028298335`*^9},
 FontSize->36],

Cell[TextData[StyleBox["6.Representar las probabilidades de estado pn de la \
cola M/M/1 te\[OAcute]ricas, as\[IAcute] como las obtenidas por simulaci\
\[OAcute]n para diferentes puntos de ensayo.Comprobar si esa distribuci\
\[OAcute]n coincide con la visualizada seg\[UAcute]n la propiedad PASTA en \
los tiempos de llegada.",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.717833208340906*^9, 3.7178332161429996`*^9}, {
  3.717835799330858*^9, 3.71783580087678*^9}}],

Cell[TextData[StyleBox["La probabilidad simulada de cada estado se calcula \
como el tiempo total que el sistema ha estado en dicho estado, divido entre \
el tiempo total. Por el contrario, si deseamos calcular dichas probabilidades \
haciendo uso de la propiedad PASTA \[UAcute]nicamente habr\[IAcute]a que \
tener en cuenta los casos en los que se da un incremento de usuarios en el \
sistema, y el n\[UAcute]mero de veces que se ha dado dicha situaci\[OAcute]n.\
\n\nDicho de otra manera, para calcular la probabilidad de cada estado \
mediante PASTA, se ha de tener un contador por estado el cual se incremente \
cada vez que dicho estado pasa a un estado que indique una mayor cantidad de \
usuarios, y un contador general que cuente cada vez que se incremente uno de \
los contadores de estado. Hecho esto, bastar\[IAcute]a con dividir cada uno \
de los contadores de estado entre el valor del contador general.\n\nPor \
\[UAcute]ltimo, las probabilidades de estado te\[OAcute]ricas se calculan \
como (1 - ro)*(ro^n) donde n es el estado del cual se desea calcular la \
probabilidad y ro es lamda/mu.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.71784514015471*^9, 3.717845165520856*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProbEstadoPrac", "[", "usuario_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"arrayTmp", ",", " ", "arrayEstados", ",", " ", "maxEstados"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"maxEstados", "=", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], " ", "&"}], ",", 
          "usuario"}], "]"}], "]"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"arrayEstados", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", "maxEstados"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"arrayTmp", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{"usuario", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"arrayEstados", "[", 
           RowBox[{"[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", " ", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ")"}], "]"}], 
           "]"}], "+=", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ")"}], "&"}], ",", 
       " ", "arrayTmp"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"arrayEstados", "/", 
       RowBox[{
        RowBox[{"usuario", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7172437701960793`*^9, 3.717243776959971*^9}, {
   3.717243909383847*^9, 3.717243923665319*^9}, {3.7172440334422913`*^9, 
   3.717244190433222*^9}, {3.717244443440386*^9, 3.717244512992586*^9}, {
   3.717244642961092*^9, 3.71724468061471*^9}, {3.717244922707569*^9, 
   3.7172449612149477`*^9}, {3.717244993158681*^9, 3.7172451563644257`*^9}, {
   3.717245248783319*^9, 3.717245320639472*^9}, {3.717245553658977*^9, 
   3.717245578282834*^9}, {3.71724567349857*^9, 3.717245696500009*^9}, {
   3.717245728072797*^9, 3.717245731960683*^9}, {3.7172457944710083`*^9, 
   3.717245864956106*^9}, {3.717246065359355*^9, 3.7172461007739887`*^9}, {
   3.717246257526231*^9, 3.71724626409442*^9}, {3.7172463183330307`*^9, 
   3.717246351046378*^9}, {3.71724641386047*^9, 3.717246441746418*^9}, 
   3.717246475988635*^9, {3.717246518957445*^9, 3.717246565269204*^9}, 
   3.7172466042012653`*^9, {3.7178362662477694`*^9, 3.717836268948459*^9}, 
   3.717836811437817*^9, {3.7178369353961926`*^9, 3.7178369376083508`*^9}},
 ExpressionUUID -> "5d3b5fba-8b68-4d7a-9edc-5cd457e3266f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProbEstadoPasta", "[", "usuario_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "arrayTmp", ",", " ", "arrayEstados", ",", " ", "maxEstados", ",", " ", 
      "valorAnterior", ",", " ", "contadorEstados"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"maxEstados", "=", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], " ", "&"}], ",", 
          "usuario"}], "]"}], "]"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"contadorEstados", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"arrayEstados", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", "maxEstados"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"arrayTmp", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{"usuario", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"valorAnterior", "=", 
      RowBox[{
       RowBox[{"usuario", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", " ", "valorAnterior"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"arrayEstados", "[", 
               RowBox[{"[", 
                RowBox[{"valorAnterior", "+", "1"}], "]"}], "]"}], "+=", 
              "1"}], ";", " ", "\[IndentingNewLine]", 
             RowBox[{"valorAnterior", "=", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             " ", 
             RowBox[{"contadorEstados", "+=", "1"}], ";"}], ")"}], 
           "\[IndentingNewLine]", ",", " ", 
           RowBox[{"valorAnterior", "=", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "\[IndentingNewLine]",
          "\t", ")"}], "&"}], ",", " ", "arrayTmp"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"arrayEstados", "/", "contadorEstados"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.717244182276819*^9, 3.7172441828083143`*^9}, {
   3.717246637046606*^9, 3.717246667133316*^9}, {3.717247412785028*^9, 
   3.71724753771585*^9}, {3.717247568848278*^9, 3.717247692335096*^9}, {
   3.717247772692993*^9, 3.717247780033002*^9}, {3.7172479154016523`*^9, 
   3.717247961867078*^9}, {3.7178363310844913`*^9, 3.7178363315063705`*^9}, 
   3.7178368160032167`*^9},
 ExpressionUUID -> "c5ee4dfd-8818-4cb0-a8c6-c0cfa5698c04"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ProbEstadoTeorico", "[", 
    RowBox[{"lamda_", ",", " ", "mu_", ",", " ", "nestados_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"array", ",", "ro0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ro0", "=", 
       RowBox[{"lamda", "/", "mu"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"array", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "nestados"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "ro0"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"ro0", "^", "#"}], ")"}]}], "\[IndentingNewLine]", ")"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "&"}], ",", " ", 
        "array"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.71724332855022*^9, 3.7172433323352537`*^9}, {
   3.717243396503407*^9, 3.717243446607926*^9}, {3.717243535730441*^9, 
   3.717243592672852*^9}, {3.717243623875616*^9, 3.7172437275252867`*^9}, {
   3.717244430676428*^9, 3.717244431967039*^9}, 3.717248387224639*^9, {
   3.7178359110933743`*^9, 3.717835940701318*^9}, {3.7178360013518114`*^9, 
   3.717836132301804*^9}, {3.7178361811810813`*^9, 3.717836195982485*^9}, {
   3.717837161839941*^9, 3.7178371720876303`*^9}},
 ExpressionUUID -> "42df4ab9-b3d0-4290-9e3b-1db789ec587f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"probPractica", "=", 
   RowBox[{"ProbEstadoPrac", "[", "usuarios", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.717244459403047*^9, 3.717244468557831*^9}, {
   3.7178363196752825`*^9, 3.717836322253441*^9}, {3.717836512560477*^9, 
   3.7178365148119307`*^9}, 3.717836592543828*^9},
 ExpressionUUID -> "8aac2cb1-2be7-43e6-9005-70ad26e1c3dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"probPasta", "=", 
   RowBox[{"N", " ", "[", 
    RowBox[{"ProbEstadoPasta", "[", "usuarios", "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.717246688782344*^9, 3.717246725670459*^9}, {
   3.717247866063264*^9, 3.717247871150504*^9}, {3.717247971651699*^9, 
   3.717247990472378*^9}, {3.7178363426102552`*^9, 3.717836405778578*^9}, {
   3.7178365211682563`*^9, 3.7178365252209854`*^9}, 3.7178365895664225`*^9},
 ExpressionUUID -> "3e78b7db-95e5-4867-9e1e-cd02c4cc13b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"probTeorica", "=", 
   RowBox[{"N", "[", 
    RowBox[{"ProbEstadoTeorico", "[", 
     RowBox[{"lamda", ",", " ", "mu", ",", " ", 
      RowBox[{"Length", "[", "probPractica", "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.717836475810938*^9, 3.7178364773890877`*^9}, {
  3.717836537194804*^9, 3.7178365862187757`*^9}}],

Cell[TextData[StyleBox["En la siguiente grafica se puede observar \
c\[OAcute]mo tanto la distribuci\[OAcute]n obtenida mediante la propiedad \
PASTA como la obtenida mediante los valores de la simulaci\[OAcute]n se \
asemejan bastante a la distribuci\[OAcute]n te\[OAcute]rica.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.717245910729821*^9, 3.717245949183343*^9}, {
  3.7172472038533278`*^9, 3.717247214831171*^9}, {3.71724729181056*^9, 
  3.717247309869834*^9}, {3.717837074912682*^9, 3.7178370777236547`*^9}, {
  3.717845475132662*^9, 3.7178454968095818`*^9}},
 ExpressionUUID -> "66c8bc24-bce4-4f27-897e-de4e80b11b87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"probTeorica", ",", " ", "probPractica", ",", " ", "probPasta"}], 
    "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Teorica\>\"", ",", "\"\<Practica\>\"", ",", " ", "\"\<PASTA\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717836634073239*^9, 3.7178366500870204`*^9}, {
  3.718682288831089*^9, 3.7186823046674657`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7GfNBIGT9lABh2qRde4Pq45A+RwOf1Z+vOSb
dADKF3DQdZZ5/chsF5Qv4vAx43HH1h9boHwJh963Wxd8P7YBypdx8Fi/Z9an
66ugfAUHqx6DR32VS6F8JYep19RecOsthPJVHHbvvX7zfs1sKF/NYWpK5cP6
v1OhfA0HwVe6jTOnT4TytRyayjwzDqn2QPk6DrO1F7bNbmmD8vUcxMKez1vP
3ATlGzjs6bwxfdOlGijf0GH6FTe3r3zlUL6RwxrnSxdji4qgfGOHNZe2+Z9s
zoXyTRyUnSbxLJyTDuWbOvjP5uPa8jgJyjdzeBYnLqBgGQflmzsEbRJy2Kwb
AeVbOKzoWzHzUHgwlG/pcKP21tcLn/ygfCsH4dPrjjgc8oDyrR0EbD6ZzTrn
DOXbOEglBOz7tsEeyrd18Ni87F9clCWUb+cw/9Drf94eJvYAJAKIrA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7FfWvvkTlXTSHirg8OL2DpWuTUegfA6Huf1+
OdsSDkD5Ag41EpFttzR3Q/kiDivlhBTNFLdB+RION+wFQ2583Ajlyzjk3Diy
2tp1LZSv4CCl8//NM/blUL6Swy471s9CyougfBWHF/e8n7A7zoPy1RzuMAca
H7GeBuVrOJRnv52VWNML5Ws5iHEtT0640ALl6zhEHV5dvP9nHZSv5zDln9Xv
gNxyKN/AIU/1qP/k+6VQvqHDn2nxj/3OZ0L5Rg510WIpX0qToHxjh1Be+fwk
7gQo38RhgeyFxLSeKCjf1EF3f9nWPc/DoXwzh/jPDx2+MYZA+eYO+tVz3ku8
DIDyLRykunOyN0VFQvmWDkKsDF4X7odC+VbA8Imepu7mAeVbOwjEaWtHablA
+TYOog1vHuvGWEH5tg6v7A0FC4yZ7QE9SnVw
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7D0eVomscz9pDxVwmFU+Z5HyziNQPofDLema
RKPQA1C+gIPM60dmUgd2Q/kiDsXXhT45nt8G5Us4bF1WeVzTahOUL+NgNel0
vcf+tVC+gkPY/NVrb8Qvg/KVHByW3N/HN2cxlK/iwMzZJZ/8bhaUr+ZweqHr
ts9/p0D5Gg7LuNxUS5m6oHwth6+3rzcWu7VA+ToOlltOlO2bXwXl6zn8qsva
UzK5Aso3cAB6xkBrZTGUb+hwfNeOXrYPaVC+kYNoj9crFpNEKN/Y4Wi/Ybmu
YjyUb4Imb+qg6wwKES8o38xhyje2+Bk+oVC+uQPY+7WxUL6Fw5+VHy/5JiVA
+ZZQ90VA+VZQ86ygfGuoe52hfBuovBaUb+sAi0kASBB1Og==
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 30.}, {0, 0.2}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 30.}, {0, 0.2}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Teorica\"", "\"Practica\"", "\"PASTA\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7178366509463916`*^9, 3.717838607635022*^9, 
  3.717846827683618*^9, 3.7186814557229047`*^9, 3.7186815250258856`*^9, 
  3.7186815978775434`*^9, 3.7186823062201204`*^9, 3.7216543922404337`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parte cuarta", "Subtitle",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.717782167077389*^9, 3.7177821688303504`*^9}, 
   3.717782208022376*^9},
 FontSize->36],

Cell[TextData[StyleBox["7. Preparar las gr\[AAcute]ficas de rendimiento de \
colas vistas en Teor\[IAcute]a de la informaci\[OAcute]n para los casos espec\
\[IAcute]ficos que se elijan. Revisar la teor\[IAcute]a.",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.7178375313988304`*^9, 3.7178375400033817`*^9}, {
   3.717843756691986*^9, 3.71784375694199*^9}, 3.718681651033533*^9}],

Cell[TextData[StyleBox["En este \[UAcute]ltimo apartado he optado por simular \
una cola M/M/2 formada por un servidor con tasa de servicio mu y otro con \
tasa de servicio 2mu. Se ha de destacar que en el caso en el cual ambos \
servidores se encuentren vac\[IAcute]os el paquete lo servir\[AAcute] el \
servidor 1. Es decir, el servidor 1 tiene mayor prioridad.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7178376555237265`*^9, 3.7178376932679863`*^9}, {
  3.717845583472287*^9, 3.717845585145612*^9}, {3.71784562372127*^9, 
  3.7178456294920406`*^9}, {3.717845719678042*^9, 3.717845723381217*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ColaMM2", "[", 
   RowBox[{"arrivals_", ",", "service1_", ",", " ", "service2_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", " ", "checkTime1", ",", " ", "checkTime2"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"checkTime1", "=", 
      RowBox[{"arrivals", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"checkTime2", "=", 
      RowBox[{"arrivals", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", "\[IndentingNewLine]", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{"checkTime1", "<=", "#"}], ",", " ", 
           RowBox[{"checkTime1", "=", 
            RowBox[{"#", "+", 
             RowBox[{"service1", "[", 
              RowBox[{"[", 
               RowBox[{"n", "++"}], "]"}], "]"}]}]}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"checkTime2", "<=", "#"}], ",", " ", 
             RowBox[{"checkTime2", "=", 
              RowBox[{"#", "+", 
               RowBox[{"service2", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "++"}], "]"}], "]"}]}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"checkTime1", "<=", "checkTime2"}], ",", " ", 
               RowBox[{"checkTime1", "+=", 
                RowBox[{"service1", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "++"}], "]"}], "]"}]}], ",", 
               RowBox[{"checkTime2", "+=", 
                RowBox[{"service2", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "++"}], "]"}], "]"}]}]}], "]"}]}], "]"}]}], 
          "]"}], "\[IndentingNewLine]", ")"}], "&"}], ",", "arrivals"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7178377248155203`*^9, 3.717837749780383*^9}, {
  3.717837811054866*^9, 3.717837820934978*^9}, {3.717838026623989*^9, 
  3.717838108387513*^9}, {3.7178381891524115`*^9, 3.717838232129001*^9}, {
  3.717838267600396*^9, 3.717838269041065*^9}, {3.717838383465633*^9, 
  3.7178384098091383`*^9}, {3.717838453205223*^9, 3.7178384554723415`*^9}, {
  3.717838546172099*^9, 3.7178385503312845`*^9}, {3.717838740488522*^9, 
  3.717838743275428*^9}, {3.7178388789177356`*^9, 3.7178388803396344`*^9}, {
  3.7178389368996897`*^9, 3.717838947946854*^9}, {3.7178398907902975`*^9, 
  3.7178399003991833`*^9}, {3.7178399875144324`*^9, 3.7178401870574408`*^9}, {
  3.717840217070574*^9, 3.717840350692523*^9}, {3.717840923416621*^9, 
  3.7178409795099096`*^9}, {3.7178412588371363`*^9, 3.717841335275081*^9}}],

Cell[BoxData[{
 RowBox[{"ArrivalsTime", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ServTime1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomExp", "[", "mu", "]"}], ",", " ", "muestras"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ServTime2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomExp", "[", 
      RowBox[{"2", "*", "mu"}], "]"}], ",", " ", "muestras"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DepartuMM2", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"ColaMM2", "[", 
     RowBox[{"ArrivalsTime", ",", " ", "ServTime1", ",", " ", "ServTime2"}], 
     "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7178069791166325`*^9, 3.7178069913902035`*^9}, {
   3.717838479463435*^9, 3.7178385149297867`*^9}, 3.717838568614346*^9, {
   3.7178386447660646`*^9, 3.7178386475161247`*^9}, {3.7178413609438877`*^9, 
   3.7178413656256213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListStepPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"PointStair", "[", "ArrivalsTime", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "50"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"PointStair", "[", "DepartuMM2", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "50"}], "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Tiempo", ",", " ", "Usuarios"}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Arrivals\>\"", ",", "\"\<Departures\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7178387931682854`*^9, 3.7178388033430395`*^9}, {
  3.718682788778043*^9, 3.7186827892960467`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxNx2ss1XEcx/H/sjBjqfXA/VJSygzH/ZIvjuuMoR6kktMOMpUop3Jw/sVy
eyDX2bLS2Awjl1w6JAdFbh2iIkcct5bCymWkVFv7/b6f7b3PXoYXY4LC9zAM
w//bv7cRcqZ09EtcmP8LKreK+5FeSTzSgL3qIm7d4cWmPyXelmAzILoS49db
1Uj84jq2MoS4pstHlTqIE7jY6hCZNNCi79ZJnMZiH4Ryk/kwb8Mu4h5TbA2I
5jt7cMapsyKxdaDXqzR+bbeb+LMvtgE8Dx3aZwSviGU87EPw8IncYK9/D3F7
PbYRNOUUaJkM9xK/y8c2BtlUSkWioI/41wz2Mdgev2FdGjVArCXDPg6neZKJ
r/aDxPF8bFPonyiqzd+kXpJhm8E5h5XbOaIh4kRnbHPg9/Q3J+dSp/ZhW0D3
9Nyyn7qU+JQc2xISIu7tZwypVS5hc+CEheiAhZC61RLbCoqXk5Q0fYeJTVex
reFZT3aVWHmE2Oc1tg3orfGuhhqPEtesY9vC1p3VdAefMeKMFGw7SBzklRVn
UKu+wbYHsxSV1J95H4jbU7EdYKUz4IysbpxY1I3tCJevcducKiaJd2KxncB/
WMKIv1NPjWA7g6SliR9dKCMOFGOfBLOOiK2CsSnidgm2Cygkyxv1Hn0izhNh
A+jGBzY0TlNXC5BZgILsOGGq8jTx+fvIjCs0/7auXw+mFu0is64g/yiL0pRS
V04iM25wwd0mbGuJ+igXmXWDlgWfqDGFGWJ2EZlxh1wtpQFWmzpEG5l1h7cZ
toobbdQPMpEZLjQ0btRGSKmFTcgsF9IEZUXfquXEATeRGQ/QbT3yUl9KPY/N
ekB0jtqi9D01JxeZ8QTthWHzTrVZ4lls1hPO+tTadTlRH/ZFZrxgqETZUZFH
XfgYmfWCLL7ATCmTOjgcmfEGcfWXWxr91HdrkFlvqNsM7TJRnSP+A8lt3Nk=

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxNxw0s1HEcx/G/iwupbp4SWiEqz4fzzH3P4808pbWZNsvDrRkl4rQ89Dds
jEoqopliKpMWGqK0HENnnpYReehcTDVrekK0amu/3/ezvffZyyQ2OULCYRgm
/m//fij0QfUcr17I/J9UP3/FlNtC3GaM/UW42RNcZFXQRuw+iM3A3Ywamzi/
Z8QL2djq0NsYzJ+xfEWsfIzNg8sTk8X5kT3ENVPYuhATNHPkt3kvcW4ItgHs
cTlhu8uf2tYd2xgGf0qSV7v7iVc2sQ9BxWnFhurTAeL2OGxTsB6Yzwz7Th0s
xz4Mthwj9aiSQeJQNWwLuBGUXhKQJCduDcE+Ct3RkWrS6SHiuRhsS9DSLOs0
0homtt6NbQ3nl3xLHrpSl65g20KiYR83sZe6+AC2PZR6N+m7aIwQPxFh82Fv
p/ScxGSUuKYL2wFqZa2CRGSHPmxHyLJrO673klqLj+0EE2fKsgpGx4glCdgC
MLmSaWZ1b5y4+Sq2M0jT5eaCs2+IuRnYLuDdLKvbWT5BPNyC7QqxdiN6BnPU
a/bYbpAX2Zh27PVbYp0obHfYr9Z/MvP6NHEDF9sDrBYnKh0/vyPuUmJ7gr5S
fI2/RX3/A7YXJI1GpOTUzhJvjWF7g0eh15i8dZ5YXoQthGhOvHOqxgKxxQ5s
gNGvfau8OOrb35BZAL6N1lpeGvUGNiOChhUpzC9Tp3xEZkXAO3VQrr1OPYXN
+IBARWf9EvOeeBub9QF7kdg4QZd6HZvxBSexUGZhQb2FzfrCnS5OascCddxz
ZMYPBHqfDKs1FcTb2Kwf/LrV1GzWQS0rR2b8YU1F3mrstkjcyUFm/WG2Njen
PIy6vg6ZCYDxFxcKs8Opq7qR2QBQLnkyLRLqR8vITCCMKdoVsknqykVkNhBG
KisuJv6grqhCZsTQpp92yFlVSZyzD5kVg+Rm+ACjTf0H7cjABQ==
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.6271976387403241}, {0, 49.}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["Tiempo", TraditionalForm], 
       FormBox["Usuarios", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 0.6271976387403241}, {0, 49.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Arrivals\"", "\"Departures\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7178387874198065`*^9, 3.7178388040319424`*^9}, 
   3.7178413750651665`*^9, 3.7178468277304955`*^9, 3.718681455785343*^9, 
   3.7186815252155523`*^9, 3.7186815980939136`*^9, 3.7186827924576435`*^9, 
   3.7216543924435606`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListStepPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"PointStair", "[", "ArrivalsTime", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"origin", ";;", 
          RowBox[{"origin", "+", "width"}]}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"PointStair", "[", "DepartuMM2", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"origin", ";;", 
          RowBox[{"origin", "+", "width"}]}], "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Tiempo", ",", " ", "Usuarios"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Arrivals\>\"", ",", "\"\<Departures\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"origin", ",", "1", ",", 
     RowBox[{"1000", "-", "width"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"width", ",", "10", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"muestras", "-", "origin"}], ">", " ", "0"}], ",", " ", 
       RowBox[{"muestras", "-", "origin"}], ",", " ", "10"}], "]"}], ",", 
     "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717838709196846*^9, 3.717838709571888*^9}, {
  3.718682800913948*^9, 3.7186828014600873`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`origin$$ = 1, $CellContext`width$$ = 10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{
      Hold[$CellContext`origin$$], 1, 
      Dynamic[1000 - $CellContext`width$$], 1}, {
      Hold[$CellContext`width$$], 10, 
      Dynamic[
       If[$CellContext`muestras - $CellContext`origin$$ > 
        0, $CellContext`muestras - $CellContext`origin$$, 10]], 1}}, 
    Typeset`size$$ = {469., {107., 111.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`origin$2121$$ = 0, $CellContext`width$2122$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`origin$$ = 1, $CellContext`width$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`origin$$, $CellContext`origin$2121$$, 0], 
        Hold[$CellContext`width$$, $CellContext`width$2122$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListStepPlot[{
         Part[
          $CellContext`PointStair[$CellContext`ArrivalsTime], 
          
          Span[$CellContext`origin$$, $CellContext`origin$$ + \
$CellContext`width$$]], 
         Part[
          $CellContext`PointStair[$CellContext`DepartuMM2], 
          
          Span[$CellContext`origin$$, $CellContext`origin$$ + \
$CellContext`width$$]]}, 
        AxesLabel -> {$CellContext`Tiempo, $CellContext`Usuarios}, 
        PlotLegends -> {"Arrivals", "Departures"}], 
      "Specifications" :> {{$CellContext`origin$$, 1, 
         Dynamic[1000 - $CellContext`width$$], 1}, {$CellContext`width$$, 10, 
         Dynamic[
          
          If[$CellContext`muestras - $CellContext`origin$$ > 
           0, $CellContext`muestras - $CellContext`origin$$, 10]], 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{520., {167., 173.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.717838714795868*^9, 3.717838748284705*^9, 
  3.7178413876397767`*^9, 3.7178468277461205`*^9, 3.718681455802368*^9, 
  3.7186815252345533`*^9, 3.7186815981149144`*^9, 3.718682803640996*^9, 
  3.7216543924748077`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ArrivalsEventMM2", "=", 
   RowBox[{"CreateEventList", "[", 
    RowBox[{"ArrivalsTime", ",", " ", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DepartureEventMM2", "=", 
   RowBox[{"CreateEventList", "[", 
    RowBox[{"DepartuMM2", ",", " ", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListaEventosMM2", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"ArrivalsEventMM2", ",", " ", "DepartureEventMM2"}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"usuariosMM2", "=", 
   RowBox[{"NumUsers", "[", "ListaEventosMM2", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7178296508567247`*^9, 3.7178297879400463`*^9}, {
   3.7178298616306477`*^9, 3.7178299049989433`*^9}, 3.717829960021055*^9, {
   3.717841437448449*^9, 3.7178414805406933`*^9}}],

Cell[TextData[{
 "\n",
 StyleBox["Tal y como podemos observar en la siguiente gr\[AAcute]fica, el n\
\[UAcute]mero de usuarios m\[AAcute]ximos del sistema se ha visto reducido \
considerablemente. Con una cola M/M/1 ten\[IAcute]amos aproximadamente 18, \
mientras que con una cola M/M/2 tenemos 6. Esto es debido a que al tener 2 \
servidores, es posible servir dos paquetes en paralelo, reduciendo de esta \
manera los tiempos de espera del sistema.",
  FontColor->RGBColor[1, 0.5, 0]],
 "\n"
}], "Text",
 CellChangeTimes->{{3.7178458686565876`*^9, 3.7178458810850267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "usuariosMM2", "]"}]], "Input",
 CellChangeTimes->{{3.717829974072139*^9, 3.717829981726307*^9}, {
  3.7178414839503727`*^9, 3.717841484371851*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]], LineBox[CompressedData["
1:eJx112s019kaB/CHmumXGfWvkFIp1YhUM2VJF/ZD0WVUMq4hQ7oZDd2momho
JrcuagxRI0Iuk1uto1IZJl3pok41UlQ4yNGmmS5inP85b86r736z1+fFfrHX
2nt9n+84vyCn1ZpEdEmD6L97XJ3zcO+hKqb/LR2e9CR+VpgusorHnftwqEof
WeGPf3oRFDoSmfjG/riCv0chS/Fa+/z+PwyRia4lJ9gZmSFLkeW2xH/DNGTi
YVdiq6qhpai73LZY1wKZeFlmaZsxtMIXj4Sk+FkiE9v7HsiLsEGW4mxHn0vU
AmT1geTHnWsWI0vxsMzKZ7wjMvH6Lde8/FyQFRaew7UvQhNrDo5gHQ9khZW2
5h/bPZFVPFdjndNxb2SF077RSL+3Epn4J+s8c8M1yApXVYz1LtmATHx8cn9L
1yBkhRe7z86rhiZ+YqFxwykYWQqPcsuAuZuQiXM6f1ikuxlZihrbW90J0MSt
B1Izbm5BlqL32o4a863IxOaHlD53aCkOKjtGeG9HJhrVNdOnNQRZCuch7hWt
4chEVcMKzydGIUuRbvnYxyEBmfjRyH6feR5DluJ6fMZUizRk4oFb+unqpSNL
EXp3knXuCWTiwN/Ljz3NRFZ4WtczQ+csZPV/39fjFZ6NrPCHj98+s8pFJo5Z
uTDgcB6yFIuynCpPFiAT+4moVxMLkaVwOXkl+14RMrHPe51lp4qRpfAaGtrw
5CwyUev2gMS+c8hSLPE90JNfikyU2350zBNoKUZVd7fv+Q2ZaBC3jLMtR5Zi
Rf63Rquhif/c9aZmRwWyFGHiTNCga8jE0YGp00vvICvsO23pho01yMRxQzr0
Z91HlqL0rUvHxHpkdd5PnOtT1oCsvu8v8Q7Lm5CJ5+e2x4lWZClsvtfK8mxH
JjKIKti39R2yFB+GT7mUQUOAiU2Ojqs01kRWOHHs+gt3+iOrOGMk+7IWssId
zfl7rkMTjz/88/R92shShLSfNNHQQya6MGZJzk19ZCnCdXXzukYgEz2snp1m
MgZZipehfV9eNkIm7pmztdxuArIUug1D5thDEw2eWlN6egayFI1tI5uiGJm4
uCNh1YqFyAqvyjnlMWYxsooPnxYLHB2QFU7N7Ii46Iis4gmK76e2y5EVntg7
ri7MDZn4TFnJ1YgVyAqHUERMnTcycWnJ1Ysv/JCl6Kpr9sj1RyZa3qHfc3wb
shSfGmfI+duRiSorzFNv7kSWYmbKqPkLIpGJXEcYLr13HFmK5sRdZkbpyMSz
joSsTsxGlmLwAHm18Vdkol9Mmka75CNL8Vm/4LlPCpCJypZRaEIlsjovY54b
OF9HJm7sqPRquIEsxeUjDadqbyITu4+06HWtQpbiVlSTw7r7yOp573rdgH/+
gSxFsfu2Qs+nyMS7g+uPz2tCluLGdy6m4/+FTOwUuS/CrQVZ4fQ/37V2tCET
h8xYeNXoJbLCbtoLg262I6vYyzQ+o/sVssLunRWRC14jE29b/vjWlPfIUvy6
1+3Gy4+GAqs7c6DB6AfDkdXv3WeOxsYxyMT1W8NcYgyRpajN3qz13AiZyDo+
9vba8chS6L0x2r0DmshxT7FVxzxkKYYnv0jeuwyZaMsZ/0/CE5Cl0J875h+Z
icjEeR72O82OIkuxu2rv9MPpyERTsv82T4GWIinBp9szC5koMDvNalEOshTT
o+d9b1qATPS28otzscXIUkw8+2FQLTRR0vrahvUVyFLEVNcrRtXIxFeGhpS3
3EaWYnLZtMZuaKKS5VO7+t1FluKRfVFG+QNk4s5wW9fWh8jqvPzyx5rRj5BV
bG63Jc3uKbLCWbJqUmMjsoqDDcZ+HdyMrMMWOT2rZrYgq/jnzs9trFqRFT6z
p9rFtA2ZWPu2a9IzaPW8/HltXPDfyES14d9WldoOA5bi8Wat3fPskYmivyms
bXZDVuflqvaMmyuRid61BpiZ+SFLoVUaa/0mAJk41dl4u/UmZIUtf9ARSVuQ
iZ0j/QaeD0GWoubxGquqUGQiY4cWs4FRyFLs6Gq2L4VWvwjrEgPnaGQphu3X
NnWIQSa+WpZr+BW0ws9mp5QZxSITn6vblhobhyzFKadjvqdTkIksUoR0yESW
wrv3uMNXOcjqvt6tN/NaLrIUbruWRA0pQCbunTFM/00hshShRSu2W99AJo6I
+sTI4i6yFIVL+gJXP0AmGjDfKd7jGbIUb/Mda2ueIxNFVhzo++sFshTuvS+m
hDYiE2/YtK5KowlZ3XeTzoYtk8jEoQVbVaadyAobcJfJqzfIxK91km1nvEeW
wvf5zPWTPyATB+WmX/bX0AFW2CFgUksqNPG9AQn/fqSJLIXddhPf7o+QiQbq
dX09WQtZCte+HutTg5CJ5jyoyDVWIUtx1Nk/wWMoMlF51n79kbORpYiyua9Z
MAeZ6GC9Y76NPbIUo3J6RqdDE699Nc8tzQFZCtsN1WPdlyIT+U6vyDrrgixF
dNauAnZHJp6Q8Zd2EbQUOhmR1+y8kIl3RgceyoGWIviWTWaZPzLRw54Sxeo7
ZCn61Q+YqhmGTPx7SZKLfwSyuq+e6P9+bSwy8Q7LBouog8gKf2GpLVcdQSa2
Lw56n3wUWQoLu5KNxoXIxBeL7iwSRcjqeWdyeF3YBWQV66VvNr1zCVmHnU1P
XJn12//9H1BXw7M=
      "]], LineBox[CompressedData["
1:eJx12GlYT2kfB/DfpPhnlChTWlBpJktJWQq5b21KVCoyGaKFSrIlLUORpOxC
DUNEY0sRaUohiiaaxFSTMtrmSWi6K7RZnjPPm+fV97w45/pc13lxrvt3L9/f
0fVe5+onR0TbpNu/z9Deku0h99Q4/e9S4/7jPvechlbhcSVPO6yLkGV8lnqh
0yto4kojTKptSpAFC/jPs1J7aOJ756as9SlHFmz6XLmdDfXIRNlaTTW7u5AF
i631WfkWmrjiXsfIPe+QBUsvmxd0tBuZuGODj5NbD7Jg+5aV71LvRSYaV2xT
dWX4CGDB/MKH3u8agUwUVjW5MFUbWTCngocpL0cjE78/yaxPpo8s2HDbqL7C
ScjEnyYetTOfjCyYXWFQ13xTZOLbq/bHLYIW7Fzb5ENfpiMT169dZJzJkQXz
2jDn6jZrZOJB4pinih2yjJNjc1oUNPGMKlV/ZRdkwURrqWbqEmRpvPq9Znz2
RBas9VX+cbkgZCLFxJdvj29EFuzOCaVFV0OQiUqnV0a9j0QW7N7eQY+CtiMT
f2XxYpl3DLKM7zl24/nVncgqPP1QwSivWGQ1XrFg8WJZHLIKd/FfaxKdgCzj
5hoO3zYfQCZ+N73hQ9dRZBm3W+3tr52MTDwxKsFMdhxZWu8nFmsWpyATT0p9
bZd7GlmwGGPL9NIzyESVP8yudSpFFqzy8SC/2nJk4obKlxZcfIIsmOeS2dPH
P0UmWrB5QM+FamTBQhQ/TciGJtI77Vk35yWyNF97c9f+3ohMfOIQa9X8JmTB
FmaYObZCEzcruJdm3ows2NBTirq2LchEyTlvi39/hSxYwdD/POl+gyzVqz3n
Iu9CFowckrSmf0Amriw/6KhVD7JgL4cUkI3iN8BEdV31mSfVkQXb7p0500gf
mWjD2Dxt4/HI0vsn41caGCETVU/Q+fTAFlmwI92an9OckIk3j8qf5OyKLNjJ
0lcPG1YhEw0xd7Xx8UcWbK9zg/flAGQinc+Z31kEIQvWNfipm8c6ZKLYAQdG
jQ5DFqxpvWdzXiQy8ay7IXd6f0QWLO/c/pGntyIT7b/5LtBiB7JgEfnJiZYx
yET3L/rKuR1EFuzzV1W/9CYhE/fs1OmemYosWHPO7P7Ey8hEtzTm9hjnI0t5
4XuHsCZoouDiE/MtC5EFezDy9fkMaOL1H7KO7riHLOMn4lOUC4qQVfiAikM/
Kj9ElvHq2lHqTr8hS+dl9Nr3IdAyfm1MR29xKTLxvMdb/ZXKkAXrPKhQl1CB
THyBoWPGlEpkGf+ipamQXYNMXJw3VGqoR5bx1RN+HVLbikz8YFCBw9jXyILl
eE31jW9DlvJ2pYP64k5kwUr2HpItfYdM5HfrmzG8H1k6b15GD1ssrw5M3LTy
Rm2rArJg0X3tw+SVkIlHXutMdYcWzKFojMnG4cjEa81nxMmpIgvWu/inqYma
yEQXgo7e3qONLFhovDgToYNMpBR9RrHaGFmw7wOSXwSbIROlbW7I++KKLJj+
kdL4Uk9koqzazdr7fZEFaxidfs14K7K036uWrevehyyYckyEqd9hZKKdJd2J
U39GFiwjun1uGzSR89xnLOwUsmDTMlcfs7+ETNzgxEn7fenIgimEWrbcyEAm
ftNhfJvuNWRpvqls0o+7gUxUPE7ulVEOsmBXB924sDQPWeqX6mOTz95FlvJa
u723631korbxn/2DSpAFq9ocanr+N2TidRl2l3XLkAVT0/wzPQ2ayD4waeHo
OmTBPhrb/Hb7JTLxgLweObd6ZBmfeXsbV25AVuHLCo8d/rURWcZTXiQ0erUg
S/UuePRR8w2ylLfkP7Xthyay/WDvVq6oASzYH9frLDo0kIkvGdSy01oLWarX
zbJvbHWQpbysMniGG7TUrz/WbpljgiydV3czI1tNkWX8uIbl2X2WyMRzd/mv
7oaW8g73ThzHkaW867Gl1BpasKJ/og4tnYNMlP/idnigPbJgC47FJGeuRCZS
kL+SUAgtmFvLhNXtPsjEP/7U/0u/L7JgweuiEv5Ygyx9b4FetWsIsmBlM6rc
/CKRiZbP63fRPo4s2Mb5WS90riAT74/6y18+C1kw24R8D/VsZGm+h7m4eOYi
C3Y5xT23D5qoh7soBxcjC+a8cYXTmafIUr/TdS/OpQ5ZsDUrP745Ak10ZKb5
0z5owQysLE3z65GJvy46FhTUhCzYZAUna93XyEQOKT7ZOp3IghnVxbikQBNf
scGhJqIbWbBNjTFToqCJn3HXSC3vR5bO2455phO/IBNfJN/60xxowfbUGJ7f
/NVIYOLzd6Xd8ZJHFux3j40nD3+NTHTOlwqLNJEFG5z1sGunLjJRNNlcHGqM
LJhW9c9ltWbI0n5RZmYwbQ6yYG231g97ZIVMXN4rwFLNFlmwt/r+ocn2yFLe
ywp/PPAHZCkvrN22ec1yZKKWJLut8X7Igi1XyA2tDkYm8ikfvmDWJmTBxig9
mLJhCzLRloC+rebhyIJZ1qW0K0QgEy3OnHUjPhJZsOofwhQG70AmXtO0290x
Blmwv9Jn9x2BJq4W+HJo5k5kwVZaFH5fE48s5f2mseZPTiALdqe71Pn0KWSi
TeUx67yykQUrN41aNuUBMvHYnsMHB5YgS/W6byU3rRyZ6I6Vtq1eB7Jgfq23
n33oQiYKCYnJPNCHLNh4owGz73xCJioNPzLFb5AmsGCpH+3bo2XIRAvvyw1f
ro4s9dufuiO0NZCJwq9NPLB0FLJgjrpTuZYuMnH/WKNVWXrIgq3nl4YOMEAm
flw+/D0bhyyYR3xh0xkTZKLmrwP195ghS/Ml+1OTx0xk4ve/rhiyG1qwXXsd
e40skYkrBYZULGTIgq0bHb3gPEcm3hVsoaRihSzjJu/CrBPskImHvZUbuNcB
WTBFb2vbqUuQidjFgLZ9y5ClfqfNYOIYL2TiBa5fqvyhZXzILr9wg1XIxN1C
AuM3+SML5u1/zWdDIDJx2Xd3bXevQRYsysL34JNNyMT1v930V2UosmAFH2Ya
5oUhS/tF3tOy7QeRBXt20lYvDZpoiZy2VVIismAJmRVhaknIRBUVwZc2nUQW
rFvnle+U08jSend/ZDP9LLJgfVqq+mEZyEQjPTtijl1FFmyCyo/vHl5HJm7y
oKAp8gayjH/ZklepmIOswkeJCfnzoWXcuDP1vd5tZBU+z6Yt4Sa0jI9Ifl//
uBiZeGok7f6uFFnGg4e71FyHJv5o6rCWKY+QBVOt6+r+B5po1fXsT7srkAWb
tGZl85o/kaW8+uzx89c1yDLuMWLC2fZ6ZOLnnkfdXPE3smAXcto/yv+DTDxx
XmPkxA5kwaxGir/1OpGJnmsUJM1V1wIWrGGs1jzZRGSiH7sNJzZCC1Zv0bi2
E5pofKNizBl3ZMHCLK9EJHkgE9e7ZNSxZgmy1K/qPls4ywuZ+GhSeBLhjSzY
2UnOIwLXIhNZZHQOtg9G/vd/u/80Wo9M5Pb48k2LDcjSeLW5nNLahkz8atTs
OtUoZBk/HFDAnHcgq/Dg94WrXXciy7i7RdGVmXHIxItzcqt37EEWLHx9v2Ps
PmSiNx1TW/WOIwuW6duV9z4NWbo6e2NLriILNmPFwN37riETD48ztB95HVnK
28FmNx/cRSZeLjpMXkELVlRkWL3xATLRge4DobcGaAMLtiqsa+FIBWTi2pHO
z6MGIQs2JLe4KGM4MnHufou9VkWW8RNX/l7fBa3C09V8lA3UkNW4fNNot60j
/u//AoZQ5ng=
      "]], LineBox[CompressedData["
1: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
aAoyiz23uz5V80Mm8s1ofvLDEmQWqU+qXWcFIxONdBgzvtNG5P/9vsXs1DkR
yCTfXz2RFROFzKKjRdiRzG3IRAYLMu8G70dmcXN02vGBB5GJ7sv8VrOPI7M4
9GWG34RTyETZXssTq64gs3gesXPClavIJJ8OeWJQAq1cP/b26KLryCTPpa06
P/MGMou7efvd6+cgExXnJ46+U4DMImHSzj/Pi5GJtlT1PJr2DJlF1JE3eSfK
kEluDf495RY0izl5HQ9NeY5M9Ci8S+b9CmSlbzWMdn0FTdKj33rDcmgWxvpR
nftWIRO9H5KdNekLstKXtXJ2G31DJmrj9e9k+1pkFlZ2Ex0dfyIT1Xbf0U37
DzKLz718X7n+QyZqN2natfFqnYFZZIRcV19RD5nIdNAiiwcNkFnMaLU6xakx
MkmrHyOvOGohsyiI1xSpzZBJXvd8NzpbG1k5r5zLl+c0RyZqde777pBWyCws
27hOnqOLTHJbQW5C29bILHRfz79VAU2y5xZLR309ZJXMOdq8oEofmaS945Zu
E9ogsxg3+puRhgGy0leC5z/aC83ijc5nmWqITPQuoXlV3x7ILDTbXNNLgSZa
9NDxyHtLZOW8MK1L9LJGJpmr8cvhObRKbtyZ45xgg6wtyyZY6jTpg6ySo7Jk
7Spokp0cq9va90NmcTS1VW4htHLejDXaoSWQWZjHLU9Y4oBMZGW6++19Z2Sl
Lwc6JngOQSbad0+qLxuOzMJRp+7jaWiiCTfGVx4YgcxiTLcr+xZ4IZMcXBZU
ZDEOmcXu1Mr3YyciK3llmNU8OROZxVdzM+NLvshEblcNyk4tQGbRuvzVz3lB
yEQvT2XsqVyPzOJpn1njp29EJjrtv8r44iZkFgF9vSI3RyATdQ49b7IuEplF
vNAPyIcmqSuKOt7ZjMyiSNcrxXwLMskGK800RkKzmG6zfpDbVmSiE93ueodF
IbOY/3dusx07kIkmqjwc9fYgs+AZ11aE7UUmMjv4dF7GIWQWFyqt13ZNQyZ5
tlvc5FnQKhnU7tGTKmht6eU0uMr+BLJK/rgpW/NJZJKWTyYtE+nILEq1mqQ1
OYtMtOmR7YnA/5BZdO8fea0ImmhW/qbXdy8gK+dFfl+7yExkkk2jm9ZXu4zM
ot9uvwstriETPcjrpx93B1k57yc453yEVvJuj/dVNiXILHbZrO6x8QEyke39
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
TGRROcHSphCZhfuev3PeQRNV/Mo42aAImcU444LfxsXIynnlsWTRiBJkFkPU
b23XuYdMdGd4okbsfWQW9qNmRqx6iExkdyauuvcjZBYGGRkms58iE1XXPj1e
9gyZxY3Dk1frlyGT1B28PagEmsW76xZDW7xAJnox3HHZC2gl7+n1mJPyCpno
wafs194fkZX92lSnJOoTMsmlQXfy9kOzcKraOMr1MzLRzkE+U+Z/Q2bRX7es
3LUGmSiq2/kmt38gs1g+0zLxQx0y0YYxfbqMU7cAZrG3zf6vAxoikxzqEH5i
NjSLGaNn5pepkEl6fF49J1kTmcXVNwssihshE72mN8FrdJBZnA/QGaHTCpnI
bOOl49b6yCy8Ft+0cG+LTFRk0k5zhRGyMi+KbrU1b49MtP2/ew45pshK3v/u
mvbVDJnIoWJJ3yRzZBb/Gl7X+GeBTHLxwsTM25bILDTSg2Zf6Y1M0mKl9VcN
a2Ql79+NpBpoomHzooIn9kFW+rq51Zmp0ER1aQU5wbbILNaN+3LBdgCyMi8t
F6+954SsfL83pj+eOASZZBfDMeoroJW8mtzWv2AYMskzmfVj97ogszDyc7pk
OByZ6Gu3JuaNPZBZdP3ea43xCGSiPjof6hygWYywb+UQAE0y4JhbzXNolXQJ
uXzsHzTJ2i0m1UmeyCx0Nfdo50CTrFdeblMNzaLttldqiaOQSV4649ug9Whk
Fn2biNj+Y5BJqiY4vBwKzaKzzckqk7HIRBO77Lp7F5pFSOzRtWYTkUna6dh2
nAyt9GXns5uHTkYm+q9i1895U5CV9/1Y2thW05CJVqo83iyDZhFo7znu6nRk
op9L7i/RnYes5DUT1+wp0ETdNxnsaxSEzOLpnsfdTy5FJvkxbtj+q9DK/Tp0
NiuGJjmuKsv/ATSLUZOLzmsvRyZqvOjE6CNrkFkkm7ULHBaKTNSxlW3eV2gW
cw/395NrkUmmVtZ1nAvNIvvXl5d71iOT/Nuo+Z32G5CVvLX6vP3ijcjKeVk+
vL9xGLKSl2ZM2jcqHFlZ77ULx5dAsxi+LsM7KQKZ5PPOMbY/oVlMl/We6mxG
JjowO7g2GJpFLXfx1ItCJnk9+eLVcmgWQbuC6rbsRCZaVDzMyHYXsjIvbY69
/wJNFDNkZAubvcgs/Bb/TomBJtrfJH7I233ILHbc33S/FlpZ76GxqoQDyCx2
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
sQhZizv0P3psV/H/+/8AtMgtcw==
      "]], LineBox[{{26.810938711020494`, 5.}, {26.817398081389136`, 5.}}], 
     LineBox[CompressedData["
1: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
rSeqacsdy//n/wFz4JSb
      "]], 
     LineBox[{{32.42646831119559, 5.}, {32.426520510907395`, 5.}, {
      32.426520510907395`, 4.}, {32.428743107158844`, 4.}, {
      32.428743107158844`, 5.}, {32.430085409821295`, 5.}}], 
     LineBox[{{32.430313988637764`, 5.}, {32.432185713945735`, 5.}, {
      32.432185713945735`, 4.}, {32.43276016713877, 4.}, {32.43276016713877, 
      5.}, {32.43479672512499, 5.}}], LineBox[CompressedData["
1:eJx112k4llv7BvCrUu5GVIqN0mQj0pyS1pJINEmShFIaFCqpREihUGiQEJU5
pejdDWiQivZuYqOtUtJA7YaF0iD53//30/vlfL48x+/Teu7nWPd5ndcQN+8F
7p2JaG4Xov//TlT8Jzt2Muf0309/PkI1ULKcgqzMqz54V7pCS7zHg2c5qdDE
f32N+PsMtGC080F0CTTxF83NVe4myIJ13hAxsRiaaJNn1ErLaciClTjmaXhB
Ez9epFS5G1rip6S764sYsjL/QB3930FL3Mh/+7SuHJn4j2uaXQdAC7bt9Lf3
16GJCr+K4lgzZMEsnY+52k1HJvqZcehLLLRgIzYeDT0ETbRW+cveS9CCKZ/d
kbDYHJm4ifW9ayuhBft+J3BjODSR7fmG+D4zkAXTt5h2ZiA00fn7mVrbZyIL
dnJot/110MRda3M9elohC+adkKM3AJrIpn5ZxBlrZMGC9X5Pi7RBJvI/dX9v
02xkwZrf7F9kMheZ6FHfDzcb5iELpqGuulF/PjLxtDlb1u+GFsy65Hu3Mltk
+Xntbpiq2SEL1rcqqo/qQmSiwZqav22BFszL/YHyS3tkIteSmTNfLUYWLNHY
7v1AR2Tize8ar+dBC9bxcc1YnSXIxJMNTK5kQQsW2Hq+ZbQTMlGa88JXvs7I
gjUOOjJlhgsy8ZrkHPXH0BJXHbuK1UETPzhv5qsOaMHCREx4visykcZTu65q
y5AF+3GoImM5NPGq7j5GH6AFs9JfrWC2HJl4xOekiHfQgs1ofGV3wA2ZyHtu
fkvrCmTB8keG6ZquRCa+vd3Ydbw7ssTNxnTfXAWtzPsbLqw0W4Us8aygqAWp
0MpcLaDyZxa0xPMTTBWeQxOvTW1eenA1smC7U+fPzIUmakwxqgtcgyxYbdim
0PvQxK9kPrOphpa4o++HfdfWIhN/8/fUH6+g5fOqjqQP8UAmbjvYwM0IWrBX
fYwGZHghy/ftZP7Yx9CCOd5VTAv3Riaum2Sy/zW0YK2bZo3YtQmZSCWyaOUZ
aLlvjbDrp+2DTDzqV/k9bMFe1ruEV2xGJv7Q4/cEZ19kwQqSrY4EQxM/F5au
dxRasHMGDq4uW5CJx3as9o+HFqwod8qVE1uRibpuDyndtg1ZsCqD6jFL/ZCJ
G0f19cmBlniNntaiVmhlrhzpUbBjO7LEj/X0/HkAmrjHhNlKif7Igh1QoiXt
0ERVD8yy2gOQ5XldvVGnLgiZyPhw3puxO5EFUyh3LRu7C5mItUTccYIWrHDk
kpGvoYnWNyz5LIUiCxbtHNoeBk3cQVfN8xS0fN+9jQ0nhSMT/6qakRgMLdjF
4W/fxkET9Zy48ebjCGTBpHQ1jQGRyPJ5s9XttaAFe2Lydt5xaKLPJirOE6OR
BePnbew0Y5CJKtqqY0PikAVrs71ppHAEmWhDsMuej/HIgqV4u3XTOYos593Z
b/7h0IKZdJplYpiATDzk0eqLE6AFC09a0eSciCzv67kPCnSSkQXz7WXw8xQ0
cc9/zhy9DC1x5d/UgoakIBNvMY/JN4IWbEO/8ebzoInsD174EXoCWe5bSYMa
TkAT/+3WztIVJ5EFq1xe9t44FZn4Qlu2+xO0YHobOtPHNGSi5KwU9w5oed8N
Mm/ITkcmqlylvVYpA1nuO2dn9S6Els/bnKfTPxNZzquGXbunQhPl+s74GJCF
LFhxtl6nw9ByXl3/dasKWrDexjsk52xkIrfTxsfzc5DledE27ITnGWT5wL3K
1m3Qgi27mFxveg6ZaJ1dYrei88iC1Rj93XnEf5CJjpz5NWrBH8iCzY41zo2C
Ju7sHRZ2Dlrig/vv2lIKTXxrkUnsR2iJl6U5zfgGLe9bc7ye/oIWLDn2H8WV
F5GJdN/3SPwCLdiqh9+8VC8jE61aUdrbvwhZMO+iToteQhMV5uxJun0FWTD7
i/6R3a8iE3/UGl06Hlqe1+bjMz2uIRNXuWTTpHgdWbAv9iLUHJp4oOdTcxdo
wd40Pui8BppoHAvJWVCMLJjnPsPJkdDET5qExdyDlritis/Zemi5b2d6Oo++
gSxYVvtJcbAEmfi+0px1ddCCXXntO+VfaHlfiB1k8RlasB3aBhk9byITubw8
rFZ6C1mwCdHNxt+hiedGv+uWfhtZsASX4beqoInf+DCoyqQUWbA70/+gWGii
dyU2z9LKkOW+N2acFb+DTKRelhiw/C9kua8EhP9WAS3P69v+xTXQgsVPsgv5
eQ+ZuMK2A/Oc7yMLdnqwT6EbtNzX9xqUDq1AFswi56ePETRRwCa9DT7Qghkl
xd14Dk007FpQqlYlsmDOFy4euQJNFFd+Oex5NbJgistojMYjZOLnw672WgIt
8fKfiU3u/yDL+9ofzdERNcgSD4mIHzvwCTLx998u1Z+Alviq7OAVfZ4iE4+v
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
      "]], LineBox[CompressedData["
1:eJx13GlUje/3P/BN5IgSEZUKJUSSuQz7UqaQOUOZIlOZ58gsIpI5c8iQIQkf
QxKFMqQMGSNRZtmmlKbf/f0/+j95309ar7Xutc7pvq5r7/dunVP9sdMHji9P
RD91RP/7mRQxdl5xYBdF/++qqSbqrx9cYzGysfr84EY7O2idGtvJMGEUNKnb
dm1dg6CFOz+N338QmqjcF4PEYUuQhcfsrpCaDU1Ud0SviCFLkYXf/u4yxGE5
MtH1b9enDQpCFu7ZelErH2hSw4pCfSZCC387nXvkKDSpynPvvE2AFr7T++qS
H9CkGniFTMqH1im3Vk/3ua9GJrWo9gavIdDCRie33Pu8BpnoxPN5KQ7ByMIx
rz4md4QmVbqoQdcaa5GFZ27vYrAlBJnI44RzlxYbkYUX9Xu6fhI00RPDrpnb
w5CF/y6Ysqj1ZmTtDV8ZO9A8HFl4RV6lqjnQ2no16m+LLZzhefa+1U5kovR7
nxf0hxaeEXsw0ReaaE64f3g0tHAHn1oPvkMTRZp1NKqyB1m494rjq52gicZt
fGjpthdZ2Ol7+X2m+5CJtmbuC46AFl65an90HDTR29V1Wz2EFq7y+qh5p/3I
RGeNKo1YBC1c9r5cYLUIZKLjpVUXxR9EFnb4c6jxk0PIpNL5wECLSGThJgYb
NltBE3Vr6hXWBFp4Q/H9E2uhiWa22W+uO4os/CQ+Ja/qMWSizdZhhxpEIQuv
W5y4fCI00YeqHkk1TyILV2vi8GgXNKlTXfXP/YAWPts/ZM3I08ikMgPvPZsN
Ldyjrku3KzHIRL3tB1osvYQs/OtbzZw2l5FJPb/VuyAUWri986FLadBEu6Pm
1A+LQxZus+vKTJcryKRs/1zaOQhaWH+96rwOmqi4vqHp3KvIwuurfQr4Ak30
qVz7sk7XkIXTfZqEr4TW6tXL9Tw4CVm46bV9x/5AEw0tcczKvYEs7P8kdcnX
m8hEe/Jd7zRPRhYOG3+R+0ITve/4euvcFGThGn/DtnS7jUyqychCry3QOlV4
pPeNGGhj9desabXed5B1yvH0aoNMaO31RhkZ9LyLLDziWeuY+FRkUv86LZni
dx9Zp1aebTZmLTSpmJ6RDfdBC7dd/+1AATSppQ49w0qghb/YzXz9Lw2ZyKXo
UGjFdGThVx4jZto8QCay7vjS3g5aOPCl+fHW0FreTb1fthpauPXRiAoboLW8
d/tbW9vHyMLN3m/o3gma6EFz+2EroLV+X/9dWHgGMilx7+EdCy08zKdFC/sn
yERhznptrkILT0xpuTIVmpR30bisX9DCh43btpn/FJloxojLV5Khhd1MmmRV
eYZMauzWC6lm0Do1Nf+AWX1oUv+Fjas8ElpYb9XGlrrnyET3g/S3bnuBLJy7
NuW/P9Dadaz7UZuXyMKNDzWe+w+aqMjOb+HNV8jCQ+sPeVj3DTJRtIdfch9o
LW/Xb720XjYyKYudB2+6Qmt5I2tlzcPQROdbG7mav0UWjjJc88kBWps375n2
9YbW8qJNt+rboEk18k91ffAOWdhv3MhN1jnIpN4e+Tc6AFrrd2nlWzXORSaK
qdoxtTe0tt9rO35ZDK2d15nZFV+8RxZ2jGvk8Btay6tRj2K7fEQWTvDTW+MF
TVTTP3fZB2jh48+8a5p8QiZl9qbv4XXQwgdfWr0f+BlZq5e7j+7a9RVZOO+8
q813aFIbavw+fjcPWdj4q7NTle/IWl5Kyhu/9yey8P1hVUtDfiGTMkzIPP4e
Wjhz7LhVZdCkzpfzfRvzG1m4nO9Ek3vQpNYNW9699h9k4QnVWoxvno9MKrpj
hZc+0DpVdCrG6ig0qVEemT0c/iILJ3+J9OgBTcp35OwGfaGFa52JaupViExk
ejvk04sSZOFFg4IXzi9FJjWocWf/ZGidMuLpjkXQxmqIebf0wDJknWp9tMK/
2eVcgUnFxw6PPQ4tPK9sz69J5ZFJGVnPWTEXWpvXF67ftVEPmdTfxcuyyqCF
KT+nd7sKyERtmx0YthVa2PNfyreD+sikGg6/41e1ErJwz/YN9ROhiXJaxNk6
VEbW7j+cZXUFmqhShsXfyobIwraGSd7GRsik8pf/7dQGWthrrtHqOtWQtde7
0TlnojGytt61XjXcDU20wuDKvvQayMK7n+QllDdBJqpY4n7GB1r7fS+mv1wO
TfT5zcf5ZjWRhXtPdjl9tRYy0ZvRtwp2miILz12y2deyNvL//l49uZUDtPa8
+tKM0dCkes1xP/YEWnhnxfwF+mbIpE5Heut3h9apPe/tvnlCkxp+5U/QQHNk
4VXhy7rnQ5NaXHe3/19oYed6dumWFshav33T5GUOtHBQ2//21ayLrPWr8I12
g6CFzx9s+mcmNNGC8olTDlsiC5uuLDhVAk1UkmyV+dcaWdjwWqjXlnrIpAo2
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
srB3lknfDtCk5jVcaNAdWrjx1rRv602RSR0LdljxClr4Xt34obo6yEQ8uVnN
aGhtvXtXbOdhhkzK2ffizUHQOhW//tHj2dDGamP3/uOPQuuUwZzJn79CGyub
WazGmiPrVHur3b3CoLXn1SUr5jC0cGpowoeb0ES3Fnwo/xxaeFPDmS2aWyBr
5+3GsCZLoIX3fx5msg2a6P65BHt9S2Thjr+iJ26A1upV6ayqz6CFDw3uvtTN
CpmoXqTp1j7WyMLzFxjrqXrIRB72L5OW10cWfjz98ohYaKJCvXE/TzRAFp6b
5T+8kQ0yqdmzKm70hxYufe9ZZ4ItMlHP/8wbOjZE1s6LX35yq0bIREbtOjsP
ghZe+HzZ8DqNkYkGXtxsE9MEWbjGTp+jFe2RifJrDBhyClr452n77ApNkYlS
byb0f90MWavXP5oumtQcmWjbuE/WaY7IwteWTt0c1wKZyHx/0J0TTsjCJ65G
Vu3SEpmo/dVWKza2QhZO8V7bLa4NMtGOAYUzbkMLuzuVppdvi0w0t+ryFRWg
hSuuXJi7CprU3MF6H8e1QxZ2PZNX+zs0qRnVhzXzao8sbOX6dJmtMzKp/iFn
x/aAFn7xPCIhxAWZlG5z0ald0Nq8X23pvSfQRBbVRxv9gRbu12HNEdOOyEQ7
PUvbrFbIwhGmMy13uCITPU8+9voEtPDbktLW0W7IRHs7TUmq2BVZONbYp8AY
mtTWWlcso6CF217V+3sTmlTNpaPO63dD1s77/LdmraC1eT/i2vPu0MJ7VzRI
/AmtzevV/I+XQWv9qnJBz9rdkYm+Tkp6OMMdWbhluaYpEdCkNg/32nobWpiv
H3rRthcy0WnvzR+q9kYWdovrkju4DzJRj+y5XXI9kLV+P9f3mFFfZKK2w5KN
jaG1vH3+SPWN0KRKP/i5ZUPr1CSLpEiDfsjaeY0pPd8EWqdWnYi91gqaVPaH
BFkBLex0LDeoaX9kIretxd7voYUHu4cnGw5EJurnF+gzFFo4ocKkdTIImSjM
pYdHwmBk4V75df0aDUMm9d7gx+Zh0MJnEndf3A2t1Ttnj4Kew5GFbxXnW7T2
QibqW3efzfMRyFpeebXS9vxIZO15Zfz+/hNay1smd1t4jUImGn5uwJAVY5GF
Dxad3ttsHDKpnvn7j7pCC6fvWPylNzSplmf1HA5BC+ds+dGrsS8yURvXgtvn
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

      "]], LineBox[{{42.25725075471491, 5.}, {42.25822145510157, 5.}}], 
     LineBox[CompressedData["
1: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
y+whJ7p1RGbR6fAS84PQSt+593FgNbQyL9b/sbUGmqhpryZO2zohK3lrT9/c
rM7IRIu2OeyugmZRZ26a26kLMsnKqQ4/LnZFVs77njYpQUbIRBkaBVF7oFmc
HVerE2WMTOTbc7L7XRNk5bwa+2t3NkUm2eH0iyO7oVlsNtFeeQKaaJY4uPMl
NIvLft1vqpkhk1S3+hQ4FFp5v2Or2g+DJjI7++37aXNkZb+MGdP/CTTR4rJp
CX9ZILPQS2k6OMgSmeS+u/e79euNzCLgbFya3Z/IRF3SPAvO90FmcfP1Mz/7
fshEXZ3XWZbbILOY9uZuZodByERhP4MHug9BZpHt96Rv76HIJAsHPXRXs0Vm
cTvunsUmaKKyA9k9HCQyiyMrwtV1hiMTjWr2sXshtJJ3WzyLMhqBTPTFbFfZ
U3tkpe8nnE1maKJ27VSfXjsgszidMqcgcSQyyUUNrUPajEJWydBxyeQBTTJs
XNXgLGiV3GwbZXwDmmRy5YnGKmiVHJpduP0LtJKXY60+m4xGZpHboyJmNTRR
9T7+HuaMzCK2lThuORGZpPuaoT+mQLNI2fhVt5cLsjJvIquLrCYhs8jR1yrb
MxlZ6ZtPNml/nILMovTH1pPP3JCJ/MfqWWpPR2ZhWacdHeqBTLJsr73NA2gW
Gy65PdbzRCbKTpr5KxWaxXCfk73qoIm+8dwdP2cgs3Af3mhj54VMcv+KqBHZ
0CpZ4xMcfRqaZMp093Z+3sgsfqrurT0JTeSzOP3uOx9kFltXF0RkzUImeXNC
WetSaJWMGXemZdPZyCTvhUzRsIRm4Tes2XBraJIuGX88Xgut9F23844voUke
3r3li/ocZBbD9H+5dIAm+rFZJ0hnLjKLvBONOUvnIZMsfrXAOgSahdvvsZHx
0ETlM8tuWy9AVvpij7Dk99BK3v2cM2viQmQW60cctl6/CFnpi72Xjz6+BJlF
cMjI9q+hSZZc84x9A82i4urn676+yETj7QckhPojs7hqPVtVFIBMMut3mv6W
QGQWP85MLj4bhKx83k3tXqYGIyv3TUT3jDpoolVtbfzlMmQWRc20HmdCk8x4
nze7DFrJu6d0HB9CE53u7tFx93JkFt0tS9blQJM05cOXZAgyi6mDZmZpr0Am
efD++vpMaJVcYlF9PhtaW/7zY82gN9Aq2dt95Z/vQpFJ1moNMm8dhqzM66zy
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

      "]], LineBox[CompressedData["
1:eJx13WdYj+//P/BXRG8ymjKys4rskdLrLCMJCdnZDWUVSSiy1yeKIrMhKtIm
WUlSSXY0kBFFdNpk9Lu+/zv/W093HI/3cR3H9b6u67zO1/N5w1vH+csmOtcj
on+aRP/7e0vtuU8vDtgI+n9/9ESsZ/Q3szBkLWGwwFPTGVol3gzPLDkNTeKL
Rfi9QmiVGKj6N+ABNIlbz3+b9D2ELDnasFnia2gS5Wf/nBx8BFlyWJfYVpZH
kZU7ktwtuiACWbL/rf+y8iORSVzSyU8tgJac3N00cEAUMpG2jmVMELTkDm4n
jUKikYkK6owvGJ9Eluxq1LP/YGgSfiM3uZdAK+fTeH6OTyGTSDNMqVoHLdnd
MWjwjBhkohPV/PhnHLLk7ZWLtJucRibx2dL3UStoyeldboV/gCaqDitNe38G
WfLG7wHr1eKRSVQud+7eHFqyXpZRXWdoonH2GbZfEpAlX16hkdMqGZnE6M2p
EaugJWtvH/xLpCATDXvYZudaaMn6yc02uaUiE1kfcwpJOo8sua7llr/N05FJ
5H1ceHs3tOT9C3SNEqFJbLzye2EWtORWjg++dLmATBT6taXNmgxkyY2e/5fR
7iIy0ZPT8/owtOTUZTMiL1xCJppfaWVSdBlZ8hrLpZ9mX0Em0TBoelWXq8iS
E4ed/GGSiUxUGx6uuxlasmMvx8n7oEkMMrI1fQEteZnDEu2p15CJUn8O6Vie
jSx5W4MKs145yCQKuJ/NbGhlvYQkq+ZCk3h7PL5PCrRkn6BewTehSSQvPKo/
5SaySvS5vjh1D7SWCPkccjoFWiVOez0/0C8XmcSzr66jV0KrRLuLVSsuQJPY
6mB32zgPWfIq9ePfLkCTuPtHNa0MWrJzbNeNHvnIRDsGOGcth5bsZkPD30KT
2BGYmG99C1klavXnV8RDk5gz4KHxO2jJXc5tEucLkInia1QWeoXIkrfYuOu1
hSax4UD7ODNoyVf9Hh13gFbWa0HttXfQkis7iWZ1d5CJXqyw6aP1EFly3/g7
BZ2gSbzbXq9DN2jJrxw0/JdBE81KjYneVoSszPveN4vTHiOTsP5Y96cWWpmX
NQn7xzxBJnpvmbdraCmy5JB9u96PKEMmceyWxr990JKrfCy9z0OTmK9d3ajP
U2SV2P27cPI6aBIjPzYOewCtEu31jr7r+QyZxIT82CYSWlmvx4NbRD5HJtE7
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
r6yd+eQTsuQzHwx0Jn5GJjrn3/ebO7Rk7x8tl1dBE81eParR8G/IkpumL1+f
Ck105G3be61+I0sea5Ic2O4PMpGLbe8PSdCSp29veLcEmqjC9/fU8f+QJUeN
meoVAU3CN+ahemQdskpk7zf19iA7YC2RdN87vBRaJcKmfCl7A01CtzY60VYN
WfIWvr/8ez1kEh3XFS66UR9ZJRqcfrTwLzSJ8C4ze3RUR5ZcNHm/wUZoEp7r
ZqccgVbud8/IuQ0aIJO4Fq0X3xBacouHZqa20CQCNm0a6AqtzFudk7PVGyIT
uR7mJxFNkSW/S/q4eZAWMtHr1HNz/KAlV3Z+/9NeG5lo+Zzna310kSWfWvw6
oqkeMtHWqtwHt6Elr3jZoLORPjKJFhM6tg2Dltwl/XntaWiipls+PrkFLdnk
mLlzKwNkElfypweuhJaslSCbe0OTeHmpzcggaMlXElen7G2JTKKzhfsNi1bI
ksccMd09Apqo58H/Qga2Qf7f7wW4+XtDk4i50HJdMLTk7i+tun6HJhoX2nLi
IUNkyTbv97Y/Ck105rVT9+2dkJV58du5M3VGJmHwdO+UL9BKX3GvcPwJTVR5
oNl14y7IksMTLDYFd0Mmaiy+de5qjCzZbqt6pGFPZBKrZx884AGtEi3e38q+
CK0lur0an1oBrRIxns4pyb2QtcQx8xsF56BVokqWBrQ1RSYxrFnf0ABoyb9a
/ikNhVby3skBW6t7I0vu8CXC37YvMone4XNmbIeWPCzf9FwNtHL864FWnfoh
q0SziAWGC6G1xAGNaLNCaJW43O/X5d/QJJ6NUVuu3x9ZstfPXhZXoIl699/m
9G8AsuSD53V7mg9EJpq0/fCUf0ORlbwd9yYjyByZhMkaa8990JKfed6PLIcm
EbhS3fUftEp06dbGYKYFMokaL4+SNGjJ60TB8uvQRBp9vr0os0KWvH5K7YKf
1sgk7JPu57sPR5a8reClwwFooukTNK5ojUCWLFo3fXwZmqhD70b7NGyQJde6
HLI/CE2iurrbqDBoyckejV5egSbRteK7/2NoyYYpti1NRyMTWWXqj/KFlrz7
xao7T6CVvBMX+spmPLKy39zNOmszAZlE0eA/jyZCS/4iHQcUQBPlPpxXt8wB
WbKmX8SZ5InIJIzbxdMraMktU+9o601CJioyWWYz0BFZ6Yvta5ZMnYJM9G9Y
jlYYtORYzytFCdOQiYLe7VrwbTqy5IC6G+otZiCTqH0Y0+AM9P/+vWfI5iRo
onnjpFHmHGTJjzxrw69DE+1JaGO7dB6y5NX31s47BU00Z0mi/r75yJL95uZ6
mS9AJlqk10W3FlryLKOBVq8WIivzSks9uApacmJa33g3Z2QSjcSOCb7Qkj/6
zblm5oJM1O2s9etYaMlr+7yd2d4VmcTevV/DRkCrhFray54LoJW+Z3f+zhdo
yfv3mu7Kc0MmujhkjK3lYmTJKXM1uk9dgkzkaNsw9ao3srLfW7b6+w6aaGOL
upLv0JL7nFo3PtEHmUT2lYV79VYjS767q9F+Q2giF78Zeeq+yJINIuqsB0ET
2Qxr8PELtGQ+U2b3cQ2ycr/2tcxY6I8seXGJmrv9emQSDu0/xgdDS759tizg
NjSJnsvC0ttuQJb81KZV478ByCR6fFLbrNqIrBL3HkcuGQBN4nHguYdjoVUi
8vr3paHQJN6ZNNB8AC058J140H0TMlF862XqxtBKX3YcfG0kNNGV0qx2cduQ
JU+aozW4BFrJW+UPIo13IEu2H+91o98uZCITt4+nLHYjS/4WGdqu73/IJCb3
Kzq9BFrynxEmUVuhierbfBjltQdZ8lnhOL0sCJkoYebtWpsQZMkrRGZXX2ii
qtLri4IPIUtuMCI7NwmahH+Jyfkr0JJHrhotRh1GJhoVMuPKmqPIktvE+wS4
HEcm+j3D7cPgcGTJXS+dPdwwAplEvcC+mX2hlfMZh5WOjUIm0eBx5Wo/aJXQ
a7ajSTI0CfOa/NJsaMnPd8cbtj+BTNRgXOdlPaAlX/jtEXENmujtIEqIiUGW
3GrJiW4745CJvjev8X5yGlly1YLFJ0bFI5Mw6Lp79A1olfBv0DpcdRaZxIte
XXdmQ0venp1QV5SATELjRtAmkYgsueG+d58DoElsHeZ86j605Byb1Rv+JiET
XXtlNnJJMrIyrx0nHL4JTeRv21o4pSAr82bOgN8roElYrr1/dQO05HL93W/t
U5FJaCZE+ayAlnzN07pmcRoy0dBf3cfmQku+vqJ77x7nkEnQyOkTLkFLNr41
ufAZtNI348t6GJ5HVgk/9zkX7KBJRHds55oJLTn1xwkj53RkosWd3gUmXUCW
/LhHle47aBL72wXmWmUgS978rLTxL2iiB6ZBno4XkSWHWs+bsx6a6F5q8KEb
0JJ1ljZe/Qta2S+DnrsHXEJWiXYzcou3QpMYsCR+tvcVZCVvhyX5fIEm8g5q
NqrJVWTJMTabJ02EJrFSLWPIe2jJwTWPJplkIhP1rJfyJRlacv0mkeanspCJ
esW81uxxHVny32YmV7ZAk1jo99b8NbTkOQE/EpxuIJOYM65zs2xolZje7MKB
j9AkAof86jglB1nypWqz9t43kZX3ffvQ2nXQyn6/4VC9I7nISl+7fmB8HLTk
pB7rfj+BJvE5xnrphjxkpS/c6T/0LDSJS5crDpvnIyt9r/i/QYegiQZvmx21
7xayZP1zx+vlFiAThf5z7FNdiCx5S2zPTI87yCQ8sk8GDryLLLmsynrBYWgi
97OxV+9CS1438FDO9HvIRO0+jfM3u48sed6wQbNsoImS3qgvsypClhyn9q2C
HiMT+f0q3NINWsk7sTaXpkCTSByVk7oUWnLU7J2GqcXIyvG+xw6ZlCBLnrlT
Y4IVNFHFfvv72aXIkivtyudVQxPdsTQ9sbsMWfLFWcsKc6BJFJZ5+G94iqwS
BsbfSmc8Q1byupe+biz0//6/Xc8FddBESzpGaRi/RFbyltaHzBfQRNe3zapT
e42s9EWPmPAW0CSGLDB65QgteckJsycfoImiktZav69Alpztq+8/8g0y0dkP
b//lv0VW1ku69dG30ERdk/UPHqxEltxrW7bZIWiiPTN1DjV9h6zc7573VxpA
K3lp+iYnv/fIkgcljBkztxqZaMMky7glH5Elbwqf+L1JDTKJKrOE+52hJRdX
xK42gyZRurDL1SfQKpE1u6rzH2hl3jX+0FVDIqtEXJvNSZ2gtcSrtX69oqFV
Itj/pknvT8gkYszPfRwIreRN60PzrkITLdiZ6V35BVlyo/XfYzW+IhMlD1i6
qesPZMnN4irS9v9EVt63Lda9pv9Clpw/+eLEDGgi56U20Ut+Iyt9yayDyd4/
yCSc3//i89DKvJz8c/+hv8hEPgMqd3v9Q5bs3WHBihRoEnZrIuYVQku+Ebbm
6N46ZBLGnuWvr0JLjv/5cEUIjQUmcbIiavxhaMnP3tNVKzVkooF1RV5r6iNL
PvIkwiQTmujw6p0XW6gjS9759Os5T2iiU/2KNgVCK3n9pJ/PG2gijyfX3X40
QJac4bHWu0NDZKLxM45lmUIreWl4zjlXaBIB4bYz1kErfe9RTp9N0ESHIoaZ
hjZGlmwWvcq/hSYyUdGgkl5joSV3nho6/14TZBI7Zr/OeNAUWfJgp8bW6s2Q
SYT0P5LeHlrpG5kNM7tCkwi22/48CFpy32F5Nnehlf3SI6jUozmy5EOfmi9L
1EEmcX7z0wQDXWTJYk3Epot6yCSyVfrhVdAqUTixx7At+shaYs97w80x0CpR
0tLQ0aUFMon6WRdHR0NL7hJecP4TNAkHp5jhzQ2Qlf2+xW5TZ2gSfXe8WpkK
rcyr8T57nkMT7exfTzekJbLkxna++qI1MtFR251HLhgiS44ZV966S1tkJW+f
KppgDi15Wrrah43tkIkML0qdmV2QJWtk3AyJgyZS83jgM6MrsuRXMyqC+nVH
JvHWqM+0aGjJAY8N+p/pgUwi/VLniSnQKsF+tOAXtJZotzrEuxZaT5z4mT6x
qTGylhg4bOLRDdAqccWrm2/LnshaYrGMNx8NrRJpNc1bzYJW+lJp/y750Epf
S6ofUQRNIlQlBnn0QpYc8u76/FvQRLMMXPRSeyP/7/eefZ427INM4vqUdV/1
oSW7DQw50LovMon2AXnuhtCSK76furUGmsg1sOeK4P7Ikk8N2z3pJzSRddsP
ixsPQVbmjRhSUGaGTDQ58VON+jBkyctuNs3Ls0QmsjFYnDdUIEt+uNE+1sQK
mcT8ipzd46FVYqyTldNbaBKti7xCYq2RVWKpW8v8BGgtkXZk15zOw5FVwl9L
u2oQtPJ9TRabDYWWvNpwpO+AEchEW+f4HnKCljx66NgdY0ciK/vt7P7FT6Al
L25QOruNDTLREdrgoDsOWbJl4byjB6GJtMtdHcqgJV/wjaw+aI9MYuzGoVPO
QEseK9L3SmgS08vuNRk+AVkl9q3yDfsPWku4XDu09bgDsp6Y9GVB0h1oLdHj
yNzir9Aqsbl6p9eOicha4lbudqdz0HqinnPOtpWT/7//D5PqraM=
      "]], LineBox[CompressedData["
1:eJx10ltI02EYBvA3CfvTLCZsJBMZFqWJtIiWuYzvhS290C7cgWqyVebMtKbo
ttZUSJhYRoIgVGjmhSWZOkQW5WkXHQQtoqLDZWiQsAVfIZ1IbHXVzfPCw8Pv
+nmzK+utnhQi8ibzt41LicxmexnTv9Pw1LHyWD+0mm/+9lqHoRV+1NYxsARN
7O+KOxPQUoy67xp7HchEqtRKXeZRZClOP8i15DiRieNDbzYcgpai2J9qfg5N
fKkwvj+rAlmKfcZZ2wI00eOvwY1jLmQpQikfHGNuZOIjKyVV4ePICmsjiv4h
NLGn5073S2gpOkp92ZGTyMl/yS11bKlCliLodQVqPMjEBW0ZtmloKRIlndG0
amSirh7j05UaZCnm+gYX8s8gE5XnWBev1CJLcWq5WrX5LDLx/Kjudha0FBmf
Fn/6oYmKPvcVmeqRpdim5TUzNJFrvDtf04AsxZpq4HsFNNHedd/GlUZkKdRf
DE8MTcjE6YO9gUJoKe7vWL/mgyZq3LlrJt2PLMV27VydJYBMdO3y1XceaCn6
P567FzyPTPxj+tnhdmiFfbuHizuDyGpetdfdGIZWOJQnt45Aq/lgtDYcgVb4
xdtbsUloYvee1U32C8hS5E1ctC5DE514XWA2hZCTe03prk+0IBM3DLVPzkAr
/Mv2qkzbikz8viU8q4dW2BKdTzsAreYmQ6zVCa1hk0bf7PvPfwDPO60G
      "]], LineBox[{{56.980740658922315`, 5.}, {56.98391905417659, 5.}}], 
     LineBox[CompressedData["
1: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
2AL9v8hNZFGwf4+h/8//Bxwg8+0=
      "]], LineBox[CompressedData["
1:eJx03HdYjv/7BvArlR6jZKTsvWdFPhTXW2SUrMreSpGVMjJKZrYSFSEUWrbs
slKRmahE9o4r2YXf/f39f/aP4+V48jzd9/u+rvM8HEeNJs0a6lGOiL6bEv3v
z4+9Ky1x/ztU0f9/1VBGU6e294A2VfdGtsqaAq1THab+dA+AJjXqsASvhxZu
VHSkXhY0qQH6IXOr/UMWNlxw7Hg4NKkS2y+Pk6GF+3waEFOOXIBJ3QlMvz8I
WvhyzQela6GJsrLbhPXUQxbOrbTI1g2a6FWsmVsxtPCzwgcHa5RDJvr6JjHi
F7TwJf1tDzfqI5OKSCDXXdDCDysfXHHFAJnUbqeC7FvQwpbmTxoaGSKT0vkP
L28NLew19PqJ99BEIb8Wp/Qrjyysv69q8UNoUuuidlb6Ai3cNGh29B4jZO28
ZJy/ZqFDFjY/fXFilQrIRKPXnf/qDi3cqm2u4XpoonadOpmqisjC6fU3ZDpD
ExU7nVgeWQlZuOesGTeLoEn5VbpfY2llZO16rZiatQ6alONJq5AoaOEZzBZ5
0EQRQap3sTGy8KbH3160NkEmiind9GIOtPAI/28+H6BJfYm+1/QrtHbezskr
qoJMxCMuV2triizcLbFLXVtoItdcpzGrqyIL/7OPLf0NTWr98GsHm1RD1qk1
m89d2QRNalLR/kd3oYUn7vdcNb06Mqk3Ge+S1kALr42PyVgHTeqc+8rVodDC
h2qnz2lXA5moMGjkBh9o7XldEtw5EprU5LkH3XdCC5cP8b1+EJpUyhD3sUnQ
wqO2je14DprUhnlu2VXMkIVd258ZOBWa6Ee6w/z90MJnClramtZEJrKw9Bs1
DVp4eapPbi40qZnFl/WbmyMLj40M+ZoITWT2oFpwj1rI2vXWHd9tWRuZVEAD
yyBraGGHO68LFTTR+veZHTyhhTO2vNs0G5rURAmLCoUW9ps7ZHs0NNHCiLx5
LnWRhasljLk1FpqoSYbHn1vQwsFRc9LzoEn96rrgqUALW5h4XehbD5mUs8Fb
90nQOiUr015mQ5MqP+heSjG0sJNluS5B9ZFJud5xbhIKLdz9pbHzHWiinR0K
Uu5BC89Wo61fQRNVSurwtE1DZOHC0YWmi6G1eXMmftMRaOHd9rljrkETOd+4
07FVI2Thjl2c9AdDE20t83p+Dlp4144K8UXQpDwnz/hj0hhZ+OmvanYToEl9
am25ajK0cOXLlqWe0KT+vFs4vwhaeN7AeRfKoImODr0T5NEEWXjD1jPfnkKT
KvSwjvsOLXzvaYu/hk2Rie7HR3sPhRZuPHzrm5HQRGm5AY4ToIXDHkwtNxma
KHXvu6Zl0MIXztdeaNUMmVTyec/PnaCFrzRw3eQKTWrenH9zE6G1vplpU7Kr
OTJR9uByDWq0QNau1+EvR9pAEwUNS19XoyWy1ncMu5+vBU2qVpOdzzpD69SO
o/rbu0KTql6tqtUAaGE665axBFrL23GTcqKghYfeLNfzCzSpyKpZGQ6tkIX3
mH9t4ghNavSE2jGjoXVqUpMtS05Bk3pt45RzDVq4wcXBG7+1Riby/5FS+Bta
OG1w6pV/0ESJbW52rdwWWcs7w//u3gFNaltZ8ql90MInVls1ugpN1NvieKWf
0FreHnHfzaI9MtGbXq8Gz+iALOy9snvv2x2RiTrWelbrtyWy8ATTIfu7WCGT
Wn5ijMlqaOHzPs/X3LFGJtVnyuByL6GF/wa4tbnRCZmU2xyD+U+gheuU+ze1
XmdkIqc5CXf8oLW+8uOKUS0bZO3z8tAXY6CFTUMG/V0BTfR1SuWqT6GFWy/1
7rC0CzJR0Wbnec26Imt5v+eQSZOgidyN376YAS1cPfFpv0/QRF2GZDaY3A1Z
uJLh++2B0ERNn9dcF2SLLHxn3ZeACGhSM6b3mHIQWqcizAt/3oU2VW6Hxk7u
aoesU55FK39hk9o0YtHjAGjhU/VeXIqAJvrcLP3Lmu7IWl+pkVZ9PzSpxTlT
drftgaxT+luWzugNTWqNw6pcZ2jhB+sTG2ZAkzqwVLeoEiMLu+iNal4fmqj6
t/p0A1r4uOuSbp+hibxLxp/spZC1vDFk6+ut0KT0B7QICYcWtnraw70QmtR/
8RX+/IYWzs7JPFXHHpno26WggEfQwqv7m/YI7o2s5T3zmYmvHJCFB7zK+lS+
DzKpYaP3fraCFv66ZNl/PtBEG3m5mUVfZOHH8SPr+vRDJvr+/X6abX9kYUe3
E8OGQBMt9ixpuBlaOOHu73FboUm1mLJv025o4YZn/tuTAE1qrqHe1eqOyMIl
0zbPa+WETNT31KK4egOQtb6xuaVfS2hSCc9LDadBC0cfyW1czxmZVFErxxqN
oIVr065UN2hSevUWlE6GFn7t1uXtKmiifkmGTZsORBZuXq1t807QpL7Zb3VY
Dq1TXa8lDIqDJhX76+GjLGjhPw4LHJ9Bk4pvfMj/NbS271ruCyyDJqr4/vGm
b4OQhd+Ncp8yajAyqfYRuUHYwl5m5mWR0ESBxq2P7BiCLHzsVs2yg9Da8zZ7
kvvcocjCnZobtXoATerlVbd3fV2QtfN2auwtT2iiOSnj77dyQ9bOW1Lo5U7Q
pAYbzLToDC3cL2zz5/nQRI4mbTx+QwvHDSzYbzoMmWjvwYweJ0cgCzvNrNA5
fyQyKcNGB1pXGYUsfPV4xd21oUlZtwu6aAstPLPS+Z/u0EQ3NjS0SRiNLLyo
u33SnDHIpGJcmp/xgxZus+ZD9RvQRE/L4v48hxZOqv5tTYexyKRsxlkO7g0t
vOn1HIOh0Frfq3O3/XhonfpQHGziB01qgZ3bb2zhEflZ6ZugiRLSbL/uH4cs
/Hue68u30EQt7fQOVB2PrPVlf79xW6GJoj607RUJre3r8a2rWE5AJnoxYO2y
Y9DCM4wGr3wLTer71p8D9SYia+ftv47lXKBJnb6xIHEEtLDybh/SbhIy0bBJ
D2+WTEYWHlze2d/FHZlUnmmrlEnQwo+cjZ8VQhP1+Nnj5kUvZOHMCs23eU5F
JjVwWrsqa6CFmzwKC14PTVRw9uixGGjhSUnf8uKhtfs9uXR+pWnIwt2SK7S3
hCa6NcSziQu0sN6QyF2LoUltedVzUSy0dl4XzuqeBq3l9TObDCt5IwvPXd89
Yxw0UcnzTY0qT0fW9m1Hk6Sa0FpfnjX95xVo4fWNgwyKoEm9WnqkcqMZyDrV
ND1jandoUkbVy365QOtUxb6vZBU0qSceBm2+Qgtv3R12GZvUkn0ur81mIgs3
Httuf31ootrTqs2oMgtZuPXWyAhvaFKZtdsPXgAt3N9t/dnj0KQcCjxPpkAL
n5ts7q8/G5lUH93M/t2gdSrvrknoRWhStVeNWXkFWnhY8LQh+dBEB9P3hSb7
IAuf6TpnBzapWu9PnnwHrfUly/e/WsxBJkoySjdZAC28z3dnenlfZKIx3cp6
1IQWLqgy4PgPaKJ2Lf+OmeKHLOzw5JmBNzQpV9fHr/ygdaph/j2TddCkos3b
jImAFr6zvf6XXGhtXu099ihpHrLw+wErOlyAJjrzzdJmvD+yNi+vX8jzhybV
aGJQ5mJoYevThxz2QROd2Bpd4zm0cHv7yH8Wi5BJ7Vzdv11TaOGvNuMVQ5Pq
lvtqnju0Ti1I+Ga/B9pUbWzo1UEtRtapkTuH9IqAJvXB51W9g9DCL+adOuq/
BJnIY2u5hERoYds/068aBSAT3TllERwKLVzU8mrYHWiinBY/7lcKRBb2bzV5
+zpooo5dZcceaOFdY2vbnIQmauzt7lgCLVzBv88Xs6XIpDydSyrUgRa+5uB9
xxWaaMDmIWdWQQs/vh/ksg6aqM3ePVv1gpCFP+66HmEGTWQbtn9LvWXIwsHp
pxMbQpPyaPu7UlNoLe84zIsKhCb6fnXX3ivQwosn6TWzX45M5OW/PGs5tLB3
Mk+utxKZ1LEZa243gBZ+d8tm7BBoojkOdSpvCEYWNi4bZfkMmtRzp0HrbdYg
a+9nm1OpLzSpm3lTui6B1s5L98/9A6GJYr3ChkWsRRYujRlzxXkdMqmA9r0v
7ILWqSUtjD/brEc2VX9yuxvOhNapXzlRMxOgSXnNa1w7BVqnam3IjvwKTepx
v4dRf6CFp24IPW+zAZmU88On+5ygdar0+t2sIGhT9UNFl26D1ql3Bf2axECT
sq2c8Lb+RmThVwXLH3SEJnU5b87MztA69dn7euQIaFJdLWcMEmhhn7KnWxw3
IROFLP9g0iMUWfhzdNzzcGiiy6M8Vh+EFm43dvW4BluQidY82lAYAC3cfcXJ
3CPQRIkfelc9HYYsvDf9dsML0ES/Go9seW4rsrBl05w6Q7chk7qtt43coYVz
9vS5EQpNaqZj0NgX0Dpled+j6xtoUpM9+1QYFY6sU2XdL1f/AE1qYYOtfWtF
IAuX1fUJrg9NKmap3v3h0MJ5DSvZnoYmZR0+1v4LtHB+vG9x70hkooUuZ2P7
QWv7TuV5roImch/sa/wXWvhRyy/RVbYjk+o3oJzzIGjhKRlW5vo7kIkaGQ68
nwwtPH1d66aXoLW+MCfA7Ca0cJhR54Ebo5CJ3oeuPrZnF7J2v7O6tXgETbR6
6cvQAbuRtX31LH1uETTR/ClmoRyNLHx+3abefaBJ3X2X9WYKtNaXE3d38Ycm
Sq43u3MStPCByse2P4TW/ibQbNuDPcjavF3tuWXqXmRS2V3WVJsOLTyo3Y5d
KdBEFx4uSXDYh6zlldQKCSehSXVcuHTIG2jh8r5hvhSDTLTrV1JKHWjhn8/3
WFhDEy2aP72bM7RwiztXry6DJlX/wIXr36B1qp3DAROjWGRTlTmitqoErVPP
DziYM7SpOrDr0vLF0Dp1q/PrVRHQpCKTuzs9hRb+UzjC+9d+ZKKhM9oe/3QA
WXjc9rqXf0ATVftOxpcOIgtbsJ2RURwyURWDAYfGQQuPKDdxnB80qd1Xh/8K
hhZ+5rN4ZxQ00fhyyQmP4pG158049YJFAjKpk9Z3p82AFu55ZmLYCmiitivP
v6qciCxctXtP407QpOwz/xU6QgvbH17YfS40Ub3K25emQwtn144b3zQJmdTa
e06lA6B1avLduZdHQpNKN69AM6B1KmaZ5aNAaFIlfrf7RkMLd1524q5Aa9d7
bX3jCYeQhV3TU7umQhP9tE/5sOkwsrDJ0lUp3Y8ga/PuSdtxxdDCge+73fgG
TWrrr9CzP6GF6/fLTS2DJnV48tr2vkeRdSo++H3WMWhS4X+uFCdDC7td3Pvp
NbT2L1qvG1fnGLLw8+Gza3aBJjVq5cS6XaF16njx8FejoUkNXrtn20Ro4R67
7v3xgybKt9Ll0XFk4UXX1tsEQhN11dezx9bm1f2lhiXQRIdXNZnSPRlZe7+/
raKHQJNyeH+rcji0sHfj7/VvQJMyvXZp4Udo4RcNPhsLNKkhtQ/3MTmFLDx+
es/sJtBEZmaHdw2DFv5v185Bk6GJGvR5ZRcFLVzu4L43O6FJrftvr2E+tDbv
bSvc73oamehQgUcNO2jhCjbDXL5BE/3p3Shl51lk4TpGfWZ2PYdMNKb936UD
oLXzsqPeyO7nkUkVxmTaj4EW1g0otfaBJjrx9kvXFReQhQe3XW0VBk105aFj
+ZcpyMJOmdvz2qQik5rW8L+6/aCFk2wm2aVcRCblud2zWx608NZ+wZYhl5GJ
LKvZbYmBFt7W0Or2R2hSlc9v++8TtPCW/YFvsEm9v31p6hdo4dZ/rk/fegWZ
lBTa/DsILbx/c/Ttu9BEwxPt7VpfRRY+F0vnO0ET9V/4N7wftPC9WbnJg6CJ
svY7lT+dhqzNqxvJxcXQRH4NS5rXu4YsvCut6/Qh0KTMx7y09IDWPu9Yw/Jf
oIkG5+q99E1HFo7v1uvvZWgi8xFeA7MzkIUD/utT0yQTmdTPi41M2kALt392
a8paaFKL9JyW5UILl4S4XBxzHVm7XksfJMZCC5+xDz99FZqUX3PvsnRonbJb
b7c39QYyqU/13O+mQevU3oP+pq+hSX2If3C2eRay1tdzTpjMv4lMdLTarHbL
oIVLJ+9LfgBNFBt8P/s9tPDAV+UXzbqNTBR4atj4x9DavH/nMKDSHWSic5kV
ls2CFm7V9FTyUWhSk1+4n7gFLZw4a27oO2gtL1VNbnL8LrJwUGl2+9B7yKRO
N65TLwla21c3b6aegCby3J93/EI2snCnFnuapUEThT8Om14zB1l4wbwRg9pA
k1oW+atzL2idai2Or55Bk/rbcsKo39Ba37c7ZuH8AJnIP7/mhQ4PkbW++jd9
mT00qREx9QLdoXXK6dzc5+ugSbn+67P1EbROfbRpUbVWLjKp0X8Djv4Hrc2r
8FWuXtCkpuc8urkFWnjsn6zLd6C1fVu/9uECaJ26Nm9F+6fQpLxOvfz4C1q7
X3vjNt/OQ9b6lue1TneghdWCEbZ985GJ9hkcMYuDFo4+dDz4JDSph241WidD
61TVp5V+n4Ym5T32cNZbaOHChZuOfIMmWjelZqv9j5C1eTn3scUJaFJf/uvX
LaMAWTtvVXcZfoTW8urrjjVrPUbW8koFm9JVT5C1eZNxpkP9QmQtb95r87U5
tLbvbWr69ocWvj+kwZCtT5FJtTlG7V9A65RFP/vOE54hk7phMyZ/KrTwx1qL
FsdDEzXqNb4sGVrY2OtSrVPQRA3jybjpc2ThqakenTZBa3kz0/bd+5fIwku2
DJnwG1rLK7/DzHSvkIV3XFyzbgM0kfe6kzG7oIXzY5PVktfIRBVWzDgYCC1c
u91RfcM3yESLH/6SXGhhq3y78EfQRC/92yY9eIss/OHJzeRV75BJGQ0wTNsK
rVNuPlcfHoDW8qphR6vT0Dqlft92vwhtqkLXDYi+Aq1T9wPrO32EJtXiV4ft
pdA6lRHz0bf8e2RSFzM2N6wDLfwl59TNNtCkrF5fC/KH1ikjo+z+YdCkaFdv
yyRo4RF9wh+nQxMdaX+ycvwHZOGXya/qlUGTyj64aQN9RBb+cys/eTS0lrdr
J/VsXIQs3C5e/wU2UeMP88e3hNbeLzxz/iJoUsbDS5y2QWt5O7P/xIfQpB5Y
lORX/4Qs/MTt7ZTGn5G1eW1u2s4WWni23eDVs6GJoryauc+HFp5X6JCxDFrL
S276s5Kgtb7ptKZrCjSpmfnNUx9DCw/d7X32oyCTcnHe0b9SMbKw2yizl62h
iTpV7blVQWt971eUrcMXZFJR3SR7KLTw4rq9V0VBE713Geu+B1r4U3PL9LvQ
RHbtV+l9KEHW8urJV4GeX5GJxmePO1HrJ7Lw6vu3BudAE/V6zLPm/0IW3vvg
Q/kF0ESjFjeeGQUtvKLL65bZ0EQXVjRt1eo3snC5/nH+naGJcs1T9KqVIQs/
bNjzZztoIptHa2asgBau9/533Blooke5ni89yBVY67tRi2oY6iFrfbltA5t+
5ZCF2zZh/TnQ2r4sHxy9GVqnXDKr+JyEJvXni8O9d9DCFX0W1O+vj0z0LrDW
nzkGyMJ/T1wcvgWa6G+RRbuNhsjCgUYTa5yG1vKi/yF5AC1cf5z3qBblkYlm
z9Z//swIWfjwhhGOBjpkomHdyNUMWtjZvO5KG2iiFsfqZb+DFq47J8OzagVk
UtE2o8ItoYV9azbo5wVNqmhsxMtV0FpfC0+5uBqaqM0yXQ3fisjC52q2mRQG
TVT74dltr6CFzaONvb9CE9lbnZnfuhKycKdOXy06QZOaVHPlRjto4TYHk6c7
QmvPy8mUHwOghR2Dmz4ZCP2/33fafPNyaOFeadtnrIMm1XbG0DGnoIX3Bab6
XocmGuz1518jY2ThUQ5W29tBE81tnJNUAC3s3j+/SUMTZKIX7Q1y1kFreeH6
3W+J0ERVjFMkDVp4QfOb8xpVQSb68XPuaQ9ore9VKD/yMzSpKZ92bDMyRdby
gvfDoJFVkYkerM1fMhdaeOWglmZLoIlSfzv7VqiBLPziTuSE9tBE+iGb+s2D
Ft5v0G3BKmiihOKb1W5Ca/vKuUf6YTNkouLLvydUrYksvME7vnMLaCKH/U9W
L4XWzvv0ZbFl5shEm+ecNc62QBb+WWrlY1wLmeimTcTfaGjh6q82Nr8GTcpP
ZRs/ghYuWu708w80UcHpkX49aiMLl/Yr1+wWNNGxA2VWv6CFN1odm6RfB5mo
vK3Jh2Jo7edN/5L6F5rU3rz4nH/QWt/bXr63fl1kUm5zHddVgBaeXrFcqz7Q
RKtOVd61sR6ysEmz49HHoInMT7HnzPrIwjlvPpbchCZ6GX/Q6DG01hdPHLdt
1ACZKHLkNkdbaOHbJ/T1JkJr88bVv/BuQ2Thpm4n7uk3QiZ1ecpm7zrQwksy
Uyy6QxO96jjmypXGyMLX7xZV1m+CTKr/7j2TzKGFs/eddHeGJgq+Ol8dh9bm
TXTNyPfQRBPmD6h5uxmy8OjBpbN9miMTebbaRAXQwsFN9qb9hCYKqxleT78V
srDDEcevVaGJLDf3eDW+NbLw4NjiCx7QpJZ9G919JbS2LxKf7/4FTVR0y6Oo
fltk4VvrGrdwhSZ1MvbCaGzh9BNOpn7QpBrbNMyPhdapUZHeb09Ak3rb+5uP
eTtkLS/WPZK5EppoddzvsfbtkYWrfVgZdgWa1PjRrcc7d0AWruIZdnICNFGF
mBrfu1giC9ueNpn9AJpUz3jLyz+hhRfGDejfzwqZ6O2j/JAL0Fre9L6fHWCN
TOqs6/nrIdDClQvOHJvWCZlokdWtNkugtfPS9eKM9dBEoycbvzS2QRbusGBK
nwnQpJyqRUfNhRa2Lj01JQBa6ytbSs9ehRZ+tCC9wrIuyKTyJ01v8AJaODV1
9aH0rsikMv7c7f8MWnhdB7X4JzSpFlfqjzbshiw8cHbFog7QRCt63opxhRau
d/XWmhhoUlmzN9u72iIL85bSoChoUtci8/YY2iEL1145eUMTaCLn19lp3boj
C2+e1e37EGiiK3OL3qZBC98rONaibQ9kokkjT5c9UMjCrn628hVa62v3p9vH
9EQWPhoWuv8WNNGCRsrTwh5ZuGG3i669oEnpXS9pORhap+bPCvRYAk3q8/oE
x13Qwk0oK6pab2SiZ2YmzVKhtbxwbPUKYwdkUrU7j7pdFVo48VCNuynQRLU2
3a7XuC+ytu/bjuqztx8yqZstX354DC0ceOlC2w79kUmZ+w+Pmw4tPPV4utdS
aFJj9Ctu2Awt7Gm2b2QYNFHHtxGBe5yQtfO+9PbCfdBEhvbHzvcfgCxcdXH6
wHhnZKJq1+a5NByILNz52os9Y6CJJr4+HH5iELLw2N4b952DJrKrYB4SNxRZ
uLlh36xQF2SiKplWXX1dkYWnvH03OhCa6F3o+61B0MKtf86+/wia1MTVY8+Y
uCELjzn5fo7VMGRS/4La2sRDC3tNfrvFejgyUXFo7G+LEcjCdvONPZOgSVnt
7fH1GbTWl4JrWNcdiUwU9yWY50MLl/hbTaoyCplUZIUlJ9tDC+/pYxDbH5ro
eO6MWzVHI2v7tmqDigqa6O9eX6NUaOG9U2s2eABNNCD1XcZvaGG97YnVjccg
E3nF7s5NgBbO7J2+6So0UWOfKymbxiELf2weP2cLNFFe9pTNsROQhWP2j4h9
AE3Ur9Vc65CJyMJ3T3pV001GJrK1rmHXBlqbdyN2vzwCTfT9QMxHbw9k4elt
t/3tOAWZaEMLY5/90Frfy3Msdx9a61tfi3RvoYVXtdNvUwStbXSTSu3GeyIL
e488URIFTfR0fV6gpxey1nc7/ui1Dprot+fURuumImt53ehg//fQRAstHX2/
Qgsffvhlfdo0ZFJqh6tpJW9kLe+nNfvSHpoooo7rjr7QWt7/L8FgEjSRZW7H
xl4zkIV/NA4elARN1OvdVuNMaGGxy1tRBE10ps+poFJobV43rDn09ExkotoB
06p+n4UsfH79xESX2cik+i5IqBQILewxJvMQNqkJgx4Pi4IWnr08ZH8aNFGJ
b42Zo32Qtbxg3LjHTmhSDgfTa9yF1qkF8b5ZP6FJ2ZRN8Cg3B1m4oH2PB+Oh
ifwun3CJ9EXW5m3EIz4BTTS7/4mpffyQhS36/Mm8DU2U2fx7WvhcZOEWL5v6
9puHrOWlg3Pfxc5HFq50IKvvjAXIpEJOBPj4QAuvbXxmTWN/ZFJmHrYPmkNr
+7rDxEbboEn5pUXZX4YWfnujZXPzhcikToaHHGsBrVNtl41o1Aea1IiM6779
oHVq3qNhB1ygtddnLju3FlqnFgZ1mbcNmtScgJoJX6B1akd5t78VFyGTWnFx
2KYm0ML3XcOM20ETdR5TWHJxMbKwy3DT7sOXIGt5Oebr7FHQ2vPS78x44wBk
Uh27vUlrBS3ccV/cEj9oIne3uBuroIVfzZ/qkghN6txjp0m50FrfqJO3akgg
MpFNm8KEukuRhbfEHU55HoRMyjL2B32F1vJKtfGvdcuQiYJOT2s2AFo4xdF6
WjI00Z6MAFfX5cjCzRzXl86GJjpU26/wErTw4qQD5f9BE/2KWvPSeCWy8IBB
3b0V9P/+vy1hnBu08M22vYzWQmt59XW1FhHQwgvnvTh+EZrU9OjsWenQwlZ9
m619A010ZEFujU6rkIVN/Nb16QKt5bVdiU1aBiML15+t9/ceNKn2sZPn8hpk
ndroEdJaQZO6cYSrOkMLlxn5Ll4PTVTZbrLekLXIwieca8zfDE2qz5Kg1Weh
depbzc2Dr0Fr+yqps0PoOmSdSuiTMCgGmtSunjZ3f0ILb9+j17cUmuj5k066
zPXIWt6ndyezoIm83Vd1nLYRWfjrZ+Nvu6FJ3Vrbyi4WWqfoc4e3T6FNleu/
fRHPoHUquUK6xztoUiX21e2NNiELJxSk1l8KTcq1zer6R6CFI5v8zBFoUhvq
d7RruBlZuFOGZ+9IaCL2fONXKwRZ69s9/Hb2hSbV6MSk7/uhhf+kBnl9hSbq
Osb/Yd1QZOFSy5u2M6GJDqcYX7i+BVm4XuuFoaXQpJxrbKeOYcjCI7LnfB0G
TaqiR/mrG6GFyyV//HUcmtROx2Z3MqCFl025e+4hNKnxnc/Hv4fWqcQ+rRL/
QZNa9+1bcbmtyMJeZx8YlIcm+i/G2S0/HFk480Nrw94RyKT8886bDoEWrh2j
K78PmlT9Dyt9P0HrVJ/c3/OaRSKTKmhY52M/aG1ft7t/PRSa1LfQl2XXoHWq
9kmzLNqOTCrwxMtoA2itLzxqO8QYmuhdva9lHaCFD/kNed8fmpT3+MMOA6GF
rx1rW/cMNKnOfH7rWWhtXs+xO1puBzKpWZknrxlB69TaGyOXOECTMigISL0O
LZx8sNH+HGiivodWPlgThSz86ftZnzfQRHHpf3zq7kQWvtQ2K9EBmqi0ZPfV
DdDCOeMX/NoHTdS92oseadHIws2bbZp5E5rUsqwHpQ+gha8M+z2w+h5kUna6
60nHoYVjIxv3uA9NymJOv+3/oIWL9uYuCt6LTOS4bVncXWjh8be85pnsQyb1
vMudh62hhf8FVXDqBE3kM85wejdo4Vk+Y8cFQRP5JztN0o9BFnbKfXelFjTR
qlxDPhCLLLxr2ZmcP9Ck9j6yqDt3P7Jw7rGfD0KhiU65GHzYCS0cOib6dtAB
ZFINn6mlmdDa8zq0/rA8aFLn40+eb3UQWbh/FcOffaBJzY/9Er0WWqcq1y7W
PwxNas9Jrydp0Drl28WkUzY0qRpmi3PqxCFrz/vT2gYNoIlCRrY70iseWXjc
2+FLdkBr+76TzaQT0MLbvu2u0yQBmZR14K7dO6GFV9o77z0ErfUlp5d5KhFZ
uORkh8pvoYnavTZsPjMJWXhrxLV5y6G1vmgVfGg1tE6ZRA9PvQhNauOkHXnY
2vMy82TEa2iih02/N71wCFnYo4F1AR9GJsqNjnAfDS1cs2mzhfpHkEl9/XSp
lzW09n7tYgz7Q5MK63OoNrbw3lN/V+kfRSaaWOPHijnQwvFPq8oOaK0vtP6T
Xe4EsvDMkDT7AdCknp6YG4wtPHRUdK4PtHa/Qgxyz0MLi79lwJaTyNqJKmeW
siEZWXitVdG0s9BEFX3NPDqeRhYefjarhxM0kfVF61NeZ5GFv6Q+tzQ5h0xU
1mBjbqvzyMLWKTEtraGJLq1zv3HjArJ2Xrp1bdA3BZloX2zf4wehhfuVT2v3
AJpokdmRFPNUZGHXHStrpkETPXFYY7vrIrJwnb3TiwwuIRP1N2l6wBZa2OFe
ecOF0ETfq8rFc5eRhV+XTn+XCk3qwOoko1fQ2r5cfnRFKTSp3blzF7pcQdZe
v6ZzpZSryEQLM9ekd05DFm4cknBrCzSpuwc/DoiEFr49YIv7c2hS/dLsEkqh
hY0vTq9odw2ZaNKVKjvyM5CFbc8+qUyZyETHR33IM7+OLGxSY07L5jeQSb3e
f89vPbSWly9cNrsHTVRnhOfVnjeRtXm3vMWmPtCkfPjVcldo4bo5rSd6QRN5
pTU3sryNrO37Qc2tmt5B1vK6w/LSDtDCAYP7OXpBk6raIdjGB1r4le7llQBo
UptbfR11CFo4pUVBZJu7yNrP2y4pwgtaeHed/OQW95BJUUzIMRdo4f1PHXtP
hCblcHKsaRq0sFeWZdodaKKIokvX/kELf975rqteNjKpEN+CuuWgtfv19ctF
c2itL35ft/0/aOGjK299yoQm8q07JX3BfWThssiax+1ykLV9lXqrGj9AFk77
Mct4HjTR23Nzky8+RBY+1PRGLcNcZFJTuvdaPQJa+GG94Adx0ERb24TpWeYh
C0+qeLzOFGhSt3rYp2ZBa/NuPGVOzkcmmpfTsc4zaOEturU+r6FJbQ0osmz2
CFlYz6/B/V7QpGoO/DD7OLRONTVw3ZQKbaqa7+y//Aq0Tv3yfTT7JjSp3ntP
L78LLWzYY1ZhPjRRgp1v/ooCZO1565PkGQNN6vvc70PyoYXfV+oxq/xjZFL6
evp2daGFw/v2nD8VmtS0zLb390EL0wt6mApNyvF8cXA2tLDfx/vbnZ8gE/Ub
m/GyYyGycI/dPqtGQROVHH5Y2fgpsnBh3163c6BJNdWzM/kLrVMHrP0MRj5D
NlULU0sHBUDr1BcTi4nLoEkt/eU4fxe0TrWZFvD0KjSp1W8bnL4HLXzl18Wx
Oc+RiQpNH/1+C631tWFtqrR4gUxqUsb6rh2ghf03FVXvAk3q5ffp+72hhXN2
uF1bAk1qV/1xI4xeIgv/GvPkQhtoorq1Q0fOgRZePTg87Cw0qe76R8fnQutU
s1XNjXSvkEnV+LnKoD208FXz8Xl50ERXA89MKPcaWbgg6PCt9tCkqnwbdtwV
Wsvb/Rs0yILWrnfGioRb0MKnRw5a8BWalIel6Yw7b5CF8+e7xj2EJprSvolf
tXfIwtPD7bLHQhOtORx9PhBa6ysnHUJ3QhPt7ebcyfg9srYvJotNJ2hSi3/o
9WBonUo/mbJrGrSpOvtjcIdA6BpqwuJ/P/ZBm6qenfsbPobWqQl/z9Z7Bk1q
3zX/qm+hhROPn37u/gFZO++TDiwMgdbmffiST0M+IpMaGZXbdgW08JBWq/cc
hiY6cdxrcNgnZOHZ0W6js6C1fbV2q8FjaGFfh/b3f0ITvTehXo0+I2vz8t+z
fR2gSaWfOF0yDFo44tLbbhugifhcWYcoaOGxyfVH7IEmNX3DiZ0foIWHt112
tL4gE41K/Tl4JLRws6OlrgugSa0MefxpMbSwfeKKP/nQpI52DXj1HFr4Q8je
n3bFyKRu77k1aTa08M9vTTvOgyb6FWdmvRda+HHVpjuPQJMyaOSXUvULsvCi
jWmPFDRRvJXVBbMSZOHaPSweXYIm+tA+/4jNN2ThzhYJSXuhSeX1r71xP7Tw
4uGp8dnQ2sSiWrziO7JwvcvuC55BEx2vuHJ/+x/Iwsv2mgQPhCaVs7dn5fHQ
wnf2nP9yFprUtZ2POxVAa/PO4MD78J/IpGaYnZt6AVqbFzeLrg37hUzUo7Dn
3HGlyNp5pw0mE6GJcuss2uBQhiyc3UWm5P9BJjWh/5LN76GFsybcrfobmpRP
nNOx+n+RhSusn7hkNjRR6lK9wk/Qwi+WXdl94R8yqXVxxyQVWqd2nfhcoQja
VDVxXGL/CVqn3JetHlECTWrg3piV36H/9/u+G2Q6kBswqcLyDj/mQQs7vXxa
fSU0qUvqZtU8aOEjBvH6rnrIpPbcr5qDLbxnTr3nI6FJcb+ui32htfs1LavS
Zmgi3/8m6yl9ZOElofk3vKGJJtT1+HLeAFk44JPLzS/QpLa/+XF2tCGy8MaT
YXcWQBMNv+AUuA1auMOtCANVHpkoLm13dQ8jZC1v3/vd7AY00axt1+d+hdbm
5by0pZUqIBPtrDM93LoisnAT7wNNIiohkzr0bY3Xfmht325cVX1mZWRSbjEj
Hu6BFr43o06rO9CkXN0OjJ9hjCxctmpJlVgTZO0bfq89G2WKLDww7XDbh9Ck
/DZM1X8CLWz1bsKZQmiiPY9CLg+vhiy8Ra+r4xRobWLlnTryBlrY5Gjxh2rV
kYlqP9j4sakZsvDE78/W74bWXl9UeYmxObLwgCnxSxtDE1UrHlv7aG1k4TT/
jkn50EQGKc2f96+DLJzjrXduJTSRs4lt4yxo7fXB0/2wSb3sFZXTsy6yti/e
lCtbDW2qpjbzHBcBXUOd2+mbcA/aVD2KadT4HbRO3Y0cWta9HjKpWicP+c2G
Ft76/ODzVdBEeaHORw9AC5fPdUiMhyZqbx238EF9ZO31/RvHtW6ATNTUdKD/
MWjh6l2/xuVCEw3ossjEpCGycKOXi8IHQhNFfRvXKh1a+NXrkaMzoElV847c
dxNauKDqWtNSaFLWf+vO+gctXI2avTJqhEw09Kjznq7Qwi3bHboaB03qSa2p
dWo1RhaOHvnnuy201ndP6A0LgBb2udfn/RpoUm1GbZt2DVqb15WC0+40QSYa
837s4kPNkYXde9fadBea1PrZO2J/QetUWNnC17oWyKRWWVfq3wRa2HLe97g2
0KSeWzd3Gg6t5fUk140R0ERLTstxv1bIwuFzdVV8WiOT+nFEV7wAWjg3rMbG
k9BEKfk/V69rhyxs0cRzXCQ0qXkBxuWvQwuvvf30TDE0qQpO071+Qwu3DzW5
Gdcemcik4vpXPTsgC4+OuZkzC5pU61rH62+A1qmM3YkuYdCm6mkluRoBrVPL
3w92joUmtbbW2c7XoYXr3G1W7QE0kXvPDodyoYVdw/rcqtkRmajXUoPjidDC
ph9qJjtaImv74pxr2Tpo4fpZBQEPoIlsfcyMjlojC5ezyFtSCE101vGef2gn
ZO1+e1RddQaalEGDnrOrd0bW5s29X9E9oUl98jw9egq0cKvLSbeuQxPVq97H
fZwNsnDfwvy1S6G1eXHc/Oh7aOFttguWTeyCTDR22Jg22dDCumO2A3OhiSoX
DZ5n/R+ycKdF11pkQpNaEBkxqkJXZJ0yXpS2qiW0qapj8GNQe2idCtrjM3oo
tHa//IvbnYEWLtLvePk+NCmjtsNvG3ZDFn4b1OJfLWitr+dcOtgCWjj9/dUJ
G6FJ3d7eLXo/tHCP5n0bZ0IT9b8ueu9skYXNjuq6VbFDJiqalmQQAS18eoJN
l2fdkUk1WtmpyXtobd89a3K7XQ9kUrtK/4R3hNbO65f9adhE8xafmGMHLVwr
9mH4RGgi/Z4XQjYqZOHVLn3/Ow9NtPxswZEv0MLPR/gtceuJTOrntHOmI6GF
O4TdtpsNTVT9uvW3Dr2QhX9fm+jTG5ooYM6N067Qwh6Rveb8gCZ6bFludVlv
ZOEdpd2fJzogE2UZ31/v2gdZuPknm469+yKTGus6M60vtHDCjR29NkGTKnbo
vWQ3tLDTj3fZI/shE835Gdn9BrTwuGav/+vaH5loxeQRrw5ACx89+7HibWhS
6dWz2n6GFl68JedyPUdkomlVhwWGQ2vzJjrbbLITMim//s0MpkFrffF5q9vx
0ERr/A8PbzcAWdgmf9u9idCk4tQD/eXQ2nmJDllm44xMZFAypfZkaOGkneZt
/0CTanGh3Q/dQGThDS1+Bo4YhEwqvOUvm4nQ2nk5X1I7BpporVvS3uvQwgcS
rK1eQRO9nt5pshqMLHzzmX4ENqmvZW4dt0LrlHPje+WSoUlFVdn4sxha21ce
VlHfoIks7PyT2rgiC/961vT0GGhSnStVXhEIrVNRmw4dCoYmNX/TwbTj0Dq1
tOF3swvQpmrmn32FL6F16s+LDDNjN2RSbuMn1KoOLdytNCTcDpro5sP85suG
IQt/7Dap/DZoUtsfXvqcCK3t2177F12BJgoadaS+5XBk4Z0T+MKSEchEVqYV
Hh2HFp5Q1vFH6khkolWO935XHIUsfOnQzSHtoImW9qywr/toZOF9r2ZP7Q1N
amthyz450FreLHkytNJYZKLPXf7LaA+t9aUOFr+mQpP6HUafvKGFlx41VWHQ
pBbvWu5SYRyyTvkOd3NxhCYV1Oz5s1HQwhVbzPK9AE2q/KAhSRnQwi8uBRwr
gNb2tc/3DUMmIAt/uDehxVBoUhef3b88G1r4WNeTfo+hSW3pONpaNxFZp6a2
3rSsCrT2+lgLk2HQOnVl4/ylRpOQSQ1b96RidWjhCldnJ9SFJhWz27ZGA2hh
g95HGvq4I5MaPn7hzGBonfLvM+j6IWgt7xiHO5AHsrDzjPrjzkKTar0qe8IN
aOHyKxt2cZ6CTHTkbT/f99DCPJ7H3vNEJlV0c/nBt9Ba3qt4L2LFVGQir88f
nk6YjiycMufmwZnQROFZv6skQwtPq1jeftgMZFKTcz1GjYTWKe8H0/kJNKkn
w/uV/IXWqZTqbj6NZyKbqt7+JWdaQ9dQVUtyKnlAm6rh/+o2vA1dQ4W2ian8
DNpU3T+S9rL1LGSdulNUUN0OmtTfqLDER9DC7ZrvmUizkYkGznz0+w208MO+
US62Psik1jjaT3WFFr595nCbPGhSY2o7Wgm0sGFglcB/0EQZwdYbHecgCzeK
b3dgDbSWF93mfFgPLTzqoYXVbWhSdSrO7CjQWl66/CyosS8yKS+9Bd6+0MKz
6k8qDocmNeTkFJNIaOHA2H6tb0ITzQ4NeWruhyzsmbz0Tm9oolL7zHvt5iIL
X/7U/58jNClD/YNnVkALd82ed9lvHjLR1dLcPzPmIwu7n/m3/hA00bp3g23+
W4As/Mniac/D0ESRHsWWLRYhCzd032o8AprUpAZTF4yCFo4/1K5gOTSR9fz1
I7MWIwubdr64vgyaaF5yt2GVlyALtylc93MWNFHh2z3+4dDCwTI+PBVa60u1
Npe7Ai2c8fuaah+ATFR9ata/r9DC0fvr1moYiEw05I+5Oy9FFm7W023LRmgi
c7N+vTcFIQvnxyeurb4Mmci73q+ibtDCZy1z0wdCE/Xft+NWjeXIwttub2jm
BU1qW7tO+bnQOmV+5VtSEbSpqnvQ/cBnaJ2yoIA4WoFMapl3yxH1oIWT5yxu
0gOaqMm+bQ8ToIUtD9/feBNa61ud3+f9hBb22uG5Zs9KZKI6U//Nq7MKWbin
NDi2E1r72vbJNnA1svDA6D+xO6GJzpc13h4bjCyc+HFpXAI0qdy43V/OQ+uU
8ybTdRegSU3oOzjwIrRObQ36UfwHWst7PSMft1qDLLzoToLvdmiikQ7D6yZD
C69aPLChy1pkUi2qP3ZdDK1Tk7/ZXcM2VV8inrROgtYp+ebOKdCk3jw85V8C
LRwV3MHgN7Q2b6eXGHTegKzNi7LZLbFJNU5ulOAALZwQpEY+24hM9OKQ0b/K
m5C11xvEH+uxGZmUi9XbU7nQwnc8OnYyD0EmpV/lRmgtaGHH+L6xdaFJPb4d
cdMeWqf0k2b8dw6aVB+DmIpF0MK5fTKqNAxFJvWI2xzqCC3cT+9lVFdoomT3
WX5+0MLV19u9G7UFmSi74Ycp5luRhfdk2zYvgCZa1u9PQqdtyNq+zNybOj8c
mdS+9sV/06GF3w6suiwPmlS9EQ0GtIlA1q53o/6DSqFJnVufuL1nJLJOzTHZ
rRsKTarCqvBHa6GFl38/e7TadmSirkb3Fyto4Zyu9R2CoYnyY8of7BGFLNzk
xMviCGhSbgFpt1rtRBb+Vs5n+HVoovaf/v7XdReysPWms4ajdiMT1TcfeC4e
WtjnSeymZGiiB0MuPrCNRhYesmzzyv7QROH7Gz72hha+SPmPJu5BJrJXll4e
0MKLe02aHgBNqrBJnQkR0FrfXfCxOAOaaPPtqwHpe5GFN2wcf3rvPmSiPzsT
rgTGIGv7ovby3GhoUjs+Lw47BC3c39mlzUtoouGfcnbNjEUW3hFxPmMTNKmq
a+TuMWhhp12O619Dkwo/f+bdP2jt8477dN5xPzLR9wp5A1KghSNvRe18B00U
Nii/W+cDyMLHmwcaZkETTbpeyfcDtHC7iU18ah5EJjqWuY4+xCELL+jboKRh
PDLRlaHJj10SkIV/xc7yXANN5GDT+MNZaGF6WnD3KjSpVQe9OzVIRBYuF+eS
Yg9NauizvEMToYWfDC/5sgmaVK/C1BsF0Do13WuxVfUkZFPVoPyES32htbxt
G7vGB5pU6bHIuXHQwstGTth7HpqoXi/vx0MPIQsvye/wey80kcny7P2foLW+
YVpkYH4YmdTvX4UlFtDC20/GHmoNTcpw+/lqHaCFTw+1DToPTZTXNzWy9Aiy
8Pd/LZcYHUUm9bTZYMsm0MJfC1bnVziGTDR/gnuZKbRw2NxXTxygSUXFDPiI
LVzXcerVQdBEp8qvnhNzAll49tK/jcxPIhNZrDd5txNaeOPKtZ+OQBMZmcyz
SIUWDnw7q34xNKm6hi9tOyUjC2eYmLuugCY6XPPAoOvQ2vNypunTu9CktjmM
uJMDLdzKrOXACqeQSaXZe9jUghZucXTEQxtoUl+aBL0ZBC3cMsTywmRo7Xm9
M2Vhw3PIWl5o1mZPX2iixK5zd6+B/t/ve2obqjuPTDRz1X+HV0Jr8/Z2jRCv
C8ikkibq9/uYgqxT6bsKpAiaVHLfHyssUpF1yr9Dr7g60KRWXHozrT60Tnlf
Te/WE5rUSKfvY/tACx/U918SDk3kFnKw+amLyMIN/JYMG3UJmej88iuu3tDC
g+d5Pj8BTXRxteGaz9DCHbYk+qnLyERr29rmL4QWNs3Z/eEFtJZXlve75XoF
Wdv3ky9MdYcmZVWS7nodWji/rtfZOleRica2H/u2JbTwSlW5bEAaspYX5z9J
Pgot3MX7UIXr0EQhDrtdKl9DFs7LOBbUC5rUKE+Xm2OhdcrL/V3UOGhSMzcn
GsyFFr5/sSwkCpqUQS/L3OPQwu5DU23OQxP1WPXJ6Du08JjL5hbJ6cikXhXq
hTyCFp4watuLH9Ba3vzgktEzA1n4yOBpL2OgtW9oOr1sUSay9rxM6jAsFVrr
C7ZxBWk3kIWnfPpRSy8LWTtvj3t/mnYLWTgppmbwHmiiFz3bJB+/jSz8O2hR
fjo00Qqfx1XW3kEW3mI0xf4sNNGhOzvu5UILBw+4kTPnLjKpF8XDr2yG1qnD
JvOf7oEmZXb5AqdD69S1Zg5T70CTWlnEVR9B61SnvMop6h4yqTXFF+73hRYe
vr5yoH02srbvrp8qGA8t7DCxLO4etLZvzGYHvIAWdnnn1if4PjLR0z+Hx1rk
IAs/P1LwbAg0qSe7/AJ3QP+vbxxqlAJNZD5sTEDnB8ha3j1m9s/kIbL2vC+z
qjQQWvjodn+9aGiihQa1OxzIRRZuHJmj3zUPWcvLP4d3+pmPLNyIf+5wfoRM
6kCXaraLoIWr9Lb3zYcmem2hi65TgCx8586+mb0fIxMdmd+4YCS08JzJRWd9
oEn1qDZxzAZo4bgozx150ESDf1/s+gta62vDmkR1fYKszcvFRR2vQQuvNXv2
vkUhMlHrSvZ0DFq485NpTnegSW3ZW7PtZ2jhy5NvXi1+ikzqSObLPmbPkLXr
XcXg41VoUv8qV/leDK1Trv8+lDk8RyZ1+VaJ3WBo4Tqjrn95A631nRcXCnu8
QBYu3RC0ehA0UfoBn/IGL5GFZ85KbD8Kmij7v7jpy6CFFxz0Dl4LTerdisdq
A7ROvW8RfWAjNCmPm/stt0MLV3BM5EvQpKTwQ/bmV8jCn73NTSe8RiY1vuMW
H39o4TONDNqugCZ1oWHA1a3Qwh5nklLjoYkqf+kZavoGWcs7Fntiu0ATta02
3awbtPD4bykhYdBEC95uPODwFln4UY3OG7ygifocG1vw7B2y8GJvw6qm75FJ
ja5SumgytHa/Tv4alA5NZFBw03P+B2ThJjWuemyBJmXawr7kJ7Swd0r7slYf
kf/X94M6DYEWrjfVdO3NImSt730alJfxCVk4t7hL/ubPyES1Ko1wihFkbV+m
xcU+gNb6So+3b42LkYWNTvfoWQuaaOkbm5g/0MKhj48scPiC/L+BMSXkELRw
tEmt0V1LkElVPbB9Vii0cN/KNb8lQ2v7rrpT8sJvyMIhSTVbJkGT+jjtcOUs
aJ3yy3O2wya1x2qSUz60cJZXp3t/viOTunb6e59WP5C1zztwg5EtNKmeccse
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
8l7ymnXG//wf+clSJw==
      "]], 
     LineBox[{{89.39987578896412, 5.}, {89.39987737796909, 5.}, {
      89.39987737796909, 4.}, {89.400989052678, 4.}, {89.400989052678, 3.}, {
      89.40269431246921, 3.}, {89.40269431246921, 4.}, {89.40272495614101, 
      4.}, {89.40272495614101, 5.}, {89.40501929361272, 5.}}], 
     LineBox[{{89.40844974432031, 5.}, {89.40907322882077, 5.}}], 
     LineBox[CompressedData["
1:eJx03XdUzv/7B/CLjBuVzEqURHayZ65X2aKsjIqUSih7pKIkZO9sQkaKspM+
RoVINpWsyMy4KCOS3/v7+//pH+dxzn3Ofb/v9+t9Xc/n0ZGl17RhPuWJqJIF
0f/+Ljet4bUuriMV/f+f2iqt6PChWGgj1TrTYl8SdG21fHXxxrpuyEbqwHF9
MYaurT7sijhgDm2k9j/r/KwRtE5tTXjZtxW0kSooOvjTFlqnxrrETA6CJjU7
NrHDJmjhNldv2l2FJlob2TXmszuysNvt3r9/QhNN8kip+nIssvCBBvMXLx+H
TDQz+KqDlweycEDWrahkaKJVdreNcsYjCwdZjJ/1FpqoyLrXmnFeyMLPksz1
K09AJjrheKGcKbTwmKKKNYKhST2x6laCLTy4SaT3NmiizqF7Xx2DFs5Z0ynU
yBuZqGKHSTFmPsjCs5wDktpBk4r80NnSC1o48/u773N9kYk+N+3R+A608Jbh
FwreQhNt7JWlezkRWXh7Ta8Tf6CJAj48tmo3BVk4+NeU0x7QRO9KV7jO9EcW
XpkkHlUCkEntq3iucRto7fXr6/WbBK3drzBx8p6KLOx+6PmpetOQiQb5N69W
czqycP+HD9z6Q5PKrFnF9Cq0cHLbMMdMaKLU73VvG8xEFraZ22IDQ5Oq1qje
t0HQwsb+yUtWQhPVSl4c+AFa+MmMoF2l0ES2RtuurZuFLGxdUHPpA2gi+2K7
ev5zkIXP/ls8+y80qTw3t66n5yILvyvxbddoHjJRm+AKm04FIguH6Up+15iP
TJTgGH50aRCycOLP4GoroYnCFrqE1AhBFvZ1c77ZD5rU+Qy/vqOghdP6fVg8
C5pUxbP+7+ZAC38dNq/yamhSdz22rMmDFj7co77TyQXIpF5ZV6n6GFr4V8Wk
3FULkYlCxtbWuwwt3NRowR5sUlE/g+OvQgsPNx0wYnQoMinPQ/nPF0ELX8i+
4BEFTTRm4fHbKYuQhS8tbjipEJrUpOqPcwRapw4PDh5jHY5MquUAu/wd0MKl
nY29bkATWUc/OLxjMbKw7codMw5AE42MtG7xDlo4fZBpFDap1pNHLq4bgSzs
sjK0uwk0Ubceo1tlLUEWTsisbeO+FJmUQ8v4ScHQOlVUENT6DDSp7Zv8212G
Fo7cU/mM/TJkIofCQ/tDoYV/zzN2XwZNamKTp2/WQwsHGoZsbByJTNQnoKTO
BmjhbWnNcx8tR9Ze7x55MnkFsvC37Yuz0qGJHovv9hvQwvVHbzG9B03KZEGt
hyXQwj12rNZzWYlM6mC7xFFe0Dp1c2e9mouhtb6UIJ3ToXVq2PF6TVuvQiaV
atx7ZR9onXqnK9niCU2q/xmLN17Qwm/cHaPDoUk9aDlItwVauKDbpPlHViOT
uja5SdJZaGG13cM4GZoo72kdw+/rkIUdPNISSqCJ9tc1K9ZtRhbO+8FxgdCk
bo96v/4/aJ1y0oX6pEKT+jOp95Kb0MLdy90qvQ+t9Y199u1eQAv/bXqzdhE0
UZctY6/Ni0IWbtRptmHLLchEfl3X90yF1vr2kanJ87YiE82e/bT1bmhhs5ft
4/ttQ9byatGtZXo7kIW/G2X/6A5N5OwQrzdoJ7Lw+tFFO89AEy0zWra61y5k
4eKg+kda7UbWzuunGd5v9yALR3h+q9BmLzKp4L9W74dBCx9NtXDcBa3llQHx
X85CC483abWm3D5kUjvfupQ3gNbu90bLq5ugSe3vGxi7D1o4P17fLhla21dX
G5UrhBZeEl6pl+1+ZFLmft//DoLW+v6rZO9z0ES56a93Wx1A1vJqw7wTC6GJ
rm1Z4Bp7EFk4q1Oz4jfQpP427NTB5BCycAXf66atoEn1zQkZ0R9auGVcjXdj
oYmG1Z1T4z601tdPnhsy5DAy0cHpJ+9mH0EWXrakcMZPaKKt9SbtGhmHLGw/
dlLUDmgi38/jp2yNRxYetDpmzXtoonC9akemHkUWjje2X1MCTeTdYuxHn2PI
wmMfjxv3GJrUvLito3okIAs3K31jYpuITNTvcuUN/tDavHG9VC8QmhSXe21V
5ziyTh33ejPoCjSpci2OnH0KLWyZN2NA5RPIRA09590MgRZ+NX/y1EMnkYk+
tTKOPnkKWfht2Kfad6BJXa56Yf8jaJ0q6b/i+C9oI7X+9Qm/mqeRdSpwhffw
QdCkpg4pdbM8gyy83HTZDBdooiYOze8PPIssvHbumFHR0ET9W/cxT4QWLnJo
5VQCTRR7LyhrZDKycHluu2kWNNGQ9i83XT+PLGzzo7wuLwWZqEb0qaSm/yEL
V/LaPnc0NNG00J+OjS4ga3ml7/HR/aCJeGxGhQnQwgEvjRN8oYluBKYdKLyM
LJwzJdinRyoyqTmbJ/dxgRbu1DJYfxE0qYWWsS/WQQtf+rhy4D5ooqVfNuXE
QAt7tD0XFgtNFDkuts/pdGTh4CYdn/+D1vpaD3rX6QqyTs0fdaOFMzQpnz62
2+ZDa32v0cxFhleRSS3umfOhFbR23h+5znCEJnL7b627bQaycIuW9m16XEfW
9l3LHMNKWcjCswNyXbrdQib6OaSt3vQ7yML7jvV4fB2a1EgDq/AKd5GF/dy3
lBhCE91fGG4cAK31lVVdjW3uIZOKW0yui6G1feXk7ZUMbaS85gVOyoeurczm
RrQwvI9spIYPmmtsCq1TIxte+zEWmlS1trkfl0ML2y6p987kATIp37CzUVHQ
OlXP0zruIzSp8dOzD3d+iCycJhb3h0ETve462X4ptPCcTivnnYcmdcV9drc7
0Dq1Y9Xt7hUfIZOaeb3Jl4bQwmMaFIePgiZ6pL/dwR9aeOvzdfsyoYlG+X+v
OicHWXiAw8Pcw9Ckvtm2qZYNrfWd1of35UETzWk3b813aO28qPdHp+cik9JL
Cey0FVqn8qPsr+ZAkxrUIataLrTwiR3bKtZ8jEzKa93hUl9o4Zfpdn1XQZPq
Hr0j5iK0TlWw8D17HZpUWoF5e5M8ZJ3qZrg6xhaa1MUzj8YGQ2t9/V/xtPXQ
RPrbbxzJhtbmdYtNNX9CE9VybW1i/wRZywsfqj85C00qJTa16X/QOvWwX9fV
X6BJPXtoUL4IWvhwt7BtnZ4ik7KKrth8MLRwte3/TPyhScWE7b+/AVrYet4v
u1xoIrs8/4aNniELn3VP79QWmsjPKGPt5OfIwnbVnp3aB03U+93Px975yFrf
GRNauO0lMqlDnpmyH1r7vCeslxu9QtbyTvTwhWOhhSdPqDrIH5rUIv+bW7ZB
C08sqmEdC03079w0xwavkYVHHWwYfxFa69teLgXeb5CFpz/Zsfg8tDZvZ62r
8RZap7a7Hvw+6C0yqetzvvyaCS3cfM1CQ9N3yESbx232M32PLJyeEBDdF5pU
pZIjB7C183bAz3g6tNa3VjfxsPuArO27T6WZEdCkwpr1vbkFWtjCxa0kD5rU
h/TVG+oWIgvXiJoUvQeaVNmq/gN/Q+vUru1v1fCPyKTIxnD7BGjhzoNqFU+G
JmoU/ic+9hOycC/Tnzf+QRNtHHooY+ZnZOGe59vrG31BJvrWz/3ZTkEWTp3m
efgpNKn5Tn1iK31FFp5nkNPbHpqUSSX/X6uhtfNqaVOv3DdkosfGm1OjoLW8
ZOeRdhua6JPH+/s7ipGF9RfuWncBmlSDKs6tK35HFn5cLXtUFWiiRdz13xdo
4ZVPOg5p+QOZKLGcQ0noL2Th64/+9j8GTWR2o2KKcwmylrfWHFtxDZpUVfOr
0U1+IwsbvwjeOhCa1IFmHz/mQQuf2jnzZZc/yETXFlus/QMtvH5yvRvNS5GJ
HlRsNLLNX2ThPh26ls6EJgrN7PwqCFp4cNQcp/b/kEmd3F7aeBy0cGxZ5UfV
aBQwqSkHg1N9oYWPZ9Z4dAGaVOyGCu9vQGt5OYM634QmdadIb/0vaOFVU2x2
dSuPTDR9bEb8Ymhh9xFzCyvpIWvntbeBnnlFZOHM1JtT7KG1feVwNO8YtLC6
6Zx1CZrI03T/+ahKyMKu5cn2MjQpJ5usmCfQWt8NW9/PoDIykbnt3oRX0Frf
8zr9tbEOmdSeqVu32EILP1EcaQdNVLZy8DjbKsjCYVVnxbSDJmUzLP3TAGjh
jZeSjT2hiTJWH6m+EFp404Q9LhuhtXk7e8n6ClWRtXllVbrsEDQpb6lV5xW0
cHI9o46bqiETVfp25NkRfWThKAdH3+vQpOym0X+3obXzvvmwfj0DZKKVeetM
7aCFf2yvVJRuiKz11S81Z1WujqxTq1cmNp0CTapurf69n0MLn15pl+dmhEzk
03XBm2o1kIVbLrliNBKaVIfi5iGh0MIfm/w5YlUTmVRegyU+w6F16lbPwxau
0KSSaW2DFrWQhVub1+4yHJpoWu7jw0ehhbs366OrVhuZVJcWOy8YQAsnJav5
taGJbm9+eesatHD/3kZ6fesgk4oLLlzrCK193j63Wg+BJmrX7W7EVmjhFpOv
WBZBk/KaFPKsbl1k4Yqjxp6qZIxMVBhnnjzSBFk4YlV19ynQpLY+fpQdBa1T
cdW7lByDJvXoYb83idDCHlUn/HcKmqhu8hnD9abIwte875RsroesnZfCVYOe
QAv/SQ2f8Q+a1JjIvUNamiELp6172tAeWutb+0f3HggtXN2/pHUoNNHrTdZ9
nOsja/vu1LuMv9Ckhq+996FyA2Qt79sW2SRCE3XsE3KxlQWy8JiyioaDoUnl
9638cwq0cMYyqz+boYnuBnu7vIAW7qoLnlmjITKp0vpnTayghbvoet5pAk1q
/zRHOwdo4TeDrO+4QJP61adxpAe08N9v8dc/Q5MavSnOv40lsk5tPLTZ1xaa
1PlOfuMGQgufadUqdyg0qfruq+uPgNapxMl3/c0aIZMau+V50VBoLS9/7t1/
KTSpny9cDTOgtX3T7dLKu9BE27c/mrGsMbKw/1efGjHQpOodbpbyBFp4/rYn
m82bIBNlXT48+jS0cOe6V1qcgSaymhlaOtAaWXh48RrfcdBEF6MHVA9piSy8
wsbx0ltoUk2CrGpXbIWsnVf3thYjobW85/xv4HxoYVuDmi83Q5O6wbcjr0EL
V/pa72OADbI2r14mXXkPLbxzy5R9kW2QtXmV++LDIWjhcT7vP9WxRSZqn72t
XK+2yMJe4yclz4Umpbfv4Pbz0Do1t+jC7tvQRqqX2+VN96Brq4jjnPIZ2kgV
rFedarRD1ql+vg+9baFJfX39QS8YWnhyl4Pphu2Rtb6+2rpKfWjhi4fze7fr
gEzk5z5mQZXOyMIbRphab++CTFQ/wS2qd3dk4RE/pj5fDE2qwdYdtruhtb5m
+bnqXWhS89LdLJ5Ca3nzfM1uY3ogk3qQ3MV1DrTw02Db6euhSV2f0d52B7Tw
kEc9Ru+FJvXfs6lDUqGFU7O71X8PTWQ295Bjlh2y8KF/M6379kQmssl+0tUf
Wvirn3daIjSRiaffk3vQwka/5h8ohCZVMHV/+8qMLJz7+/dNd2hSM3IuX/CB
Fr60fJlDC4VMNPFLRgMHe2ThmJGGTruhiT5ldswLc0AWdv7d6Gc+NFEFM4eC
Wn2QhducXW/uAE1UsGTc5JHQWt4zu1KjY19kov6Dhvbv0w9Z+NWgfrFj+yMT
RTU3qbUXWrho0LF+WdDa/ZIe+r+ghX1GDm37B1r7vs32JDQYgCw8N9lqsgc0
kYFeo31zBiILt5rqcGwxNNGLngY+cdDCxz9bHH0JreWtGYVVbByRhYsNzdMH
QBP1uZZ5ZwW0cNwj03+J0ES96gcu+A9aOMmxpIf/IGSioCNzag8ajKz1RdMv
njehiR62njyvnBOyMA+1Pd8WmmjDaR+9CGhhmzCXy7ehSe0ek76NnJG1fdmi
zeJt0FrfTa9ROxZap8wyDGxPQmt5L+7qpwvQWl53/FCaAU10e1CW/t8hyMLL
avm5Wg9FJtU3uUpmG2jhCx3dVCA0qROXYmoug9b2Zct3JnehST02edOh0zBk
La9bOc29DU00o2/TSX+HIwubLWj3qfoIZFJGJnMWGEHrVJ9Kb+s3hSa1J3/G
dHtobV/Vufuwigsy0Us/j/Cto5CFXf2GLrwNTWrETrNjD6C1vp5//3YuNFFT
R0ufZmOQhXt4ljotgiZ1u6za8pXQwjdPjbFfDU0qN/5d/DZo4WGvc297uyIT
6VUfuikMWnhwUIsHq6BJPQ/uYX4IWqd+x9ltzII2UnY1zH0fQOvU8TMDFpdz
QyblcHSmXwdo4bsv54+3hyaaFdTOagm08Idt301PuyNrn8jk/tN2HsjCdcuf
jlsDTVStW7u1oeORhcsXvfeNgyaVVzfi2mNoYXeLqvtLoUmJajl4vCeysMvi
xgnR0Nq+y41fudYLWesLcxMfukxAJlW2aEGP0dDCL26NKJgDTTS3XVmb+dDC
Vcfc/rgAmtSERp2v7oLW5uVhFZAETeR4dffnnj7IwufMzFPHQ5OqPcb9/Wpo
7fuauuXGdWgi39dDuz2DFvarn97yLTSp8GMmRg18kXXKd1n3tY2gScV6TNUf
Aq09L0ufBh6HJpq/t05CCrRwWVz+iN8TkUmpBeW//IEWXvjCbaORHzKpHTZB
Jp2ghRcFTGzrDq317YQgm5XQwvea+RS+gtb65pX85z0nIQuPPedvUmsyMtG5
yPPRPacgC/+dU7JpNDSpNq/+1NwKrVMrZ7w7uBNaO69Xk60uQgtvb+Sw6RI0
0bzlPcquQwu3P7vy3xx/ZKLib5tdawQgC3cKm9h6FbQ27y7mSC60cETMqI8/
oImeTv9lajkNWdjh7fEmjaBJlSwIHtECWqe6zo43bAtNqr/Lp92doLW8M2LG
8zxoopF200IspyML3xjy26EPNNG66B8t0qCF90aUJFjPQCZaMytskRe0cI0g
x3LToIkub+jpEgct/MjCcvjSmchEu6/4WCRAC1+5dXfqGWhSL9LMHbOhdcrI
aEfBb2hS9W2aP9k4C1mnii/3nboTmpTjk4GFFrORhfMeedl7QBMZ7/latmwu
svA4XfL6g9Ckjt8YtykWWvjnukUN0qCJTHqE9ZsyD1k7ryGhU5dCkwroW3PZ
FWjh+M9+9YqhiQ7/Ljz2ez6ycMiGxAF/oYmWHzO6YxKELLxxybsp3YORSYXl
RM8eDy18LTnpqRc00cwnnWanQmvXWzi/S8cQZKLXWW/9M6CFretU7+S8AJnU
17+GWxOgheOy3dYtWohMKs5g1eqV0Dr12mXk8hxorW+s8T34HFqn9B/3XPAT
2ki1Nd71QIUi69ThCz8OJ0GTqnVrXNMH0FpezRofbRiGTFTLwPbTdmjhhndD
3j6AJgreU1DtPbTwrvfOK4wWIRNt8raysYQWvmprr8/QpD5kNA/rBy086XeT
oRHhyESxfSJt/y1GFr4e520+LQKZ6OD3A/rnlyALD1Vf/fSWIpNqmZDh3gla
WH9g+tzO0Nq8q5rfvA+09rwtnPncZRmyltdMgtsELUfWnpegBRIGTSqtKJO3
Qmt579bZN6+hiezj86JHrkDW5m3Y+/BZ0ESBLq/mpkJreelj8lSPlcikhi12
nvUCWqeqmLfZg22k1hS3mKi3ClmnrEcc96sNTWpLpZabsIW7JJ/b0AaaaK9j
jdanoP/37z1OHWuuRiZqP6QgpTe0lrfqd7UPhya1JPqMXyS08CufbT4noInq
ZJe6tFiDLHx7sb7J9bXIpIzjP5zNhNaud7kLW61DJmUUvbR9X2jhyL0GKUeg
SXX+Xq5SHrROuRbs719jPTKp6I1JUz2ghZuXHZwUuAGZlNuVgRV3QAt/CrJ9
0WEjMqnpbePNO0IL1+t+5T93aKK8Lwdml0ALO7u9iTDehEwqs/Os3KfQwnMW
FXarsxmZ1NY+jQJ8oIVV6pJNM6BJtT246fVOaOH0Z/sz90KT+qbvNisWWvhB
qxV3ukUhkxqdO/p1L2idqlDp/FYXaFKVcxI+LoYW7m5bOvkQNKkRYWnTK21B
Fs5cvvP4aGiiabts6w7eiqzd77F28ZuhibqcTOz+HFp47LDQh6+gSR3sfXZn
xW3I2r5pPP/3GGhSviXFadOgdapaSmkZtpGq4d9h4xJonepWyVs2QRupnA9T
Z9+G1qkVjVd2NdyOTGrM99Sf1tA6lbUhdrA/NKmc0y+DT0ALv913yztuBzLR
wBWXxjbehazN20sJX3OgSX2fFNgmYjeysMPIDLe10EQXTXa0urAHWbiCY8Xf
n6CJmu1q9iM2Gln4oNektPfQpCb8TDStuBdZp7bfXjKnEbSRmlo17oQddG1V
aWSK/2BoI7VC3/9AEbRORXh9z/gOTYrXDY1qvg9ZeMZIi1oO0EQZ17Lumccg
C4cua2I1FFqbtwtnfHCHFl4Zu7mBN7SWd66aTM2FFvbcssfoLTQpw/xOM2oc
QBbectnbwQeayPOo6Yn+B5GFpzx2/zwLmtT4Ucfq7IcWdsw63Nr6EDKRR26b
v5OhtbxS223nNmhSO2aWm7EPWtv3f4/3a3oYmShggvvQB9DC854uNBdooisf
zmb8jEUW3th1sG/SEWQif7dvqbZxyMLt/at47ocmdeqScdJBaGGDHjubnoMm
9SL855SL0Drl4RQSlwWt9fVr8TYUjyw8ZEKlthWgSX1Z77NcQevUlY6z/42C
1vqG770tXtDCO04mX/GBJqp7rfqAD0eRhWt8XXbV/RgykenXkRXmHEcW3lZg
PPAXtJYXR9k5l0ILD3eO+2B4ApnoZE6zOw9OIguvW0LDnkAT3a1tOeLPKWTh
boEBJiankUn9O7rU1wxaeM/zvGcHoImqFfRd/BNa2Ndo0ecuZ5CJJu3Y0sUT
Wstbaa2aT4UmSqg1skfUWWTh0qUT5j+G1vr+wMUVyycha/O2xbfuI6C1z2vz
InMztHDnXsNCPc4hEz28/Md2JrSwjemV9yHQROW3H++6JRlZ+IfJ1Yzj0KSe
zk8anQYtvLzbysAH0ESLhoxyHXIeWdiCq/91gSbK1GXeuJmCLLzm8vUHnv8h
k5pz2b7LXGhhpyMN+kdBE1X5kxi+8CKydl4y6zbtfAmZyMDAX0ZAC5f1mzfN
C5rUx3u2FdZA69SNsl45cdCk3qQWxL+CFq5Z0z7/GzTR/CGhD9wvI2vXW7t+
4bU0ZKJ+I34c8E1HFg6ut7TdF2iiJTk2DZyvIAu3vPb61jtobV4vGv/p31Vk
4Y8x84tCriET2VQ++zU/A1nr6662Z7yvIxMZuhhMN7+BLDx+0JOKPaC1vvpK
32kgtPBs9WbPYGhSlju/zP8KrVPtx9xNr5KJrPX9Uqs1daCF/dIbZP6FJjXV
93Wx8U1knfrhW7JqATSpKdkWhZnQOnVvcUj2A2hSVz7p1lbIQhZuvcHfzwCa
yPze+K7B0MLP38X6noUmNXH6iA+foYVHnSg1PHwLmWiOU8ToVGjhfnGVy1W4
jUw0o+S8wW5o7XoPHT2GTXT1+JC6rneQhW9Xb1juBjSpazktG+VAC+8/OTon
F5rU6scXh1e+iyzc9WD5+s2gSW079jXFBvp//9/xwcx50ER3Hp5NP3kPWTh/
eMadFfeRiWKPHPHJeoAs3CLlW0D5h8jaea0xcHQvaOF37Z3KL4PWzlud0tMX
oIWX7fmjXwBNqtOsYVuNHyELX39QHD8SmshyYGjXQ9DCQQc+xaZAk7Ko0sA0
H1r4beqpHe2zkYk+r3GwWAWt5d2a6kjDHGRSjybUbtwfWjhc9/7+SGhSiU27
P5wNLTz0q0VRh1xkom6nmrkuhtbOW+7Uzjuhtb5e0XPROWjhJdHJ2ZegicLm
hBzye4ws/P6Ow2u7PGQiv7oRBiughaNr+f8s9wSZqHLZ+4/boIX3OdRpOOUp
MlHvf85TLkILW7Y0tfsArfWFPgf8bj1DFhaLBk/vQ5O6HOh4bspzZOHff4Ou
TIMm0jPOD9yVjywcf9Rj60lookq77OL3vkQWjnxaqcVFaC0vtrZ0NH6FLGzX
pWzKAGjtefOplbn1DbJwpSpx9tehSdn/SPtRDC3cNrXb2zJoUqERl93Kv0XW
qVsV25fVhSblftvgR1No4T4Td+x1hiZqP2vHS1dore/GmTunQJOKjvo65Aq0
TnWeb/G8/TtkUq37PurfGVo44+mB4x7Q2vMyalfiQWjh1HkDWhyDJjJyts+y
/YAs/OxbUPdwaKLuk6Y+vQEtHLrKv6p9IbKWNz0GVfOAFr42tq/JUmiitJCO
BnehtX0xPLzqM2hSw316jTP9iKxTeie7mnaHJrV/YJe4CGjh6SUxQUuhSaUE
/rj8BFp4U9fSHx0+IZMK3tby+Q5o4SFGS7z3fkYmsk0f4LQfWths56Dcc9BE
debEVz8kyNr73Vq5MRGa1BDXctknoYX7WiVuX/IVmVQrk1kHsqF16r87tuE/
oEkdPdS8YOY3ZC3vX1y1aB00UUCV/55egxY+mjO9nHcRMlHWpfib86GFj3w3
uNelGJlU+O9hnt2htXnnUhg3EFrry+sr3t7wHVl4y+9nJZuhiazjDkUF/kDW
8taLWrfPQJMyXv9m8FdonbqwauvqH9BGqvnb7H1mP5FrK5cv7W1aQhspz5Iv
lxygdeqowYaRY6BJDbp7eP1GaJ36vLXfzXPQRqpqWZ+yUmidsrg61sHqF7KR
WuA3cG4HaJ3SH+Y6IwTaSMXU2DljIXRt5ecyZVomtJF6/PnuPlWCrFM9nz6P
84UmFf/7Qvnj0MIzFt+q6vobmZSZUYBrBLTwy53cegk00bmpJVv1/yILr131
1agBNNGa2gO6BEJr573aS/sl0ETXBwb/G1iGrD3vrl1NpkMTWTSfVns6jQYW
vl9kl7AEmlTYs3ph56CFO+TvfnQLmmjm7/YHX0ILVy3dHbqgPDJRjbVn53jp
IQvXT+nWbGcFZFJrPiR5HYTWqftdxiRYVUQmVTxzgt4GaO15r1NwYxu0kSor
F7z/JrRORc40XJcLTart2hHNGlRC1s7bjgnHw6GJKu6a2PgjtLD+NMe/zpWR
SV04ajZ1LbTw08i+gWegifZkOZv5VkEWPlBr/P5L0EReFdvaZ0MLV4tpusWg
KjJRdc8fK3tXQxbODY24EQZNysA4KG0jtPDIbTM9YqCJircGPCiCFjYP3daz
DJpUzQnl21XWRxYeG7i6rT000aGLY92GQmt9f7JFcDMDZFIzV/wX0hZa+O2m
+CEdoIm6dqx0dA20Ni8SLV9FQRO1yyXns9DCMRNufyiAJkp8FdLlH7Rwo5YB
3+sbIhONik3quhVaOOKco8sTaFKPHkdWHFcdWXtesp6U32OETMol/uPTBGjh
kN+lRanQWt8ZF96uYg1k4V0OZfmVoUk52CZ2aQOt7cvrOy+6QxMZGyWmptRC
Fp5S/7jPLWiisj/zbt6GFq7T6M28zbWRier/CSg6Bi2cVvppiGEdZKJjWx7t
6wMtnN6tY4VJ0NrzFt/a8hq08EGnVMPwushEO30Hz98NLRz942rRN2hSb75W
rfYDWqdurEh7r4yRSctzy2MHQgvvXXuq3ChoormLVhs2M0EWVh9d/66GJnIo
SBtczhRZuNTiz1bLeshE49YkfI8yQxZOvtUv6DY0qRhz/atB9ZGFZzdeMHUB
NKnqdtOGbocWXvh3actUaFLuzx40ugct/Ltty3lNGiATHbhyZkBfaOE3e/Te
TYMmtd/p6Jdd0MLf3ljcT4MmFXnO8uQjaOFCvdX/apojE33VNa3REVo4zLj2
qx7QRBOmPis7CC1c0GN211fQREsnrO/cxwJZ2O/99CWzoYlWl3QT24bIwpEl
viPWQhMFr1lvHQct/GncLr3mjZCJCnWVza5DC5c5PX2pb4VMtMl5/orB0MKT
Ts3zSYAm9XRp4Kkr0MLrA76sK4ImVTbiRYvmjZG15+12s4otoIm+2fdutgda
6wuTK7Rt3gSZ1ME9R190ghb+W9Dg8khooj6P++Y3boqs9bVdY1LHQJM6b18t
KA5aePKKSpvuQROt/1caVbU5svCH1uH6XaGJhkfNyUuFFj6R0rrhHWhSi/1y
Puq3QBbuW32PR29oLS80LGuwGlo4Q6rvSYPW+k6eR+WeLZG1eRnAbxZBa/ui
Z8JE01bIwmcKrL4NgiZadz7gkxe0cE3bIbZx0ESTU1q4TG2NLOxjEXlpMzQp
vfPu8SnQOjV21KlLGdCkzJq0rvAEWutLtyvUfw1N5PztzqdxNsjC7t9Hj9kP
TSrxRzeHNGjteV0RVCEdmlT+bf/+76GFZ7kmWxRDk/KXgSnUBlmnAuo7b7OD
JrVyvGfwcGjh/04or1hoUuuKR8tRaOHMcauXlECTsh+jd/8PtPDXhdNy99ki
E5XaH16xtC2ysLf7hoeXobW+3zfqZa0OyMLNB2+ovg2a6FNqaKdiaOEtY+zD
vTsia/Pu1sLxF6GFn3z74JwNrfU9m/dvX3RGFnaouKXPT2iigoc+N027IAv7
Ds3eYw9NqrZN8S4HaC3vn0mv7QmtzQurcYdvdEUWHnWZ+Rk00cWHO2b8gxae
ed1wcpduyESTEgst9boja3ljX8oaJ2ht3qz5UrwMWviwAy/U9UAm1Wqj4cIG
0DrleXhv5UDo//2+zaXTNkAL/7w7PKuHHTKp4TWGnh4KrVNzZ7d2doc2UsN0
du0CoHWq3LdXltegtb5S2erqXWjh6VNa/GnWE5nU9ZjNrVpBC3c4qHswAZrU
rsiUR6ughQ1vemVmQhPdibmeasfIwu96vjezhyb689onZ6JCFj505UHKemii
q4O7HN0NLTy1V9SjjfbIRI0mvp1+Blq4+7/AIUnQpOxSbDgDWqds6n9xLoAm
5TPkVocSaOHrx2pHOfRC1q631UVPX2jh+Mef9WZBkype3nJEOLRw9dj+S0x7
IxPtzvpy3Bxa25fDW/q2hCY65zlL3w9aeEXbar8W9EEmdeVOC+cX0DqVf+9c
3xp9kUktX3Nsvim0ljdvp5xrCE3U/X6WXhG0cEJOqEXVfshEiY+Pd/SHFn66
Z/2VMGiiNXkJEyP7Iwvfiay56jQ0qWN/3XZdGYCsU97p/jlvoEnVPXBw61to
4bP2wzoPGohMatKFX0c8oIWblNU0SoAm6lc8oPAUtPCXNRn25IhMNGTl+w/+
TsjC7X6k3VsETapez++1OjsjC9dLO9LRD1rb123GmU0bgixs7GoQsRCa6KW1
4aA6Q5GF/90v/NwQmsg6wPK/ptDCD7efX9cXmmjGjUux54cjCx99ldO6+Qhk
om7jJiTlQ2t5Oa7W6S/QRENHOu397YKs5aW6ISk9RyIT/Z3T7n0ctNaXC5PK
TR6FTGRWedIobO16s9eNcRqNTCp08biO+6B1aoNPZNQtaFKjr+9d9g1a+Nnm
emt/QxPF7E1eGD8GWfhcOcMZAk1kaZBW9htaeOPhZZnWrsikAo0MBvWA1vJy
qNnI+dCk/hsx8lMGtLD97flz7kAT3XfM+hXhhiwcVqHjzK3QpGYcqmy9A1qn
fJOarz0BTSq64znrk9A65Xht+/Jf0EbKY3yydS13ZJ06G/8+zBSa1HfHxP8a
Q+tUw8HvW/WHJqUKP77HFo4zN/o9CppUtv737+OhtbzQwTpqITTRLzebSnlj
kYXbTPm4T41DJvI0T54wzwNZOENX9dt2aFLj9+ie74UWrvPQZNIzaFIFMU4B
FcYjC19bNyDvOrTWt5u5iM4LWTi06aUVtaBJNX7QYF4baOGak35f7glNqsfL
ZeVHQwv/+THxGjaRU72Q6vkTkIWtzt/5UgZN6vSyz/uneCML71pwPDICmqgw
Icw23wdZuHmnyx97+SIT7X2ytE84tLBBs/QpKdCkDv6+mn4XWriv0ZA+jhOR
iZpEPx7T0g9ZeHf/EpeD0ESvUgweDZiELJyVnJHgBk3kM9Yos+cUZOGBP50S
FkOTOj6489qV0MKrQw5arIUmldO44edb0Dr1fuqd/E/QpJ436DdS548sfMVk
7/6G0KQWXu9e3AtamNdlVnoATfR51Y1DBwOQhf23tZz3Bppo3c7n7WdNRRa2
ftwu4Bw0qYkVvo5/CC2caBn0dew0ZKJh62NGL4MWzsk/eK/edGQih4tjt/hC
CxfdutQ4GprU37WJg19B69QC63ZbXkNreWveNpuP0DrVPPVCq5YzkEn96h6j
1wVap4rDA/71hdb2rc5k8wRoYe+HCbbfoYn+2/a7YcWZyMKHT9tF94ImMrw0
sfmgWcjCO4Zb9TOfjUyUcrflq6PQwrXlWVwRNJH3oB+ew+Yga6+3SFw7cy4y
KffLk15shBbuxcYzZ89DJtrsNro4PhBZOOZMWt3g+cikLKuaRh2AFu79vH1E
ITRRpbTmlboFIQuXttnT1weaVMmJZi2mQQvfil+zPwSalKvbFnvzYGThGl2N
21pBk+q10aRtc2htX7W6mesGTWSz50joeWhhQ++WM99AE7Wr+vCvWwiycOXx
6XZ+0KQc8nPWREILJ3S8smsjNNGIsdM+noUWNrtarlbNBcik7l2TO7WhhQd4
9hrWHppUwKRqem+hdSqmo1fPLguRSaXlTZ07HVr45vkJzkHQRCN7trnaPRRZ
+Gfi1nozoUmN05/rFg+tXW/DlpEVwpCJvn2P8y23CFl4+YWS06+hid74jVyj
wpGFn17fOms1NCnjqQ6WUdA6taVn9/fHoElN37EoJRlap6K77IqothjZSCVM
KvisD61T7S32Hm4KTWrl8ZJyNtDCljkpDX2giXaX1grPgtby9t7c44XQRMEn
Pn3vtgRZu98peiZXoEktONuq7ldo4avnP7wdvRSZ1GyJ9FoELezxuXytVGhS
Vq9C66RBC2+YWelQyDJkoif93ZuvghY+7dK+6VZoIq+2E7r0Xo6s7atAqwoD
oImq9KdRniuQhbfn3redCU1qSP/Xux5AC4/X360cVyIT+RmctIyF1ubNi8m/
i6C1E13pisPa1cjCUU/qFR2CJuWX6fTgLLSwRXsn0x/QRCczAr9brEEWblHU
85QLNFG5AQOjUqGFX9Yx+HgNmlSlxVfrl0ELjw2zvV51LTJRj0smOwKghev0
2PliDjTRBuehrS9CC49z3/gtFZrU8p9bn3yE1u73pvGGf6GJmgWOH4UtPOaF
5xfzdchE00wK9l6CFn79OnBIlfXIRO2HnV6bBK31JdOcvGvQpLwX3Tj1Elq4
wSn9RP0NyERxdx7WrwMtPPdBVmF9aFLO099sHg6tzeua0cvcoEk1Gb7nP39o
YdN+PRt+gSa1pO7kCxYbkXWqbI/9fRtobd+muO50htap052WXR8HbaS2DRv0
3he6tvLv/KGBP7SRKtmeGHsMurY6WXzx9BtoI6UbH5RvuAlZp9Svk2QETUrW
/d5QZTOyTrXLPH63MTSptgeuzGJonfodbzNsCrSRctRNn7QNWqcu/Aux2wtN
qkLlFLOj0MI/qh5onBSFTOq3bcM3j6CFP059G1AIreWNodfsVm1B1vrGg1PB
J6G1vJw0aUcGtPZ+TZr5rtyG/L+fN7iVuX07srDUvNNpLzSpzy/fG5+AFvbq
sPn2I2iiLi8a9QzfiSx8oMeMdcugtTtap/e6FruQtbz0Zlm4FzSpffoVqh2G
Fs77/OIqNtHNum0PNYlGFtaLTbe3hiYVWbFni+7Qwr/rX4yZD03K6en7h5uh
hT3vVXTfD030qdKRrs32Imt5sb/J5whoosF2BaGV9iELV13X6mhDaKJ7mfc3
tYIWds35V+skNNHGU36rv8cgC2c9eP58zgHk//2+LBcjy4PIWl7p+3poR2hS
EUmq5j9o4cb59f9uPISs5YUlZW9joIV7JUa8qXMYmVTYhwteY6GFI1aNWpcO
TWrPsP5/vkEL2/aqUE4vFpmojW/uaacjyMK1166MngVNallUSN8EaOHi8jmm
OdBEVmdLK/+JQxa+1T08umk8MlHrm39aHzuKLDx4yd1qtY4hk2q1/s3LqdDC
Xwd1tlgPrd3vU0e3/oUWLjdRVZuXgEyU+PX77hPQWl8NMV4fmIhM5Ju3ZejP
E8jCc66trVv9JDKpof7+phOgdapxk7F2udCkbj5vGIqtU7/G7jpRCG2kOk3M
PFUKrVMZwxP2VDmFrOWlVlWr9oLWqcPzpy4YC01qdZMhv0KghelrTdXpDDJR
eplZH9OzyMKbXu75mwRN1CqtRsmKJGThXM8zr8POIZMaGx3zPBpaeF/xS68C
aKLYS+NtLFKQhWdWb1ltJzTRLv9+sU+htbxlNfn0N2iifwvWfRlwAVk4sGrJ
Uw9oUkcXxDwdeRFZ65tFZ+/OgCby69+/Xiq0Nu8DC4YaXkLW+laPrGvroYUv
jDi+6yA0qdJ9j4LyoIXnOQ+0aXAZmejrkZzIdtDCN3rc6NwdmtQd+/2/BkML
dyoOTFkJTepDlRnZG6G1vOAc5/0NmshpxWzroDRkYae/PvsXQZNKGvlz1V5o
nWq2w/RfDDSp3ot+1UqE1qngK3MvlkBr9/uofjldOrKWd9b9NT8ATYoujInR
u4IsvKD7ouk6aFK18s3jq0Hr1H/G5dvOgiblunPV3XRobd/b376fBU3q6b0D
MQXQwq8Prh3zHprUwM3Z0ROvIgsPjNh1ch400WZ7gxH6Gcjavo3R6TyvI2sb
Y7TrmjRo4W7FA7Lr3EAmOtpsQlMHaOGaIwLGrIEmVXdZ32aXoIXXfXpW/z00
qQyjFL3amcjCXYOOGoyA1vKav1ueB7ROjSyc9McLmlS02zSaAa3lrVeGkYug
Sa0xGjZ/5k1knRoVk3zuBjSpSQbXPudDC5dMOdpkSBYyqRUfDqyZAC38Yaxp
64a3kImcra2b9bmNrJ3XhL03o6BJVVhWN+IVtPZ9ha9o2vgOMqnb57ra+UHr
1Jyuvc+GQJNqatlvcCi08KXJFetvgtbyQsdv14/dRRaeUXH51dvQRI02FFLD
e8jC3eXPOGtootmbYp0joIVbG7w9nwhN1MnhZ2Hb+8ja85Iwx84Fmii5VUbV
/Q+QhW/GXC6t/RCZaLQud+I2aK3vD8sY/wyaaExZ/OJ6j5CF86xHtFkATeR2
/NCohdnIwvWsVJVzOchEz0Nbv/vxGFk4zGPuoZp5yEQvtn99vgP6fz+v3frz
OWiiirMb2SU+RRauZtZqwQ1ooqbFS1Zue4Ys3HfL4F4mz5GJ7svV1qnQwlfW
nbEWaG3fLzlT/ye08PhppeecXiCTGj79S4cQaOHSfqfauecjE3V9FrhmLrRw
gtuYd+1eImt52f1gUA9obd9FpO2fC0204kjlXiXQwkmVa5VVf4VMqlmqcS0F
LTx7/S/LIGhS8y2LzvUvQBZut7O30WhoIpsDSVXVa2ThZ4U1F3tDk4orvDZ3
O7Twho1Dr56AJgqqN/G21XtkbV7HJPXIhCZqc8nX2uIDsrBNnRud2hYik+rZ
a+K/QdBa33hYZhcATSr5Xva0OdBaXq9pnhQJTWqj//D6r6CF5xyNnmj9EZko
OKd/t33QwgXZT98VQRNFuiwfLp+Rtbz2rnRCGTSpQN/DG62+IAuvqPw7cjI0
qell3yqEQAs3WL0tPQmaVFmn9kXnoXUqO9M+7TE0qRMrFv7TE2Thd/qJF6dC
Ez1KuzK281dk4VWn9l7pDU1kf9HwfloRsvDeWhm/xhcjk2rQpP5/R6GF1Y0R
TV5Ck/Ldfaf2a2idCt+zcbTxd2Qtb3d6SMuhhe/MNB+Pre2r2JHfY34hC5+8
V7GHXgky0ZRx5e9Xgdbmdevj9edDE11unvC76m9kbV62mj55IDQpr/TADD9o
bV/mDhp7DJqUR1adzfeghfOz7/s+gSbl7v/MrMMfZOGKC0autYcm8n23r4Y7
tPC8Kr2cAqBJnblob7YBWnjzbO/URaXIWt8b1qX9CWjhztmqOPkvMqnvnY7/
uACtU+1Th5i/giblZ1Dn8ido4dFxJ3valSET5Y/+2PoDtPDKLqMej/uHTDQw
ds6yHGhh88Vx99aVGwNManuvd0u3Qgtvu5peMQ6aaO6QTXp/oYX91qw+0bY8
MtGSGh3+boUWvrz+tn4MNCm7atXLxUFreXHwgM3noLV95a639hm0cOQI66N/
oIkiRr6s8lUPWfiETfal+ArIpFpsmGGSDS3s821/SRE00c62MwLPVEEWbtHk
7vQUaKKb02THFWjhxBWL06KrIpOyqtIgYWQ1ZOHr/8JrjoImCujQN+OiPrLW
dwrNkz0NkImKti64Vs8QWXjSnpgF7aBJNb/7YEEwtPD3/u0qbYUmdc/QssUZ
aOGXQ/7oc3VkUgs/zBvfH1qYzi6wSocm6lklptcjaOFFU9541jRCJnWuu3t8
T2idarv713hnaFLeEnthKLSw/ZPnI4ZBk3qaHX4xClrLy96X76+ugUw04KPz
o641kYW/mJr9K18LmSj5gkV8LLSWN5ZlJRyBJqp7r3dYZG1k4YdJxo1yoImu
la61/QQt/HXmBrcGdZBJlfSbsGEttE6Ve7Iyo3JdZFL6oa6zG0ALe9713tkT
mqhOE736OdDCE8aPrRBjjEzU0v7+/b6myMINDZ9HDIUmVX3/VNtZ0MJdBupd
fwhNasCXVWcN6iHr1Igd32ebQxupvad0h0uhdWr7gU+Lepshkzp2+WfOJGjh
ZQeKnaZBk2pfxXRoELTwj4aeOQJN6sKesvSm9ZG1fTeg0qI+0ES1zIdab4YW
HnTreWE2NKn1I478zIcWzmli06MAmtSk1PB1tRogC4/z2VnDDppoxqkjegsa
Igu3nvHlyEJoUv6ZD9ovgtap6DDHjlegjVT79M4FP6F16tSv2acMLZFJtXF+
3qw6tHAlZ31DC2jtHavevtESWuvLO0ZWadkImaixk+fBbtDCDwpeLwqCJvW+
3vA2D6GFm5romn6DJlXtTcc6BlbIWt/OnRxnB000L/vVLU9o7bxUG5OeBU30
tO58u86NkYUdMn7c6QJNav+G3dM9oYVDbjr2PQ5NdNShnoVeE2ThyqNNlvlA
E7V6PMN+JbTwue+DNu2BJjWvkdmMvdBa3txrOz8GmlQv62Phx6C1vv3y3V5D
a2RSpm2m2W6GFl5FrmtSoYmW2zYdV605srBxzx47+kJrb1j8tEMKtPa8nTJJ
FGhS2X5mLj+hdcqjVWFKrRbIpHYs6soMrVO/VtmnhUGTCqjjn7cCWrj74Yim
h6GJxtW+NPkmtLDT99Q9LVshE41au8RvP7TwkqR0g3RoohOdcqLuQAvPo0cX
F9kgE0XFsdGsNsjCLg+n5Z6HJhXSoHrIBWjhIr19vffbImt56cOU1F7tkIV3
Xr9Zqz800bDHOzYkQQun9e3q2qY9MlGby1+aDoMWPnT9mkkGNJFlj0H9ojoi
Czfqt2X/7k7IpDpQWM+X0MInLR+Z/4EmMpn6z7t7F2ThxoUfj06G1vru77i6
JdDCIxasOF+1KzJRysO/p/Shtb5mlB8xBJqUUZuOscHQwqeMF+vFQxMN2nnd
MBNae/3b8nuMuiETLRwdVLlSd2Th+/2yK52FJtIzt2vpbYcs3OrWxlMzoImS
fP9278HIWt+/0NtsC7SWlztN33wRWvj4/tmv6ihkonrHjAxioIU99lOTZGjt
eT+zflAOtDavtjf9YGqPTLTrbvlzc6G1vuvmemcBtJZXHrZrNsYBWdg11nFa
JDSpL2Yj2kVDC0+b8y3rKbS2L66PGm/RC1n4aUen3B7QpD65bfBmaG1fzf+y
bRC01lfW58WMghZ+nOkQORmaKH2lYfoWaO28XWxpuB2aqP/DZ01e9UYWDj5/
7L/P0KTmtPU7ZN8HWafatG5vPhmalMcQj0PzoYUn+4ZXKYYmWrbfpcH7fsjC
ZmYHWn6EJqq6Klgc+yMLj7Js3N0fmshr4W+fO9DavrUb185+ADKpnfF7hg6H
1qmyXq57Z0GTYucTdAha+7yGLkmPoYmGjsisET8QWcs7jXe2n+KITNSoWma7
YmjhNf+FOI4ehEyqnO/n1iHQwktLOzdoPRiZ1MS/eQFtoIXd6lknukET2c6+
kDEHWtuXme9Xz4Mm2qyXmj/KCVm4Ze0CJ3tnZFLn3eY93wmt5ZVDRkOSoYkW
hZ0+dAP6fz+vmN00G1rry69a27+BFj7W7Jyl/hBkUiU/PU0GQgt3zi1YU2so
MtHFQR7X3kML8x8Hy5BhyKSsFk9psA9ap1z3J+cnQxupMZsau2dB69SarUPt
30KTSvKYk/gVWvjt7zuvPIcjE9U0mdws1QVZy8t+frG/oUm5ZbPNP2jhtXH2
XfVGIhO9b5JbnAct/I7OTyyAJrrRZ8TuZ6OQhX+H1IkqgSY6tPbI7C1jkIUN
HVvp/YImKvxU23qMK7LwdJvQ0qXQpF4PjDseB61T436du58ATeq/vierPIQW
jvjhVmuyGzKpU2+bByyDFk7svChxOzSp0W6t9z2G1imrqf0uFEMbqe1HOz0r
g9ap6cP8epR3RyYVY8U3ukFrfbVmgOFkaFLUbt2q6dDCziO53yFo7RM/PBN5
biyysGfkh2jjccikUju0ntkCWnhAasQhIw9kUv4HQqeNhdapJc3KIg5Bkxr+
sXRjLLTw6K3ONa9Ck1qoZzvhDbTwto+hBkXQRLcGnL98agKy1hdGbX8wzhuZ
aKqTWW8XX2RhvRHtfCZCE73etqkgBlr4zTC9/nUmIhN13T7WeTq0cNuCXuPe
QJOqsLnIz9IPWdjL+kNuH2hSVbMc2jtD61RcwpRbvtCkmu5NWDYTWjj8T1fP
6ZOQSc0MTxqzGFr4UWK3JdhEK7e9Sf84GVl4vs0xo5FTkEnVCGpmfRBam3d+
P/7b4o+s5cXw9HU1A5C1vnkyzMocmlRUx7PTmkEL79vt3XM+NCmTya9fL4EW
Dt1nuvAKNNHEz8btx0xFFn7/wq6uDzSpXoFDG8yBFt64eXVehenIpBo2aRPq
CC1817FGq1XQWt8ZXWfekhnI2ryodfFd8ExkUv3vHegSBi1cbnjZr+PQRHnP
Bto+hBZu3enW4s/QpP59epJUBC3sG2q78zs0qQ33gr5VnoUs/Jfeeg+F1vqy
0c57WbORhee+67bfbA4y0ax9/d50ghY29gq2uQdNalWjBkm6ucjC8fv+nPWC
JrWxOS/ZCy180e/71lhoomK3P2a285CFG6yZdqoTNNFtk9Bdl6G1vtPXKqFN
IDKppWeup2Brfe96dNM+0EQ3s6NHJUALm76fGHcBmtSC5s5WU+Yja3knKKDO
AWgi+5K+O8oHIQtn/tw7uT400cMLa1+3ghYefLPcTldoolqh7jVLoYWDfl1z
Xx+MTDRhjIN5uxBk4bS2vcYFQhP9dbRcMmABsnDSiRr5c6CJdg6oWz0HWriJ
rcce44XIpKInVptsCa193/tO5rtCE913qrIyHVr4xOHwyhVDkYmaF/UaPCAM
WXjzy5NjFkGTKmeat+ENtPCHNgdG2SxCJnXz4tYWXtDCDbdlVbwLTZRbdO5j
3XBk4Z9n1jWfD01ktSO1fjS09rxPyog8A000vHvXg8nQwvVjr1lNWoxM6oBH
2Mab0FrevGbktyACmah9tR4HdkELu15zPlZjCTL9Xx33Gdfz+74P/MQnvcko
isgemZEQQudlpcgsmVkpklUoSZRkyyqrkB0pklFpkFGyN0nIljiNyszv9f3f
+t853Hv2eNN7XNd5HsfjkahBQacbG6GFEzfes70ATdRo/KbCa9DCM9/v+ldl
OTLR/gYlm15Aa32/98eh36GJdqT0iV+4Elnr+5uedQ2AJtXlWF69ddDC95cV
Bd6D1s57c/2qr6GFCz02D6q3CpnU2ZRvlVyghS89T/OaDk20rNlE/3Ro4Yee
/TsGrEYmOvrrzznXtcjCXUYaDhkPTeripg7P8qGFI1+ufvYVWtvXVmlh7dYh
a3ljxPkNvaGJAj8adZkchiwc+KKFgcF6ZFKFNyo3sYAW/r0vxnQotDZvHW16
5kBrfbNX7S7PNiAT+fyN1vsJLRzjFOJbfSMy0ZXioLXboIXV4x6XzkCTyhlh
U6fGJmThtkZTk9tBk6phmZltDy0c5Gb0bBA0qd+x7ff7QQtvrDbGcw80UdfV
FyZ8gf7f7yvz8sUmtbuz7/Smm5GFN6yoUSsYmlTtLQd/3oXWXm/0pjep4cik
2s9wX2MSgSw89FHJ+obQRCb3BlbsAa31tYs7O/aHJlp/5mvLMGhhN4PZJXHQ
REmWVSNrb0EWbjDjXsxAaFLfS1Y6b4UW7t9qrWk6NNGkc0nf2mxFFtaPO3uj
DJpUfMEdp5bbkIXLZ6d0mABNdH5h5O2r0MLbkq4ajdyOTPRrcXKKZySy8Lo/
baauhtbyot3Wov3Qwk/66809Bk20NXppk+fQWl+r2tK3fBQykV5zx9El0MI8
0brCP2hSUa177Fq9E1mnZpfPPbQOmlSFo0f7/4MWLrr5Y6XdLmRSPisvZc2E
1qnhHUIPHYcmdf7hqWqVdyPr1Ph9C6MsoEltKSs90R1a66vbPbt7QRPFdzpX
7TC0Nu8TvzW+D63Nq1qXl+RB69TJlUv6FkCTmqf+c9JFI2v3vcvURbbQpP7E
5pIftPDux8cNuuxBJmV8Ovz1MGjh693213WHJto3QX9AArRwaESjxfX3Imvz
6pHbjUbQwvSuR/ND0KRqDb23IgZaOGS298p++5BJhRS3bx0NLdypqlm/+vuR
iXJ298kwPogsvErfvWnmIWRSmZv7r3gLLTw+4kfrUmitb7W7sn1wDLJwXvXn
fB2ayPb5zfNF0MLTJ0X16XAYmVT9qJC1dtA61XHbkMPDoUk1y/9SeQy0TiU0
7zI/G5rUff/wU8ZHkIW9W8ebN4cmmrLx0uLx0Fpf4hsZXtCkzPK3uT6EFnav
XTyzbiwykUfPm+lR0MLZGXeDCqFJBfy6F1fzKLJw8blqh55CEy2ssX37ruPI
whlDNvROgSYVOsbu7Fto4ZELdh4KSUAmatju/pxL0MJll7wGhZ5AJtqWVPeV
QAsvcY4LHp+ITPSoobd1o1PIwqe4RtLI08javNn25ssyaOE7VmHWWdCkzvXa
5ncDWqfcejyccxua1A6jPhGdziALvx65UdkmIRONbmX8uT+08PzYG7nGychE
XQ6evOwFLfyp58DJe6GJWpzMfNg7BVm4Y9NwgxhoUhu7//hhfBZZ+OLZI7Wt
obW8ddJtwwto4eNfjcy6piKTatX+zRLTNGThqb+CG4yF1vJmQNdCN2idGtPh
bYEXNKmtmbt6zIYW7rLb1KIMmtSYAbstK6YjC891TyleDE3UOnBF4p4MZO2+
vCyrfAKaVHPPvun3oIX/ZZuk5Z5DJvI6HPRoy3lkYfP3PT2DM5GJstekGFte
RNber7YRy6ZBa3n18MugedBa3skdmdblErLWN2t0mLPqMrJwpe8t1A1oUmsf
Df3eKQtZePXPI+8Ns5GJNj8MPT40B1mbtzO6bs6GJnLemvqg1lVk4b63Lk+s
fg2ZKMF277Cs68jCdfX35zW/gUzqWu8D5zyhhbtHNzU6Ck2qonuXgFvQwufj
6s68fBOZaMv5DuVn3UYWLpkxumkQNKkls/fPWgYtPPv2p/2foYlcJ1W+Xfce
sjbvw9Z7uEKTutLjwPS50MJbrky3Wg5NpP+otpnefWRhmzsBhR0eIJPabTZk
9mBo4bMPM5JCoEkdnOf88R60cG5QrumJh8ik3CaaHLgDrVNdTo5YWgBtqH7Z
xm15D61Th3zrdK/+CFnLqxZfbQdCC19eWq2qIzRRYcXE67ughcM2tL2YAk2q
kn9i8Dlo7bwsHtjzHTRR2r9vHkW5yMLnagZ0+QNNqmm0R6OpT5CF7+dEX1gI
TTSntO3FM9DCp03n7l6fh0zK9q6Fy0ZonfIbemhpBLShaj7kxIiD0DoVH1u7
6AU0qbRL9o6voYVnnX3eyuIpMtHSV/U+t4MWNuv7fpUzNNGSLO+xodDavtRv
EPgSmtTw16Mnf4PWqUbVB6nq+cikWi/41b0DtPDomuUGjIcm1WX+jLsToYUd
bdetDoUm9St8sPN+aOGUq+E946GJsgzLL82EFv55sle3b9BEB/VqNnr+DFnb
F9ctCio8RybybrPl/jVo4avnm55/AU0qwaXhKoEWnvYgpHTIC2Si8gvur0go
QBZm3b9qJ6BJlSy637b1S2ThlatzPRmaKKV3xs/wV8jCEeXUzkJoosv+fXt8
ghYel/Q4w+Y1MqnpW13WukBr+yJo9ABfaFKrrxl02wstPMV6q1PmG2SiINcn
ek+hhTs3qPmuCJrUqRa53+zfIgu77rs5YBQ0qQ0Jp7JCoIWfz7PcHAtN6rju
45ij0MLb79+/eBaalO/jNgMeQwv3DFC5T98hk4pt6uir/x5Z+FHJ6ReNoYl6
bN8be+8DspaXdu4Yql+ITCr1wOzwytDa45d6Xe0KrfWNROvdj6B16mf+ppbt
PiKTcr24IWYgtE41fd+j+ihoUn6Wyi0aWrj6x3btgoqQiVzWeL/f8AlZuL7P
pDr1PiMT1XhZ4VvwV2Rhz6pxB1ZCE31+f3rsy2Jk4TbRO6d9hSZa/q1HwV9o
4aLNI9Z3LEHW5n3H9bUnQwtPHDtE/xA00bteKVVPQWvzaktQpzRoouarqhi9
gha+cnfx5M6lyKTONl2QZQ+t9d0hfSwcoEmNyTz5eh+08O13g35dhCaaUF8/
PAdaeNv2L62uQ5PKdp1iOugHsnBIsk92PDSpPncaWD2H1qnM3Q3OFEGTmmm1
zfgPtPCfmzsuW/9EJtKb3unVRGjhvIerXnpCk6q1tlL+XGjhbpdu/9gNTTSp
k5Xlg1/I2vdb3uZm89/IRDUbW21oAS0sg48N7AJNyiRHL9UWWvjVxvVnHaGJ
ugy6d2Q/tHCcx4zYqD/IpC41t75RBK1TVYYnVrX6i2yoXtkFZ3SE1qlmvkO/
zYYm9Wjbjs6x0MJ/j413+68MmaifX6VJgf+QtX0f0cSrebkxwESBri6VXMsj
Cy/J2RS5HprUgOP9n1WugKzN27UZTxpAEz1ZbrKjDbSwk5tRxyPQpG65f47I
ghYud8rByf8/ZKLrwy7OWqGHLJyeWH/Odmjt8xLn9JfQwuXPLb1VAk00/JbD
/gJ9ZOEbg0zrfIAmOpVpv8ZMhyyc6bLAaAk0Kbf8Qxa7obW+kJU6LRWaaETO
yEpjqyALH519e8RxaKJ1Tz1OvIYWLu6s8/oFTWrzqkbvq1ZFFk6tGdagPTRR
a7ukowerIwufr3hy02VoUum9XkWUQQs7uG4sVobIRKPGtPWaDi3cTzWLWwlN
qv0CPfdUaG3emuTGvDdCJko7mF2woyaycNYOkwF7obW+UPL87jFo4QU2bnrB
xsikGha5XloFLRyf1D7JyASZqMXvrHOnoIV/WR1Oa18LmSjK3KpGZ2jh1c+s
yz+H/t/vy9592swUWbh0m9O3VtBECcMLMjrUQxZ2X31s1TBookveoee/NkDW
+naVhzNMGyITba+6wO5EE2RhwxXN73+HJhXTe+jL/5oiC1vHnftcH1p7vTMu
7xgIrX2/3HcdAqBJHWpvlxcGrVPJV4LSIqFJ7T165H0StHCt/SG/bkATfT8f
cv1nM2ThNY+SSuo0RybVo+Dm4V7QWl+c/fFCADSpOqmTHyyBFq44ZbHLUmii
sEvVk99BC1f7ouc6wRyZlI+5hUE8tE6dWROz8BI0qTmJwZ6eLZCFJwSbBSZD
E/25PDX/REtk4csTS8oXQ5PqfeqSuUErZOEpjrGLPaGJWi5sfSEFWnjtLnrd
sTUyqUkJWaVzoYXHTx/hGQZN6s2GoauyoYW3F6b51m+DTBR0tsGba9DCK47f
6P8VmtTQRTOMDdoi69SMOnb7JkBr77f36lp3oIW/Xts32coCmdSS1L6bXKB1
yjOvQdYmaFJDpncL3gWtUzp/p8dnoElVHPzrWfV2yMJ+m802DITWzuvdWZO7
tkfW8uKq261doEkl5G57lAqtU3Z1XBIyoUlVOf6jzgVondpgsGzjJWhSyw/u
2vmfJbLwsrn+PjuhSTkFWW9PgdYe/zI28wE0qW1r09vnQ2t949z0xN/QRIcD
Txq+74gsbO724ax+J2Qt7/eIrtsDWqdWTBxttgea1NgloePOQAtf/1PtaKw1
MtGen9+NVnZBFt7d7Hq/zK7IpKabtl1RDC3cIOOwnkU3ZFJ3bHq1bA8tbJyb
c2YANFGjavP6eUMLV3L/18ofmuhepFHwGhtk4ZAnzQKGd0cmGrfdxDIdWnjb
go+rHHogE1meHnV/ILSWd95/HvwEWstr1vY82BZZ2/d7Qz6NhyY6Z/a43kdG
Fp77RG/kA4VM1CWpwoIv0P/7/8oR02v2QiYqKPGZ3AJaeGq6aUx/aFIPutdy
3gUtXHXghyumvZFJWW6I3DEFWrinAQV4Q2t5x/ScQxK0Nm/DU/f+giayXzK0
U58+yMKzIx/Xi+6LrJ3XoQdezLVDFh5nF/FzQH9kokrN2OCQA7Lwx/0e525C
a31p9bH2rQcga33F2q/NE2itL0eNqlgCLTwxt1vS8oHIRPOnGxZnDkIWPtv5
+4+f0KTG7PLu1GIwsvCt2a/chkATHUrMcHkFLfzK7FHz9UOQtbxyMvJ8IrRw
7q5uUf8NRSba6LBrcydo4asXku6NgibluK78W39oYbNdHsdfQpP6G3+tg9Mw
ZJ36YbbhiA+0lvfXpUzzhRYubvlp6FJoUsYHGkVEQQsPXtow5QS0lrf9a7ce
PRxZOD+kz7MZTshEw76NdW3qjKzN2xNtv/aCJirlfaHjXJCFLfv7dX8CTfRk
/dTIcSORhbNC5N1SaG1eVlpXOxxa+F6bziPPQRMF3GpiWGEUsvCRThama6FJ
Odhkpm+EFg4fdGmbxWhkUh4z49OxhRMmVrQMhdaer5Oe+QVo4ZW+kwJaj0Em
VdTKauVEaOGU/LeFa6CJ0h6HWrYchyyccelp/T3Q2r6MTepq5IosnDNtrpnJ
eGSiUV9P2kRCa31jy5mmWyYgE93RHzD+KLTwpe1ew05Dk0qxHF9cfSKycLcN
c58YT0LW5oVVyeLa0Np9aX3SMByaqPJVjxk3oIWrj48oKYYmGt0t1dV7MrLw
H/vUN8ugSQUObK9/BVp4Tf395x5BE0W2H+LwEVp4V68JJiZuyKRen/ZLagyt
5dVx9WZbQJM61+i/uK7Qwo5Nhr2YAK39hfJVo1ymIGt5/eeWPhHQpEaUrp94
GFp4eY1ee3OgSa14+nOdgTuyltfGDjS1hiZ6UzHqXXcPZG3f2NfdtxeaVHG+
38HqU5G1vGvDr9pCk5rZ+kmLwdA6daKse7sR0IYqvsKQcBdonVr2YUd/P2hS
CTH/5hyFFjYwsOs2fhoy0fAZzn+XQAs71Y0qdwCa1NYre7ISoIUjz1iMMPNE
JrLZF5G9C1o48e+mcinQRBaD4wfegxbOLHXLzocm5Xo6c/FnaK2vLF01suN0
ZKKqLR2HREELu3bKXFHDC5monvH7TEdo4cKtDe09oUl9XtPBYxa0cNBw7z/X
oYlC+79x/QstXNBn7fVjM5CJnKxbRJ+ciSzcSf+B209oojnrGiy0noUsLPNi
+g6CJvrgmm3uMQdZ+N+P3IAr0KSqf24QfRtaOPSHX498aFJtoqYd/QQtPLM3
fejkjUzE3tXiy6C1vNdkilkDH2RSVVP/e9caWvjMnnP1LkOTWj8hxaoMWqfy
Xe617jQX2VD5ms+p2wNap+oGdbw7GJrUhHfj5vhDCz/L7jwwApoo4ni7xRnQ
wvop/HXEPGRSRw9fzRoHLbyp6OGkudDa51236pSV0MJznv7VM5iPTNSwJOP0
dz9k7b6eqv235QJkUtGTX6zvCi38qWRFn6HQpB4f3+TqAS3c3HnvxK3QpEa5
36qTA63Nu6G1bN9AE21osnFqykJk4d9x8d3+QpN68bPFq3IByMJdKmzbux+a
aPEeB8v+gcjCpXW7jfKAJjVrdZ/EWGjh3NvXmkQtRiayO9Wo5PNSZK2vvs24
fCYEmdSPwJrRH6C1vpx3Zm3pMmSiFE+TC71DkYV7HpnvcgWa1Im9137ehRZu
vKv9+MXLkUkta7bdPRJaePxdD4tH0FpfcVx4wHgFsnDes4CpHVYiE3XbW7d6
nVXIwlUuD34xC5qorXlgxFto4WYV6puarUYmNXyz/e8f0MJLkqeENlyDTOpU
ROurUdDCbZc2uGO8FplUi+suJq2htfPaYv6jjtCkIj6Ezu4KrVOWv6uRGzQp
95WhtR9AC28ommXUcx0yqS33dlYdAK3lxXK1XvZdj6zNuyv/nQyE1uZFXoZ3
EjRRz5IVBdjC1bI2p1+DJiprP9ah5yZk7b6Nnj44DZpU1j+Tql+gtb5Tmug8
fTMyUUalfpe3QwvXu7zG6jY00djzn1X5cGThmDJ7u4bQRBsTPWyDoIVnFU+b
7bsFmVTlbkN+hkBr8/piZMfv0ES729c/2mkrsnCfD/EO06G1vu3Y8VUAtHDc
scFHt0ITGQde97kHLRw178n939BaXy3Z3zhzG7LwlDquYS+hSR0z9Mkpg9by
fsCQRg22IxO96nvVbTy08Ma+5veSoIleGn1cvHQnsvDnoD97lkGT8h2l92kr
tE7tL44ZnwVNqka6/8Hv0Np93+Lbu/cuZG1exW2+cBpauGLp9FeXoYmeX5Yp
36CFkyzT28zdjUw0pFthfYEW9jzZ8tzJaGSiavpj3XOhhc2iXx8tgCZ6WmNE
RsU9yMKPzo4pOAJN9GlS0vph+5CFd09amr0JmijaY/FK94PIwg8nTz556BAy
qXmrau6/CC28+tTj0svQpNqucIzPhdapUIergfnQhmqRS9emejHIOjVu4gyz
ytCkXGPlQ1Vo4f6d7b8PhSb6aXTh9ARo4UaVVkdFQZMad/v3uCPQOtXIqdPe
bGhSXy9bZFQ+jCy8rOuPE3WhST3ymfl2NLRO7e59+Yk/NKnG7f4tvQCt9RWH
/978gibV7cm62e2OIAurPktf/YYm8k4sXTosFlnra+XHjZ0ETWrYn3zztdDC
z+sHP30KTcru67a/vY4i61T/3FppU6BJzS83+IAHtHD7gpC2DeOQSf2JLB/d
DVq4roFJLwWt9aXRx9kwHlnLS9bjjztAE7mEGJvcPoYsfPGR3GlwHJnUFwo1
WwAtfDf95t3F0EQmr7Y7r4QWXll9el4cNKkr/X79/AWtU71qd53fLgHZUB3c
d3vsaGidWnNiYdxGaC1v9JwwNgpa+EL3+SU3oEntbeD49ha0sH/FuO/tTiCT
WlOvg8MWaOH75TdM3wdNKrXz3FM3oYUNKvGop9BEO+wb9DVKRBY2NfnZag40
Ub8Pm8+YnUQWjvBKq3ITmlTH8PR936CFfxQW2JufQiZK6jnz2RBo4UUPd9e5
DE3KZIjP5rfQwu7J86wtTiMTfR1aP23FGWThco/PWh2BJtXO65ZHIrTwmbAd
b5omIRNNWlGtdQ9obd4P+NqrNzRRhb7/ouyghU/5/E11h9Y+r+6j++2FFp42
YXjMJ2iiZeFP5nEysvD4kSHm26CJ2j1dtTETWsv7Ly1Ol0tBJtUnau35XtDC
23V16oVBE1WpV33iklRk4fiGp0esgdb6fqX5045CC6c4nD97NQ2ZaGS9H1s7
pyNrebfCf336QRNNDOk//WMGsvBM/w/PMs4hkzrppJ/3HlqnSocdeFIKTeq/
E1++1D2PLLywzjDHttCkZgxI2DgBWsvLj56lz4Em+nD1aHYYtNaXpvSXhZnI
pOhes4VLobV9f7qkyXJoUpN6pQx+Bi2cbWv5cvgFZFKl/W2yRkILh7lftN4G
TbQ4v6V+rYvIWt8ZM3jmLWii5WGm9RpeRhb+dts4Zwy0Nu8KbtQNgBYuXbZq
wnFoUgtPxG/PhdbywtiPCWXQ/++8HqMsZJ1Kflq6swq0oUr0zFxiDq1TJ84U
HB8OTWpUlT7/sHVqZ04dCoEm5d9t8dUwaGHr1Nkj30ATndVrM2/TFWTh/O+h
+jegSY3XLTYyykEW7vhnxw1LaFJW/rof1tDCL15fqaF/FZlUqMnEZpWhhSeP
uzO3BzTRqfh9HRZDC0/p1Dp3CTSp2+Pa9IqEFi5fcjzoAjQpI/9ydi2vIQuH
5NapeAGa1L+8C4W3oIVvlvZ41fA6MtHWZL/KvjeQhYfNfDfrFDRR+6ORE9Og
hQe6h/+4A00q/GHfy3+g//fzQp/Slt1EJqUX0CjvPLTw2dJ/VlehSfWwPbf0
BbTwFb2iLtVuIRPVP/TvxCRo4e/GtDUHmih+7rUqO+4iC4dnjFx/GVrbV9a9
th27j6zl9cQ2xjYPkEnVN4pcMxNa+KNN3WONHyIThXi5jh0KLWzh83lUDDSR
1YGckXmPkIXtx0/wK4Qm6n7236eMx8ha3nezXReVi0yq7oMZ7peghZ89qTCq
CFq7L20LChvlIQu7/DfhaDtookc7jXZfgxa+6rX0XfmnyESNfNz9W+YjC7vd
udjaAlqb92mHTs17jiwcGONRYFKATKrGuNc7O0ALryoeM9QDmtSNvZU3zIMW
dopZ92InNKlBO2/xHmid8lxt1jMBmpT3FN/nAq317Ym5xV1fIhOZPogpuvEK
WfjNfNs7L6C1+9bwcGARtDAbdfti9hqZ6MXv3IYPoIUvPU4PqfAWmeg2Sa/v
75C1vD05elKr98hEtl07bjMsRBb29fI2aQpNapnv/a020MIL1vWaswya6O+H
auOefEQW/u3eNWJsETJRRtaSznOhtffL7vWPrdBEhxvnnr0GLfwup45lATSp
ihN+HG75CVl4fXyk3W5oov8ehJ0uhRY+uI092nxGJtq+q3v7GoIsXJQy5UVL
aKI1+bU9VkNreUP/+fmZX5C1fe388GUItHCtvodv1/mGTKp4Wq3qw6CFhxT/
np4BTWrOAPsvOdA6te75QNO30FpeWeBU9BVaeO/rctPiviMTnRsQ2XV/MbKw
e9ngsOPQRAaWB2p9gdbmrfOE51+hSY3TkxYNSpCFC+0ypw2DJtXL7eiFWdBa
Xjc9MPEpNJF3UM7T1J/IwgF2E33NfyGT+luv8YmD0Fpe3zeodR40qccHrz14
Cy18cXZR2YDfyERdTEOetPmLLFxNF3vWEZpUW5/YWaOghWcGmvefAU1qS5Ln
r5XQwgdWn/oxowyZVNS0JvVWQutU+QmybC+0oXLw4NdXoHWqyhg6dw+a1Mq/
H21W/UMW7pQxf9pWaFIxqwteHYQWnpof8bMejQUmlTDLb81CaJ06f6ppjaXQ
pJ5Ud8qOghaefc3LZGQ5ZKJ9p6dfKIYWjlizssvE8sikQgbqOi+AFrZ9bd0z
GJqoRYsYu7Z6yMLLXhjUWQJN5PwkaWYKtJY3qyzy/Q5NNF9X4+mQisha3yge
u3U0NKlNoX12T4AWHllwfNlsaFJjfrrExkALj60f/DIdmij9+7cZ76G117v8
s32ePjIp/we3G/+AFo5WLc8Z6JCJUmbvLncGWniPUd9elSshEz1YsvduDWjh
+dciDihoorG6ijXDoIUf+Vd8GAlN9H7p0cPmlZGFK6XrfbeAJiqXVc1R3wBZ
21eZWw47QxN5FHxJcIcW3r4s3zoKmij1UubkU9DCzZZ8+lwGrZ2XxPLBdlWR
hU0S2zmNgiayiX1bvX41ZOFXDrUWeUMTLWxgc+IvtPCm0ilTuDoyUbsI41wz
Q2Thpur2NAVNdGD5vJNe0MLzgkZUeA9Nat62dkuwhT+0NLd2N0Imyk8/duok
tNZX/h6KfgdNarLBrJhv0Dr1ucqWkT+hDVX5DcfGtqyBrFOVz9radoEm9bND
p6w90MJHRrWtfh2aqM33yUcbGyNrfbdhYRU3aKK7K16kpUILe1vZjRBoUkUj
PoR+hRbeXcmzSoYJMqlV1u/y8qGFT3h/8+hQC5lofYchRp2gtfMSE937JDSp
uB6x/qnQWl7atXNILjSp47f2cVhtZOGo+u/cjE2Rtb63slGnIGjh3l0qrn8I
TeSkP/JiSl1kYcPfSv+AGTKpZyPWPzwJre2LPWFbfkOT0g/fHl6pHrJwPe+D
iztAk8quEbvWB1rY7GEHgyhoolbNiibUr48sPL7c/I6ToEk5LNp6exO01tcm
ZA0ogiYVdKf11hoNkIUdIu7sbQpNauHXeo1bQuvU2oFrWztAGyrHCV2XVmiI
rFO9h0V0aQBNajPNuNQaWqea1fOs0gNay9u3VrWZBC0cWDmxcCo00eZg/Qrx
0MIuPn22X4cm9bl8fP+70MK374UWVGyETPQ3uW/+XGjhzSe2Xo2DJnVr1bPk
69DCfv85BhZBk/J5E3XgE7TwpWMNx3ZsjEzKffiAQTbQWl6NK7fJDpqUTdTb
/aehtb6st+tuJjSp9R2WHs2BFv4+PPgVtpaXH5q9uAotXHtP9RXvoYk2jvAa
06gJsnCPsAZb10Fr+/ZRo5EF0MIpV7pWr9wUmcg1bFnnXs2Q//fz8kfMrkAT
/dFN+EzNkYU3DrG6YgFN6sXwJLMb0MK1Yuq0iDJHJrp1acit6i2QhY/7PZps
Bk2qypV2w/tACz+Z7dO1HzSpi64besyEFp7oMmnFO2iiZ8V2PmdbIguHH338
ZWgrZG1fOFUtOAYtPKLKl6rPoImqTLp5PbM1snD32tu88qC1vN5x0WzTNsjC
cq/xsYXQRJfvFx0+DC08Q/9Y0lVo7b45OvfNg9apW4E2D5u2RSY1bMws+5/Q
OlU0Y4K5kQUyqZ3/8htPhdb62t/Hn7dCa325NCItuh2ycF6/velF0KQk5PQu
/fbIwuTePrw9NKneA7LO9YEW9vh97o4LtPbn59gWxR2Qhe/udFrxC1rrqzUf
maVbIQs//+B+7Ao00brRVTsYdUQWjtMf/yoUmuh2Q69RkzojC/tMMT/hCa3t
mwcL4nyghf8+6xKQA03qfmnOtlbWyMJv4mltf2htX11v5eMKLczOiY/XdUHW
8ppHLZvd0MJfq5vYnoMm9Sp2xt730MJNXsSP1nVFJjXq0ekwU2jh5oMv2vWF
JvpyL9X+CLSwMh2j0qC1eeO3P6OCDbJ2X5yiw49Bk7p7b7rDOWhtXsbpHXgK
TXRvp1Fote7IwscamA53g9b6Il1fWKkH8v9+37xpjVnQRN83TrNIgdb6ikn7
jt49kYmcTbP0bkALX3kYsus5NFHQhqiWF22RhevPjrfPgSaVap5h9hhaeGQ3
u7IejKztq0++ZSsUsvDY9P3Jf6CJnrttCV7UC1k47b2j2TFoorJHnxev740s
/HFtB795fZCJeg20txvaH1n4VuqnFYegSRVVmutTCC089160/xp7ZFJ7Av+z
OQstfO3deo51QCbyDExsOWoAsvZ5c4eqEdBE31b6jKwwEFnYdPjHkBrQpAI7
Rz60hNap/bvuOQ6AJjV51/S5YdA6tXqmwZhqjsikYm74PzKE1qm+1j2vNoIm
db5sZHBbaK1vXn37pwO01tccF5/oDa1TrdpPGTsWmpRlssf0cdDCJlGdNiRD
EyWYGro0GoQsvPLY8NMdoLW8X/uj79DByML39wzuMgaa1Ljy71bEQutUWWGd
B25DkEn1e+x4JxRa+OTJ2ifXQJNyKt21LwxauMR/0oAkaFKTfnWyPwctvETv
dN9P0EQ3Es9FzxyKLOzwuEaXddBEzQ+mB8VDC6+vrRd5cBgyqdjk8I/x0MJ1
Xj1pdhqaaMPhv49fQgv7BV80+wFN1HFe3Jdrw5GFWy5fPSbFCZlU/++PIy5C
Cz84X/VIN2dkUl3iNicshRY+1Gjc0lJookK3l16TRyALzxuU5P4AmtRol9Xb
Nroga32zWfcnr6GJurtdiXk0BlnYdva6KVXHImv7xjr9mhW08Ivi6pfHQxOZ
jLkz4h20cHxrr/Tt45C1vDFyqb2TK7JwzZqHZu2CJupcZdxwz/HIwhnpHqti
oUkd/22+IhVauNvirsfVBGQig2aLkx5DC2/0GlLxIzTRX5+Z5lETkYV/JtVK
Np2ETPR7gcV8C2jhg+WqlXSGJnpn7lO7lhuysH2hVYNZ0EQFf/O8TkELv65n
dXLQFGRSB4Yc9BsOrfXtg0uSZ0CTGnmj6G0AtPC6pODkE9BEw2MrTX/lgSw8
JqvgwA9ooki7NhUrTkUW/lQYPrgnNFHv6379zkALXwozDOkzDZlU96ExebOg
hfffKVo/D5qUyd8xJ/dB69TSB88eJ0CT0qXP2H0bWnhX51cWr6C1f3Fs9X+d
PJGFLepYz54OTbR8wP60K9Da5/3ta/aW6chEDavWupkOLZy1akuTNl7IpGiP
88yO0Dp12fD74N7QpEp+73AKhhZ+OppGJ0EThS1cubPdTGTh4/1+FttBk+pq
2zNrG7RO1TvQ/MtOaC0vvDK7mA6tU6czd0b/gjZUg0qM59achaxTt9ruaDoB
mtSOCV0O+ELr1Il/Oa2OQZNa6tHZ8h+08NY/pZu9ZyMTfSafWoughQ/MiO27
FlrLK89o9BNo4f/2BVRtPAeZyGVt80wfaOHCERWmbYEmdWhU8va90MITfW0a
voImsmq4cEELb2Tt8W4H9q6AJmqjV7XiHh9kYQ+Xf1bJ0Fpfitl49TK0cEG5
97VazUUmMkpdVvEQtHD74MHVsqCJhrhmv581H1m474+LFZOgiWpm2G+28UUW
7tDsnuU0aFLPI+fExUELT1n2+N15P2SiH+9mzL6/AFn41+Wjznv9kYlmXvE/
dRJaeOrihpNtFiKTen3DqsdoaOHyZrbfsYlqrHz4sF8AsvBZ1+GT70JrfWlP
SMU8aOFqq9t/rLYImdSRiw8+zIDWqZx9DQ2CoLW+2D3z9Wpo4brG7+0bBCIT
vRxweKPxYmThvVGh2yKhif47HlQcGYQsXG9O/8RkaG3fbvYL+wwtnDp855G+
wchE++2bqEJo4UGPc1t9hCbl9u/T2m/Q2r5b8SK35VJkUvOub20+Glqnnrnt
T14CTUqv2raa4dDCH1uZW5QLQSa6M79clTHLkLW+wdbVTkGTalvvwrHr0Nq+
qGvW+D40Ue6TmZfSQ5GF1/g7bWqzAplUrbn3zFygtX2jf/S3OzQp3yLDN4ug
tb4xLDI4DZpUhK2rLhNauGHOl/B/0KSmFsbsN1+JrFO/fv3YuhCa1MDXX1Zs
hxYuWnvXPR6aVOTs5T+yoIWXNDI8Un8VMpH71Lrj3kFr982/zvfpq5FJ/VlQ
/DoWWqfWF53yPAat5dWXaWnJ0MIDgu0evoUmetR20YOENcha3n8/p82Qtcj/
uy9z31Zchyx893kUDYUmZTiueN8baOEvHjZ1f0ITba9Zuqt/GLL2fPcu801a
j0zKb1lJ6EdoYYct3aoabkAmytzrt6H6RmRhnvJ1ujE0qXPB/4XVhdbOa05Q
0G5oUme8HgQmQgsvd0y9+AuayLvNsXjajKzNq0P7uhhDk3Je23RZbWht31Ws
cKUeNCmn1NlmDaF16uLiyJrToElljHcu/AwtXDzk/uQyaFIznesEmoQjCy8K
G1+uHTRRhYNPoxOghfM9SzIfQGt5f4XZ+kYRyMJ1rFuV3wtNZF2aZuOwBVnr
q1uKL+RDE30bkbv49VZk4WkeQevLb0MmWn/u8dRh0Nq+//coJgSaVHO9Su3D
oYW7jhzhHgVNFHjj9vXD0MI/Bh+ecx+aqG5pgccfaC2vn1zUZPF2ZKLYUzXs
I6CFS6fcWPEBmtQgq3uLf0Jr+7rNpLjWO5CJBqw4ec8mElnrK/n1duZCE316
33hB7yhk4Xj/8wW+0ES1f715Ewwt/Nwk5nMJNFHvNRlbZReyNm+Mn6br7UYm
GjG6c7t60MKrrft+bQBN9OyGzqbVXmThM6vHpHeCJjV90cQUBS1sPbPuYC9o
ooJe7dPUPmTh+Tudxl+FJirr9WI67UcWtl21pHEdaFJrRybkNYMWrvXHOqIF
NKlRiTZffKGFly2LmrQPmsjyw9Uel6GFr+tvnJ4NreWFra8r50Dr1IL4etZv
oQ1Vq3dn9lY5gKxTV9SKr62gSf3u2CO7LbTwijdLpr2FJtVlWfdrf6C1vtfn
1ZipB5GJKvaL3rgWWtj7uVHvW9Cknsx2PTTyELJweHWbF2ugtb44JH7KTmjh
SgO3GLeLQSa6EGhyywla+MHbvt0OQGt9U2/qjWqHkYXHVGv88hM0kf9tk4B2
scjavm8ZXcEdmmip9UTH9keRha+c/5P8BproS+N6Q1vEIQu/sR0+2g5a2zf5
+eWDoIWH+V6PXw1N6lT6xwth0MLZc6KCreORSSXXHbVvPLTwVEvv0lXQRBtS
jMJyoYXbBzn3b3cMmdTWn7E7+kALf1jd+E4ItDbvhx450uM4svDBbv8eOkCT
aheQeNcTWjggdvTg3dCkzh/vF3ISWsuLn7Oq5UOTqpv0b3sZtHZf699cY5qA
TMpn1t+uPaGF0/Qf2bpAE5UkZ1RKgBbuVPv7jfInkImqeqXFzYQWvj/eY1YK
NKkWFkPrFUHr1LDuzj1LoUnprp69bpeILLxq4qDrAdDavl0d07bJKWThm+zy
1BqaVJW5k2a4QOvU3uh+/iHQpAra29qugxY+VH/GmjfQpNxViZ3RaWThJjW/
tegKTcrf7pjpMGhhA9tXMX7QROHVK7bmJGRh55ct5jtDk/q29mTYRmit7zh1
fBkBTar9BrevV6G1+3LA7MvIZGQihxP+zeZDC/fdknJ3PzSpvF5nBiVDC1v+
OfT9JzQp37xvuZyCLNzUwK+2MzSRSWj7KzOhtX1lYzxsyFlkoiW2d9atTkMW
bjXQMz8PmtTZwmH2Q9KRhavdMBvlDK3Nu+PjEjygdepJw6qV/aAN1U/PSa0W
QRurav+VOq2GNlRfttj9twtap9JmbC16D01q/69OLfUzkHXK37GDSyVoUgGq
ynUjaOEM65RXzaG1vNPBfqAFtHDt3mGDx0MTfTe/cPEKtPCcRaOWv4cmir+o
KzM9h6zte2OrDvWhtb43uU8dR2jhLp5Jhs7QRI/qZDcdmIksfLWa88ad0KRS
mn+IPQwt/P5hTk4hNNGgGWvnRl5AFm4cfS/nIjQp57uZxTnQwlmb3O7WuIhM
asvKJX3nQgtvuvOt4gZoogUblo3ddwlZePnhuCp1LiOT6l/3Y0k3aOE1bYKv
zoEmavs4s04ytLC799w7H6BJFVrO7V0+C1nY7vLD/g2giQ53jt18AFp4eFBY
1xJoUrte+0VXykbW+l5fr7kKmuhY44FO/tDCqqCtiocmdfBujn4htE4FGfRP
KIE2VOZfCg36XkHWqc9e/RaNhyZ1pssNx/nQwoEbqn1/BE10rvNk+1Jo4V7t
jl6okoNMyrDekZya0MJTBny5ytBE/OdD5kNo4eqXChrVu4pMalZSVjdbaGFz
0/zbntCkBs848jYUWjhztkdRIjRRxykrKo25hixcOGfcWQ9oouwVBvuH3UQW
ji6aV20dNNHY6NOx76GFGzQrufUXmtRM8zJldQtZp8rme4xzgtber6uPrSZA
61Tr5JZqFbShqjHXZfrw28g65d0ucOINaFLmZS9a5kMLz0r7r1MhNNGkq4/T
6A6ycG+7uArJ0ESd29600LuPLPz1lVllU2iiNTXDy85AC4fcN1teDK3d1za+
P/Y9QBbutjB343lootKvz2eVPETW8va8GWm/oUmd9Ak+5PkIWaeeOtfcPQva
UE08vX1EOrROzb3azpEeI5My67biO7ZOdajbXxS0ocoIaftkLrSxWhJnnbgF
2lB9N+uVfARap/LiPllcgiblcL/3zn/Qwn87JdhH5iKTuv/giVMxtNZ3W+6f
1fgJMqmH2+46WkALG/b5sb8PNKnVhg1yhkAL+7m1rTsKmujynoO/Rz9FFj5T
ktZpWT4yKV1B8+AYaJ364b/ctvkzZENVOOFdQU9ondLZXKpxFJpU7/CRq95C
C3d/73O9wnNkomvm+w52hhZ2c/nQ2eAFsrZvjXfom0Hr1J65+g/MoUlVq7jk
lA208P0DGS27QxMVX3q5yA1a+Iv/3t8B0EQeX58tafcKWfjXuJDrAdCkvGOD
jh+HFp7QLMYoD5oo5FpCrVlvkIWP+rbveBqaaM/5hGWp0MIv/He0MXuLTNTi
ZtnPQ9DCd9Zlf7Z9h6zNuwq7SvdBCzvMetnyErTWN96UXLoCLZy0yTXjFrS2
r4bMK7//A7JwNrXY8g2alF7N2y1rFiILD6potd7gIzJRQoRr9wnQWl+q4pjf
pAhZ+7wjgkYe/oQsnOgb+uMMNKn8Th+aPoMWXp9s8fwNNKn6hae+N/6MrPXN
oTXssqGJhuvJ33hBFi57PzguE5rowbZD3sO/IAvnDro75xg00ZDUE9e+QAsX
DZ5VUPkrMqnj9pOqNoQW1sse3cQPmqhrlY7hodDCFbp7NT8CTSp11Llb56CF
P/j9MfwMTcrI7FSl2t+QhbfUdpvXF5ro59rLv82/IwtXblPNojM0UUDReu8R
pcjClT6uXjMJmijlk2O8ww9k4X/25iPdoIls3M4fXwQt/GfP+m8mP5FJXXm6
I7ottPCcsl3f7KGJFtud7esDrfXNc+ue3oEmaj7pRc/Vv5CFR5ULdUmBJvX5
0prynX8jC5u8fZk5DVrre4fdm478g6z13Y4tbh+FJvLe07HtS2jhxofS7KeW
IRPd6VPn4CJo4Rs+trHB0Nq80x+zcxe0sI1r9KlH0KRc9e3f1f6HrFMX8q73
bAxNqm6PzH2toYV1dw6U9YTW9q1p+WMnoIXLO+8zaULjgEnZZ/kad4DW9v3T
AJ0rNNHTm3Vmh0IL929cq+c2aKIlrRv7nCiHLNzHwcSKyiOTctR5LFkBrZ23
Zi39fkITHT7Q2sZID1l428vO4UugSQW7RteIg9ap7LUXJmZCk/qklzP5F7Tw
mqUzD/yGJmXn3cKuVkVk4TrXbh/1hya6ZGTbJlkfWZtXfQK23oYm1eD94AFl
0MLHDeMyauuQSZ1vtOnrMGjhWnqp2fOgSW1aUtwyAVrY+sck/bPQpNZ2/le+
SiVkYf9aZi2uV0bW9l2sT1wzA2Tt+dqnD7OEJioNCtvepwqy8P5DFRs7QJN6
l1hl4HFondrlc3zoA2hSrxqsC4ytiizs5b497B00UeVY9+Rn1ZCFLUb1K9tU
HZnU5Ssxs7ZAa3l3ZqfB3Q2RiQr/5dTbVgNZuN7nNq+SjZG1zyu61sHOJsjC
00dEjuxZC5lU5KjP/mOhhYMvJdg+hibSn3eCjWsjC8/YHLonFJqoqkGBnZkp
snBqjbPX+kIT9Ws6YcZcaOGbZZbdjkITjdnfx9XeDFm7L9M3zL8DTWrE3CPV
f0ILH9jxLqxyPWRSMuL5gh7Qwl0Sa82ZAa293pazx9vWRxYO8e1xYxw0qUqB
bUvDoIVPVLZwHtYAmVTuz19d5kBree1Y8sc90ET/dSxfR6CFjZcPbuPZEJlo
0I0Ky7o3RtbOu9GgvM3QRH9P+p3+CC1cpbpZXpcmyESd/Q/HqKbIwi3mGZTY
NkMmlVznfjZDC98rv7ihJzRR92FeIxs1RxZ2NLjeoR80qX7V43wmQutU+d0B
89dAk1rtYHk3B1r42e21XnnQpEad/6Z7Dy1cc+C3ZmnmyEQJU3JO50ELX5/T
/lQZNJHvBe8TNVsgCx9+6akcoIkiMrJ2ToIWPjhr59FOLZFJ3XMb/WwMtLBl
jt1YT2ii72N8FsVBC69dFzX7NjSprhmLt5VBC++MnjKnditkUssDH5wcAi2c
ZjdnZafWyERNDo4/tLYNspY3LneMFmiilSnbm1Vri6ydl9FpT52gSR1MfHNx
BLRw4aJ5t32hSW1MvThvAbTw+XZVVq6AJjWy57jNe6GFh29/tFZngUzk86e9
1bZ2yMLqR9PtjdojE51KHvROQQtL/TrX+kETrWlxwdPNElnLy51JV70DMqku
k/QfOEFrect6zH0PaKLRnk/WZkIL97qz+p2fFTKpqgsNBu2FFr40rUp+DjTR
2UezJ/bsiCx8+rDLtC/QROdWrD28uxOycMqb6EhdZ2RSjWPv5LWEFp5lE/h6
GjRRjzmRC4KghUOPPj6UBk0UHGJ6+aA1spYX6w8d9x6a1J4GfplOXZCF7SbN
dFgETVR3dELEXWhhm+a9v/yEJlplcftfr+7Iwn419J6EQJPqtDvhZii0cKe7
u/7lQJNqd31qTpUeyMINPYssJ0OTujMgdtQ2aO283nvurc0UYKIaN2+Va8XI
wr86zqpmCU3q0BDTCq7Qwln3Xk1drJC1ebd0mlsktHDjpnqHvkJr5/VT83lT
eyELD8z9ZnUWmqjLgze/Z/ZG1vJu8MtWH6C1fXvlfOhfaOGozX6drfsga3nJ
wMqrP7RwP48XrZ2hiV7XNWx0HVrLO/aB1bv2RSYysL/qfQlaOOKuo20WNKmJ
Xjs7uvdDFt5jt37XXWiivl6nU79AC3ee3LHMxA6ZyP/qpB7NoLW8k9resSM0
UXTvH3V0/ZGFd/cYTl7QpFLGZztdgNap672amTyEJnXAK/zVK2jh/rEro3T2
yER7rAa6WjkgC1e6ubhqJrT2Fb/I4YsGIAu/mVc35R00qdRBk1t8hNb67pKD
nuYDkYl++Qw/XggtXJz1YfZ0R2RSpcE72l2BFvbK+RqPTdTKemybT9DCTZ9F
2tUfjEz0KnysBA5B1uZtjcDwBUORSZk26iiroHWq0eS9wTugDdXMl+6hu6B1
at/XnGU50IZqcNbkOzegdcrd13HKfWhDlZDl99BkGLKx+lu5fHFDaENVPNvA
dyC0ToWNc4kLhyZlkG2x9TS0TsUNLp1lOhyZ1J9a23YvgRYum1Mp6CA0UWWP
5xeDnJCFL67L7rYcWtsX0wIn7IEWfh0ckJcDTWSjcnqaOiML6wc4jsyFJro3
b2fDIBdk4THZNzOyoYkaT3jQK28UsvCFuAvGutHIRCN7bi5sOAZZePv2s2Uv
oIlOPsloosYia/dtQWbYEmiiT1kPIkJckYXr7Vv9eg800eS0e69145GFW/wL
Pb0RmtSTZmcXJkALX+t6vnUqNNG/fQWeX6G155s0OsdiAjKp5qXhlwdCCzfb
UtEpAFrb17mZA45ACw8YMaHbdWii3zxo6VtoYbfXidVrTUQmNat5/gEraJ36
Y1ejqw20oQrw/OE2FFqn1rU0uLoImtS6mRUb7IIWLtg6+OVBaCKrs5b5v6G1
vBfpt6HFJGSiow2m1Go4GVk4NmxZm+HQRHHc6UKrKcjCI5uHrF3sjqzNK173
WnkgC687FFp8GJrItp7pnm/Qwnn6qU/NpiIT7eaWHs7QwuETLLyNpyGTuvy1
6L07tPDT2ebjc6GJMheutS/niSy8rKB3UgA0qcC/M733QQt3bfRy511oUvWb
uHj8hRZ2OD55e9XpyERtkhOMlkELl69xze41tNZXZntefgstPCix5rVf0ETz
jm1cX8ELWXiiSd6MdtCkbkzK3YMtzK0vdO4LTRRl1SFvO7Sws0Gjrk1mIJNq
zYt/tIIW9oir6b1iJjIp18JRi3dAC2903Dm73yxkokj97PUe0MIZfm/TY6CJ
iiLPNrk6B1nLKwaddzf1RiYK/hXefxi08JGUH3NifZBJuXz/lnsLWriOofkg
/bnIRPfb8+Nr0MJSp/6gbvOQiS4877pjGLTw1ErlY3ZCEy2o2P77a19k4Yr7
9g+r6odMqsxh50YjaOGxwUtdbKFJrbE8eXoAtNaXupbLnQFNaqNLdd64AFk4
83b1/K3QpLqmhrfaAS38u7H70cPQ2rw828klE1p49N+dj8wXImt9yf3uyD/Q
wkXj8q44BCAT/bk0bvrARcjCNRL/VrUPRCZyHn3O5/ASZOG4eUmbc6C1vj+q
4eCX0DrlO7m2wU9oUvObtXlWBq1T88clTmoWhEzqUuc9T9pBC2cFFl63hCY1
6t7nOjehdephqwtGedCkuv/9s7cYWviL67KUdsHI2lcMPo5dCC28srGl035o
UlnNtz48AK2d10Zr7iZAkyqMcPlwAVqnSgsNd92DNlStx87xLrcU2Vj5jX/X
3PL/8/8B9wB9qQ==
      "]], LineBox[CompressedData["
1:eJx12Xdczv/3P/Aj6yISIiozWUlvISvOE0lW2buEkhHZMisjQqEhRVYUkpUy
EoUyyoiQnRUZOfZI9X19fn/9/nlc/7jd3a7G63md5zmPc6vJJO+hHnpElFyV
6H//hicdS++8cryi//cyUv7Hfs3rAW2ofJPLXVwLrVOTJ6+vngVNau+sP9N7
r0IW3uxuVdoPmmi7fZy/B7Rw+7NLSmdCE3UbWadk/WpkYdUn+ZHJGmSi0wb3
h1VYiyz8180klqG1M49L2J4ViCz8elKt3ebrkUkFNb3h6gEtXLj/eunIDcik
Kq+7XTYaWrjRIs/Iz9CkGqU5LvsFLVxuRnys80Zkoso3yotnELJwqzdZIdHQ
pKrICufL0MJDjBL3PIMmOhD74NA3aGEjkwurawYjk5p1qSi9ObQwRcdWc4Um
aj9mpEPnTcjCM8+nuL2GJvVpSbyD52Zk4YNdbHeGQZOaYznveSy09ryr6gcd
hSb6qm9Y3mcLsnZfdx0NfAdNFFf0IHxCCLLwKb38nTHQ2u87q2RHNrRwUebe
79+hSXkZ1EimUGTht833pK+BJqrYPv7wDmjh/c0O9L4KTWpQ6GXnP9DCz6Z3
besahkzUtUHHV9nQwrHJfnfMwpGJkizq1ImDFu7lX6fpH2hSEc+3VKiyFVl4
e1lf//rQRA79Hhl3iEAWTl/aprMTNFFb97RzYyORhfUWtx40D5rUeEeLcQug
hYOWfo3whyZqkxtW0jkKWTtvf+NRSdCkTPyuJmZD65Suj1uzHtuRSbk9PbN+
BLRObVhr7zULmlRkss3MAGjhHZOqB+6HJhrsuz67ezSycNJF57oKmihkmmGg
N7Swm/HT5Cho7b7sXuC+H1r4S054UgI00dXMH9ap0MKHHy6Z02EnMtGOauu3
CLRwtP7eeVa7kIkCvbpX6Qct/PL4yUsToIn8XfoNXgwtvKL+aveD0ETdk0rD
F+5GFh72Ue1L2oNMtP5rP70ve5GFF1n4RO6KQdbO66eVy/h9yMI2vRZPC4Im
+n5S/9hZaOHS+629z0OTup1cVPc5tPC560cPVt6PrPXb0mFdKQ5Zq/eoUXU6
QRMNd9p4uvcBZOF3lrL5MDSpzaZNzqdDC3uq3KjKB5FJPbyx0KkttHDw2N+f
N0GT0h2dEPoOWrtvbsNPNTmETKr98ladrKCFm28zWTQWmpRf1NbqC6G1z/v8
ru+W8chEdnoP9GKhhf1u9b1XAE1U93nQsgOHkYVzD75wiUtAJjXP/0Kdu9DC
1m6PVT40kdXS1iX9jiBreTmo7feh0EQVou6cy4EW7mET4PgbmpT5opqNdEeR
tXrPtahSD5ro/dV6RRWPIQunLN+6sS40qbHDbg11gBa+c/bjKBdo7b7ZRvUc
cwJZ+Mil2gf+QJM68TTMXi8RWdjYYvIFB2hSztmxFy5BC2+cVnPyLWhSIz64
lHsCLTzqyKSLn6BJbVKlCxqcRBZu0eTevn7QRAVx/VxHQQtPf5ZlvRqayHl7
+pDv0MJ59y0vbUtCJvVyf+fEKGjhwFrt3WKgiW5MWnr1L7RwWvOcnxeSkYkK
l0evLYQWDiuL7qJOIRMlZLb5+xtaq9eTRg1qnEYm+h1sPG8ktPCHy18K+55B
JjqZNuCcB7TwZ9Nn/jugSWVW/fX1JLTWb989DWpwFpkoZXo5d5MUZOHhtT9H
NYQm+hfWq28StHD1yMaeOdCkrGrte1wErVPrariP+QttqF5ndq0zLxVZp3Ye
PflhN7Sh+nN/SXGf88g6tXd+uMdYaFJZ26o1mQItvDKl0bSX0KS2zXFJ/gWt
fV4lkwcbXkAmtTfs2t3W0MKzPQrOdoEm1WTLliEl0Fq96meY9U1DJvWi5e+2
Q6GFbzmbJHtDk3pu1zRmK7TwzuMfy05CE9XPz7iRBi18pa1Vux3pyETlN0/u
exJaeO/TJgsrXkQmZf04vm4NaJ06MSB8qCG0oXJcGJhqDK1TJV9WjVbQpI6Z
PhkzGFrYfsbOFMtLyFq/XphtPw1ap6iKbd4xaFK77vqrVGjhiY8ab3K6jEzU
t/+H+5nQwo8OemTWz0Qm1aqO3XB7aJ065m5TFANNqtLIiYXJ0ML/1kfFV76C
TLR926nURtDCax+WjWoOTXTsfjmPwdeQhWus8e/gDk3qwLzZP09BC6/etv72
dWiig48H3DDKQha+b5qgVw+aVOUjeTF20MKZV72eukKT+pl5q91UaC2vp7Vx
+QFN1GHVrXmTs5GFX6zw9wiGJvrc+Guf49DC3z079r4GTTRvczOHD9DCk9rs
te13A5loUfvVdbygtfPSa9RkOTSp+QbL+26CFpaa7xOdbyITJduVvbC4hayd
t9ejvmOhiTquXZPvcQdZOGF/1R5LoIlKHrk0LbuLrM2bQ2fqt8hFJjWmf5UE
V2jhKnm9w39BE/28bWjzG1q4skPLlAv3kIkmRbnPuwMtbPGppLPTfWRSrx++
GuAGrVPtn5eW2wJtqAyqVdkfDq1TA4Ie0Wlobd9dftrgB7RO1a7a0tLgATKp
s4OeX2kDrVO2Vy999YQmVXq2qPEeaK3fNjgdkwxN1G2ezvsKtHBAoN2Gp9BE
1nUtOljmIQtvuciLFDRR97QFJq7Qwiercu0l0KQaxW9NDoYWLtAbEmT5EJlo
f0y3gEmPkIWXfj4RsRyalE3Ng3/WPUbWqW0GkbvToUkNqmhb5zW0Ti2rOt61
4hNkbV6ZhjzxgtapSFk+5TK0Vq9On2NnP0XWqVmrK7p/hiZVofXRNN0zZJ3q
9H3CmRrQpJwzPz2vDa31i/kBlSygSd338jrVDVqnstvMqzQKWjvvV5mO86G1
fvtp5JYj0Np3PDx94Eto4bOD+ndq8xyZ6P7G2J950MIfK2d5bcpHJvXtolm1
Q9A6Zfqtqt89aFKPb/XflA8tvOl4IzODF8ikpqVPrWIJLfzEJy1vIDTR08Sg
3BYvkYX9G3gmZ75CJjVgiYn3NWhh8x5DTazeIBMtS3/X9QG08M29uzI8CpBJ
dXtjszcQWstLCZ/u671FJrLbMCinQiGycNxpdmgOTWQ61C61F7Twhiobr1R5
j0wUsMXilyu08HCPWSoTmujuSJf5cz4gCy/3Ky7MhSYavm2123+fkLV+P6ad
tzc0qfT6Rz6th9apKd3amO6FJtU1abmchtbu+/k23/9BExW9en1wZRGy1q/G
GdnYfkYmam3U3vwBtJZ3X3S65SjIRP8WbV20BVq4ne+sHaHQRNXiWm5d8QVZ
2MGn0olt0KR4W2LvKGjhS5GpJ1p8Qyb14ImKGgwt3Ofvhw7+0FredOlok/od
WfjN/P5Bu38gk4rodvXtHmhhsyLruWnQRP71wm4e+4ms9YszvbLH/kImMh/h
73EYWnj6lld2x6BJbQl0OZMHre375j+md/mNTHSj95sbg/4gCzc2mbal8V9k
Un/eFTg7QAs3rWH1dCc0qbw918clQwt39Iuf9gGa1ItjiwPrFyMLr3Op27kd
NCm92JouI6CFXet7+sVCEw1tZ/4mEVo46ueZUbH/kEnpsuY3Pgqt5eV6dp1q
lCATTYvs0bUMWri949/UcaXIpC5+5PPe0MLnQ79EJkCTetewxq8MaC1v/zFq
+xqa1JSdpi/MypC1vPpTL3sKNKkfa779XgwtfM16dGAQNNFHVTbTvJwLsPDu
p+nPFTRR0IPEanrlkYUX3RzypAI0UU5wzOW30MJhfd1mGVVAJuX2b+qPNGhh
w+XnP7WriEyqxaoVER2ghV+WG2LQE1r7giP7CkuhhTtZ/1zevBIyqZJPwc/6
Qgvf7vZfYTQ00bojB+8fgxaOvGPpeQqa1MRFJy4aVkbWKfMGd2bPgCbVuWar
X2uhhU3rNR6dBk1qvGWy/SVo4cCw8pur6pCJ2l8f3zwTWriSaWVD/SrIRDMM
q8dYQGv1atqpwyJoUt8bjrm0GFr4u0Xf7hHQWt63KTTNhhZuMfharn9VZKKZ
E4e2zIUWvpHWuNZLaCKveT2OmldDFm5rcafAGlqbFx9Xm82AFvboPbl4HTTR
7nw9i1Bo4X/zfQ0PQJMq6PHVyqI6sk6VmMzt2wKaVIIvhbaDFi6/PsXYCZqo
cfeKWycbIAv/GFW56Ai0dt8X5YcXQwuXhHbMbFgDmdTTWg0e9oEW7lL5sJ0z
NKnty6ZscYEWPh2afHEaNKmWJV1qLoDWqQluKwqDoEnp7550ZDu0cERy82o3
oUl1nPH53QNo4Qq54xp8gCZVbvPJGCNDZC2vx+WfmQat3Te3XzdPQGv1slke
f4Imsp6ytu3QmsjCk1cuvuIKTeSZfdcuEFo4NOk/v+fQRMd8Jvy5WhtZ+HL3
c9ed6iCT8uph8twbWjh8eK0NgdBErkFGV8OhhWO3X5iTDU103rHv8mJobd9w
fjzavi4yqR2vX0VOhxZuUKN87Y/Q//uDVUpZF2NkLS+2OX4nBVrb16LiJ3yH
Fo65ev6Arj4yKZMlW093h9aps9XtQ32hSc3e/d73HLROmR1a6CnQhsrIL/x8
bxNknaq69lesK7SW9zfdKH4Ire17Q8ttbG+KTHTCcf2WL9DCaX2t9fqYIROd
zKmvNxJay8tlL3Z8gyaV02K/edMGyMIObiWDWkOT+rYtdFMwtHBK6vWo/dBE
eyI+trgCLdzne3jdqQ2RSeV+ahe6AVqnrlfdcyUMmtTDHlN94qCFfwc9O3wL
muiK2ULHDY2Rhc2Nx7c8BU1Ulp/yNboJsvCodWRwH5roWkiC77tmyML9zz3Z
+gealOnO5dX0LZCFg7tkjGgETaS38P2xsdDCQ+zjD8xojkwqqMN+t2BonXp1
oeu8EGhSNSN7+X2CFv58rXl4+RbIRPfvjlzvCK2d98ak7cOhiTbUKRcS0RJZ
eP3ylvZ6rZCJDrR89FMfWrjdvqfLJ0BrecOgcNY2aOGhAy9PzG2NTMrmw+FN
RdDCXx9UsXewRCay+zD6TJwVsnC5yb9Ery0ykeXpwXsaWyMLH44LauQFrc1b
94y4m9DCXyaZms7+D5koIVlnnQUt7Fasb3YbmujO0dQvk9sjC2dn3vq6F5po
V6u+BjnQwk1vTfF+Dk109HTE8CcdkIVn8uriImiinEXPHPp2RBZ+M2dfxVJo
omrF6crOFlnYpkHFss6dkIleJt1ZVNQZWZi+dNhRswsyUWJAs3z/rsjCA8Ki
gibYIRN93hzWYBG0Nu88mjVKhtbmffOBNe9Aa/Wmy674GZqo1q08U/3uyMKP
im9G1oYmGj5wmlOzHsjavpvstdsPmpRLfxfeCi0cPVr/PxtGJuXrfDGjM7Rw
VpWzNkehSdn7trp7Flp43owGcVehidzSv/5s3BNZe94+viktoYkmj8tPMe6F
LPy4fdb7jdCkvFv8SjgIre2rtSe0cOmNTGTzx67aEXtk4XU+ay//gCbanLe4
llEfZOHu2yMXdIQmisk5bnsMWvhJ0JEhrR2QSdXWbz2LoYXvznOeMRWayGjb
+i/5fZGFPXxtm5VAk2qoc70Z5YgsPNtywoxj0KSMHSZ9M+qHLGw8tUXtZtBE
RdV2TPvbH1l48FXDbsYDkEntPVf0uCW0cGWqUbENNKlOH142WgEtfOPEsMBo
aKKuJ1O2lEBr933H51F9BiKTejumpNIGaOFLHj2vxkOTqjoiul8qtHBxyJ09
V6BJJd4a4n8HWtjiecB0u0HIpP4+z18wDFo4c8r5TD9ook0jXPssc0IW/vVr
1eMkaKI1FX7PnuCMLOw9+/qpeoORSTWb7XC3KbSW92x/5ntCkyrq/dP+ELRw
y3xjg1fQ2ryaYXvvC7Tw2zGpX7CJ/hR40pwhyMJlg2+MXA+t7YunRs05MRRZ
y8uDuugnQxPd2tjy5VNobd+rXPVJxWHIpA49yYtxhxZu1HpNUhA0kXfP6k+t
RiILW0a53rSGJnqePKGiyShkbV8+/WTZfGiiia7jXh+FFnau516p3GhkohTb
8009xiBr/f6/AeWKoYmqvj31uKorstavqk2cNwmalKt1mfV0aOEXBUbjl0xA
Jpo+rNg9wg1ZeETF+Bk7oUkdeHRreym0cKc9/nlWE5FJGf18/rEDtHDkm9x3
Clqb18Udqh+dhKzlrSmvtn6EJlV/RbLnF2jhnLZfnzSfjEwUseliBxN3ZOEV
pVMyp0ATlRzOd1jpgSx8YfLvJi5TkIkGda/erIonsvCMevmN3aFJ/Xn1x2IG
tLDdtroGsdDavtfLzfQBtHDp3D/T2k9F1uolJ/R3DLTw+uT3Zx5BE23ddzJu
9DRk4TrZqf19piMTPQn5ty4CWtho25tRdWYgE+nP2T/iNLT2vO4WZR5eyKQG
79JbvAJa+OB7/bin0EQbCvxn28xE1vKy4+c9w6G1eR3/N/Q1tPDh421vWM5C
Jnr6uHiCjzeyNi/s7YILoEm9ajWzRo3ZyMK7Q8uPbQRNNC5jZMssaOE9Tfu0
yYcmNdV+dO3f0Fq/6BXlbz0HmWjq0P0LXKC1fcdiUq9y85BJrTo6NWAZtHCP
15vsL0CTetAjPTsPWnhTq8uPG8xHJtWjy32D/tDCqwzM1gVCk2qzwbJrOrRw
QOi0LvMWIJOa3H/rvzxo4a19zkcPXIhMas5tWjQeWthlRSUDX2iixU3aXNiz
CFk4Ifvt9bPQpLqc71n3HLROeYd8bHUPmtTyEUtNS6GF9zsd/0c+yEQN+jVY
0h1a2xd7JkROgSaKfPb6Jy9G1vJu+/a2lZcgE5l1sno2F1o43mhlr83QpPZM
SKmdBC084dUG3xxo7b7P9G2+cymy8MUdM71vQxO1aG4xpsEyZOFtl3a8agVN
qkXilmpGy5G1ejuue/wCmtS87/ujzFcgC7/uOfPXeGiiGztnV6jmiyxsVqi/
wwmaqOWzLh2G+CELNzvcrfcKaFLei+3OZ0ALJ1o2jL8HTXTN3+OJWoms5Q3b
JRXcoIleVxp3pPJqZOHnVwc/sIAmtbjyigQbaJ2yys3gTdDavpkXdyYKWqdu
uBYk6dYgk0pa0zi8NrRwkZdaZQNNVLys9e3KAcjCeof9BlaBJjItmfbNCVpY
3g8asBKalG9s6p370MIUGZKtW4tM9LHZ7j47oIVrrau/YPo6ZKKRo/e6V1+P
LDxvYI1b/aGJKtW7krMVWtt3ci5O2wGtfaL2FSt124AsPL5m0IpJ0KReb13U
KAZaePnAtg5x0ETlO67422AjsvCHoL8fOkGTOru7RtRoaGHX24aztkGTMp+9
1SMeWjij11STRGhSlzZtufMWWvhzZKXWX6GJKmQWL60QhCzsFZurZw5Naveg
WcnYwsYvwt2aQRP9u+9v3zoYWTitWbuZ/aC13/fJ5w61NyFr+1rPtz/HQ5Mq
b1taMxBa+E2/5T7boIma6K+c8xpa+3nz2y6/sRmZaPqPZx4PoYUb2Eq/tluQ
ST0PC1g7BFr41GOT0RVCkLW86HBuYiNo7efNMpy6FJpUuY39d+6E1vLey2Xj
fkAT1W7c/HKVUGTh/l0PL20KTfToXY2H5cOQtX5ldo/0oUlt+mDQ2BZaeLRF
/uwp0KQs2jS9Ox9auJxZWuW10KQcKsqmXGidkq73276BJtXKf2aaUTiyTuV9
OPG4OzSpCoudmg+B1j7vr6USAU3UwyndJx9auNPD87N7b0UmqtxjfP0+0MLR
Ey0dlkNr9Rq1rmQ7tPDk7LZ8EJqUdd9Vx39A65TDjQlPZ0Qgk9r1qsq1tdDC
85dmLSyAJnL92TM4ZRuycJ53i2pLIpG1eu35ZuJxaOGZY9YtdY5CJrU3KdJz
H7ROZQ/qqJcATcq5e6UO56C1vDWopOptaFLRgRO75UBreefvz9KQ7chEL5d3
rHkVWnjUwqig2juQiczPNw0yiEYWbn7BTFdpJzKpVRXNbdpCC7s9Pz5uDTSp
iXq61xuhhQuPTzzzdReyVm9fj5uUQAuPefkqY/tuZKKEZTGph6GFxyaXHcqC
Jtr7ZG9c5z3Iwu06hk4ohSZVLX7Qrol7kYWdjKy+x0Br+96tz81uQAvfs635
1jAGWfufX+bvA6G1vJT40icLmtS4mdnDvkILZ8uQJY33IRMd8s3oYLQfWXt/
uF9ta2iiAUF9R2yHFjaocqB4NzTRA+P5O6vEImv7/pu9Pc9Da/U++nT8PWjh
d6v2WD6KQyaVmVX8uwhaeFpWi5+NDyCTanLA8Xc0tHDDAuv6qdCk1vwNbHkN
Wrjgw0ive9CkMgYu++8ntE55v/68rBSaVMrZdc2rHETW8sKWToOxSd1U0xp3
hBbOqjz6v3uHkEkVLu6SaxqPLBw4/vqpBtBEhVMdfjSGFrZ+3NVvNbSWl0ZO
bBUMLdx90o6+xoeRiczK1v7LhRY+OiCrYccjyET17lgeiocWjmo6cYLFUWRt
33ZqvNX7OLLwYpvwWx1OIBP1M/MxLoYWfjHPYNyuRGSiTQXzr1meRBa2bXfg
+whoUm+2Tu4UAC3c4Z1n+WBooi77/LbrJyELpxw3i7KGJmq0NHreAGjh24d/
DpgCTSp40sRyq6G1fj9t1sCv0EQLLlWKDz+FLOz5a45JHjTRwLSTDVecRRau
e7a0+SpoUmZVczaHQAsHvej+Ix6alM/Y9r7J0MKvK/rfq52CTDSuYo6MhhZ2
jB7ZxwuaqGmQ+SLj88jC+ucvf1HQpLYnbjHtCy38tOG4DxHQRJk8KToXWjjO
ffQZgdbm1Wxz5zJo4XoLQ8MrXEAmyi6f1v8btPBJ6+jupdDavna065Tqacja
vC4bfcwemmj+4U52bdKRhWuVzx5hB03KIOig7y5onfJJ97iZBE2qU/U+7y5D
C+/ZsNj5+EVkorwBF8ZfuISs5T2TYzv0LiMT1fT32tznCrJwsuenlgeuIhNl
XLK0ewwt/NbxctdX0EQBgQkN711DFjat1vhmHrTWL9reqPAUWrhsxqqJXteR
Sf0X/bjPAmjhgIENli6DJmrxo8XpnBvIwhvNr1g2uIlMav45r0W9oHXqrDWP
cIc2VCU9bA8HQeuU4Y6pgRtvIZPqmWz9cA+0Vu/n/KOuQRMNdf8S+glaOJd/
VK9/G1nbN/ZbX2gBrVP2br8zxkOTulEtMd8DWnh+vTlOC6GJlpr0e/QkB1mr
1/l6LWrcQSb1Ka7ogRO0Tu06XLv+OGgtrxvFl3pB69SRrd8dl0GTqv3d3fwA
tPCJPZ+GvoMmlZ6xqfVvaGEfa5PQ8neRiXZ1c9k/HVp480ebmJvQpI51Odez
XS6yTlm3SdefCE3KqEf33dOhhXuWFD8IhSb1cnWw5yVo4Z8Lt3zrfQ+Z1O3T
5ocdoLV5HXHF9Tg0kddNz6QR95G1fcEqedg4aKLcsLUlYdDCztNLEt5BE5mO
tf544wGy8ByXvINl0NrnfazC+/yHyMKZ+jlH3kGTmiLjr3Z8hKzVa6HVT2do
Un/HWHSfDS28PrL42QZoUkGtrZpsgRaeu/ptaLvHyESf+tl37vMEWbjm4DvL
TkCTGnjh3car0MIzZkd26/oUmahNYNI4X2jhhIsnj1Z4hkwq7++VufrQwm/a
H7k6GprU+4TLlwKghf9sW3RkIzTRf/nD952DFk7/Ve5KxefIRFetWnxdDS3s
G1454wY0UdLEP7MW5SMLX1zBmaNfIBP1yhicEPcKWcvLOwKd679GJvqxzvOa
zRtkYT+n1+vGQhPNLbz5wg9a29eLvbN/QBMNc3eq61mALFw/+N29aGii7bvH
/x70Fln4y8VzphuhiX7Z9u/4BFp4UVurJvQOWXslF64aA63llY71W16EJhVj
t3XLVWjhcyGJIVUKkYnCuk16uRJaePjG2y1qvUcm5fp0yuvp0MJndi8Z+hia
1Okn9x+9ghY2Ku94/A20Ni/NZwa2/YAs3HDLM9t20ERmideOREALu0d+vPMN
mih99Psn+UXIWl6/1Xf26c/IRBf77u3TT5CFyyVYP8yFJrVnZFDIe2hhs30b
3f9Ak9pfM6dqCbTwiGedLKt+QSY1dcimwTWghUsyOjToAE0qd/KpbwOhhatn
2c6NgiZ6ubZ/n7HfkIWnBKz5Nhma1BqTjNezoHXK1t/LPgyalMcKtxKD78jC
OoOoHGdooknfP/qshBY2/FS5Ue8fyNp9vdPvYAG08MsxA7jjT2RSgwPf1/KF
1u77vWcvN0Jr+1Z675nboIX3XbD7sg+aaP4G72dBv5GFJ3cc+aL+H2Qim163
+96BFj7fedjvLn+RidLs2SGrBFnYtgYtyoEm2mTYqaeDniuw8OBr67P+K49M
avUZD/320MIDQsyc9Sog/2/fyQ/WQWvzbvMIz93Q2r5ZzzH1GLSw0wr/0nxo
UqMDWrh8hhZu5tuzRYeKyEQ1Eq/231cJWfjY/BsBqdCkQgd3z/KqjCzc+kq2
WTQ00YmzsxecgRbueLdeRgo0qa+dasYa6ZCF7418NMEKWpsXR+e0PFYFWdh+
l0VgDjTRLMfJanVVZC2v/vewRik0qW35lxlby5tzVsT210cm2upkuT0EWvis
57cd26BJpQ5p3+A9tHbfvw769wOaqNHWVefGV0MWnh13oK8fNCmTN4fyA6C1
eZEzLj4Fmmik+0jde2jhkB9mlY9XRya10CdGdxdaONg7YusbaKL3BzcZNjZA
Fj4etft8B2hS0b8tqi+CFv7RK91qMzSporEfzh6HFo42WBWfBk10c8OSBdtr
IAvfeWA34DI00dC0BIPeNZGF18wPmTgLWpvXbzNC1kMLH/QZwOHQpKoNXFVw
Alq4507HixegibJerCpuYYQsfG1NjzrjoEkFrztdaQa0Tv1X3eHePGhS85My
vp6CFh7j6WVoUgeZ6O+YR6Gv6yIL54ZurN7IGFmbtzuDs22gtbyZP+lfB2ii
dRfvmftCC49enNi9fT1kUuudiiu4Qmt56Ut5FQtN5PMo1qmyKbJ2Xn62FUug
idrbd/cNaICs7RvtzmXHQ5Py6+w58x+0Nq9Gxmx2aIis5e2ff+qHQGvPu0h8
6zZGJqqc+zmwfhNkbd7dm/92EDSRe4Sn5Wpo4WH5vUpzoYn4TP/ZbZoiC/e+
UPDOCprUsr3HvPdA69TSP/viC6EN1fUj/slfoXUqY28nu4rmyKQOFf5p5wit
5a0FoV9MmyGT+mCeLObQOtV0ZUu3rtBaXqw7OyQKWvjqvy9xe6CJyooH+hVC
Cye7uIaVs0AmVRjmXskaWqeafNmpNxha23f7f109FVr475dOm29DE51Lark2
uDmydt+mr78fCk2U2bTCf3YtkYW/dg8uDYImKijdllO7DbLwruKoEx2hiap3
mj33oxWysKroE923LTKpyt3Krg+G1qn0njWuj4UmtcTo9eW50Do1u0LEynPQ
pBru8ZtkZ40s/KrLTZfq/yGTqhPw44kPtHALgxvGidDa63hCmGqHLJzx7eaj
Q9Ck5k58tigVWvjtkSW2w2yQiX46vJyyrj2ylvcb2swPgiZlHxO2Ohha23cS
neO3Q5Py6rUrYje0cOKwv9lHobX7mnL/YQq0cELUd+d6HZG1+zo0oMAcWvhF
+rOFr6C1vLDGJOA/W2Thi5adjf2giWYeNn75Glp41OSRHl06IWvndf1D4Xho
nbrw7djuBdCkjvRqun4ltHbeB6dWOgNNlNrydXRUF2ThJUceJO6H1vp9vyyz
Rl2RtX6Vmh1iAU1q91ebBHdo4erXkpOwibp2XvPjRDdkYUuzux450ETDzqfv
bWmHLFww5dzJjtBEj5vU8fGHFr5vU+9QMDSp6WGD/Cp2R9apN/pq9VxoUoPG
/dA7Di1cLda752VoolrR/wr690DW9rVOwze1Usiktl/b08MZWtivWhfP8dCk
0iau+DYXWqcCZl5aEw1tqPxnpJucgNapqhsX59+HJrW0QbydcU9k4XSXObVN
oImOrh4e49ULWbjJy4jNftBETXZMm7oXWrj4WejkNGitXyfO0ZVAC0fYrj0x
tjcyqQaF+eumQwtX+Hhj43JoUud/eP7dAK3lvdCdlYbZIxN98veJmA4t3CUl
J2cZNFHEwiaXQqGF47Z/v5cNTXTX2ulHsz7Iwp92nb6UDk30aPCK8TP6IguX
GqdFXIQm9X1c7ZKGjsja8/oFb7aA1va1QUbnL0ELP1y9fcMDaKLwhcZr9Poh
a8/re40WQJPqsuXj0a3QWl6ue2Cmc39kotvzXdRiaC2vDRrzfB00kcvm6p8X
DkQW3rCgvX8UNCm7oyMmpkILR2cmJV+GJtVk5LeWhoOQtfc/Cvw+DJpo2bK8
xGvQwrHVT6Z3d0Im+v3pWMXEwcjCC8sFNjwJTbTa6r10GIIs/LjDCIc90Np9
HeuXHAMt7Lhj48QiaKKWt12GlkALO3epbGw4FJnIM/Z9ze/Qwtsb7A9xGoZM
VO5BwLdAaC3vx95ashma6PXV+2fSoYXbJ6W+GTccmaihWt+i2ghk4VrjN46x
hCZ1oL6tdS9oLS/3K7pwEpqoS4seqbeghUMdVjywGYms1ctXx836o5C1vJGV
mmQATdQ8/dTB6aORhecfNLLMgyYq3+f2lKljkIXPxfxyCIImqnvOvHkytDZv
Czxqn4YmGvvvwEXLscjCmcaZji+htUTypPDWq3HIwtM6rDtXezyydt+bTPpW
F1q7758+/2rpgkxqjssJp4XQwoWJS0IuuSITTdjQIrbOBGTtvAsiIzZBE039
4J/mMBFZOIsK8xyhSV1fPsp9ELTw7Omtbd9AE723vzV44iRk4TNBh689giaa
M6npA5qMLNzZcZhbG2ht3zP70mgktE79DHEMT4U2VCN9PQ/dg9by7pkGRuSO
TCouq97L3tDCNoEp6c7QpGx+36q2HlrrN7emVtSbgkzqYY136wyghe3Xj5u2
DZqUwzBjuwRobV7UHP9onCcyUYz+l7Jm05C1vH+n37iZ0KTCHdvWjYAWbm0/
KCANmlSy3ocqWdA6NeeN56pX0IZqzoukGu+gdSqjZzvfStORDdVj74INTaF1
auBV03CGJtVs1O5TY6F1yjBhwJxp0KSGfeg9ew208Izil0/2QRM9VV1P/JiB
LPzoTWn6rpnIRNenT51Sbhay8Nbt1suTvZFJvapiOSkXWqfOmA42/gttqI4M
6ryy3GxknTKI8rLThyb1JtLtbBNo4S8PZ5RrB01kNmTrlSpzkIUzDi7wqQNN
lLnj+uDn0MLWlqc6v4QmZXi4495f0Dp1amDYtzJoUvsGLDjQdi6y8J1lXVNy
oYnmdtxjeQ9amI91H1JpHjIp2+Q8i6HQwu3s01rthyb6ZvI7bO18ZG1fqJ/6
tBCaVKzbEcPGC5C1vLV8Z2EqtJa3zJqndVyILHxtZpr3PGhSZ/9dTs+BFu5U
3vGR4SJkUlvKpuZYQ2v76lqvlDHQpEaZthmwHFp41qlRu/dBE32ll76/fJC1
979/vr3eYmRSeWuelC2DFs4p6jzpFjSRW79XFk2WIAsf7uO6xgpa2zer7p7Q
HVo42MQh0wua6FI/n6OroYUH9+pUEA5NdDflS8Xuy5C1eknc1/cNNFHFGsdz
eTmysMPXWvsdoUkNyragCdDCV/YUhqevQNb6FR1xrOmLrPWruTX7noQmFWrt
5HQaWvh3VqT/RWgi70j9IT1WIWt5x8D7GUOTGjrAq20faK1fX/f4MQia1C+9
VjwUWqdyO8476wdtqEwLuwauhNapsAJv/U/QpJzIvLbpamThrnFJeduhSY1/
9VZ/D7Tw89rHbBKhSb1vRx9eQ+vU860xEyqtQTZUcb++pDaF1inb3LN/m0Nr
/fJ58Ije0Dr1JCNwyHxord/FtP+TCi1c1O181W8ByKQSU3OKaq5FFj6Qffrt
NmiixjEZEbnQwvcHBB/4B020JDb8o+s6ZOFEn+5dygciE4Ueettq4Hpk4epL
iiKvQBOdzRuT0WgDsnCtzqX9/oMm2u+/4GOjjcjCAesXV/GG1vr9Dst+bYKQ
hUfVN1hhFYxMdHzsNZd20MImn1yy+kMTXTAeXzVhE7LwtJCIrinQpNLKDu/8
DS2s18+/SH8zMimL8vHRtaGFKxm53O4ATWrnsgpOF6CFDWdZpV+GJnVs1PGh
OdA6dSBg7/mmW5AN1WerIWEW0Dq1aGXO8AHQ2rwec7S3E7Rwl4Vpy9uEIJPa
5nihyxxo4U39tjVNgCb1d8b3ReVCkXXqb+s79pbQpFqbhU8fDS3s0jFvwkpo
Uof3Pgh8Aq1ToXdO/8yHJuV3+F3eW2idOpk2bohVGLKhqjnIu4ChjVSPkZ1a
hkAbqlu1TkedhDZSD+6t2v8Z2lDF3E9tTeHIOhWyJNbVCNpQlS22uVsPWqd+
xc/1WQtN6vSmMVFXoIV7v+346yO01u96XA5rvA1Z21fOXHsbEolMKt3PfOx+
aG1fjbt4+TI0qTo++2q3ikIWblKp96P+0ERXJrp/nb8dWdv3hta913MHMtEw
87DS7tHIwkfXtnnRA5roebembveghQNfzRj1FprIPaFWnyJo4fgqQzv334lM
arJZ4JVV0DpVsFR3Zj20ofqQUXwqA9pI3ak6Vy/7//P/AZX+L8I=
      "]], LineBox[{{122.4894413533422, 5.}, {122.49961676978299`, 5.}}], 
     LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 124.1415509782402}, {0, 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.71782998249225*^9, 3.7178306175437517`*^9, 
  3.7178308043977404`*^9, 3.717830835994194*^9, 3.7178385949456186`*^9, 
  3.7178414889763875`*^9, 3.717846827886758*^9, 3.7186814559531145`*^9, 
  3.7186815258822308`*^9, 3.7186815987895427`*^9, 
  3.7216543932091827`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
ymk3q+YZQ45yE3X0x0uvv9cM1aUjM6QDZtl9rcNdujDboEmbSfRT8pfIbNHn
Uo+Y9VZwOjryVtCfVtJpXXXzfr8y3XqKz8WakH2zonOllHPvSInXxSYrN4Eg
57zPXXxtdE01ZK0rqaGfbv7PX3ZpKI34wWNO8/raccOORzVvWRJDVc7Lc7oq
ytr7zKt3+0tim2mKycmUjulQ0mOJVpPpJO0+aiMshH6w2x/HFVeSFqKFK120
Q1ds2TcxwVp0+1FWU5/KS4m7jrzkEShUT8oNCOEgHIQTC8f9OKsfwlSqzaDd
QTgIB+FkCyflg3TkgTyQB/JAHsgDeSAP5IE8kAfymBl5uP8ZQXVhWnf9zwho
A228LbXBrQN5IA/kgTyQB/JAHsgDeSAP5IE8kAfyQB7IA3kgD+SBPN5i8uCX
HmgDbXDrQB7IA3kgD+SBPJAH8kAeyAN5IA/kgTyQB/JAHsgDeSCPOSEPfumB
NtAGtw7kgTyQB/JAHsgDeSAP5IE8kAfyQB7IA3kgD+SBPJAH8pgT8uCXHmgD
bXDrQB7IA3kgD+SBPJAH8kAeyAN5IA/kgTz6Sx7uu7+fvexHWEA1qAbVZKrG
7txZbbajK7LvbXjMBoQIB+FkCsffJVrVY3aJNopZbGP36ZGXiCNYjCgQxdwU
Rc6JQh/CRBhWKAOiCqmvvH74nbtarw6PNF9esW5U1lIjP7E83uXd1UMu2yDm
rfnx3t+3vn7zfm3xr7889GcZTQI+snrjuB3kbIHJ3qiqjTDt8acu//YeeR+W
04D063/bep8033zH2G/NAi+tNk65cgY5mcBq7tCVN+6T4WUMLZuNZECCOrms
1nz2ks33+kPLrveuZIvj3eatbA1bbpoXHNNh+6Z8l93rH/vaTfufv3jDLmXR
DlM68sWNuzUbeenU9nJRwpX8pXcXIwskiZcuWj+m3f7ny5vv0WhlBW6/6ce/
OhxmILO7qOfJtSt/tv/pQ1fcuE+jte/tXT4naQQDugxy6e7rQuG5JARsN71p
I62vv635G/lus6g1TkiRHMYi7oe/ue2A9JUzrw3H1/43rLusgV7zfNKEKWOG
ad/ni1egen3ZiCOm1K3BMNy90sxdFlIOjmy/X05JgaRYoT2M2QBKL1Vs7QQA
l8CeiMmw98qkacnxqbKuzFA42C5vXoPSphC514dHdobNGprWX8NuwpGddOiJ
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
\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"usuariosMM2", "[", 
     RowBox[{"[", 
      RowBox[{"origin", ";;", 
       RowBox[{"origin", "+", "width"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"origin", ",", "1", ",", 
     RowBox[{
      RowBox[{"Length", "[", "usuariosMM2", "]"}], "-", "width"}], ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"width", ",", "10", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "usuariosMM2", "]"}], "-", "origin"}], ">", 
        " ", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"Length", "[", "usuariosMM2", "]"}], "-", "origin"}], ",", 
       " ", "10"}], "]"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717830878534042*^9, 3.717830909324725*^9}, {
  3.717841509991203*^9, 3.7178415204711175`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`origin$$ = 1, $CellContext`width$$ = 10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{
      Hold[$CellContext`origin$$], 1, 
      Dynamic[Length[$CellContext`usuariosMM2] - $CellContext`width$$], 1}, {
      Hold[$CellContext`width$$], 10, 
      Dynamic[
       If[
       Length[$CellContext`usuariosMM2] - $CellContext`origin$$ > 0, 
        Length[$CellContext`usuariosMM2] - $CellContext`origin$$, 10]], 1}}, 
    Typeset`size$$ = {360., {111., 116.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`origin$2278$$ = 0, $CellContext`width$2279$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`origin$$ = 1, $CellContext`width$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`origin$$, $CellContext`origin$2278$$, 0], 
        Hold[$CellContext`width$$, $CellContext`width$2279$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[
        Part[$CellContext`usuariosMM2, 
         Span[$CellContext`origin$$, $CellContext`origin$$ + \
$CellContext`width$$]]], "Specifications" :> {{$CellContext`origin$$, 1, 
         Dynamic[Length[$CellContext`usuariosMM2] - $CellContext`width$$], 
         1}, {$CellContext`width$$, 10, 
         Dynamic[
          If[
          Length[$CellContext`usuariosMM2] - $CellContext`origin$$ > 0, 
           Length[$CellContext`usuariosMM2] - $CellContext`origin$$, 10]], 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {172., 178.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7178415213773575`*^9, 3.717846827886758*^9, 
  3.7186814559721146`*^9, 3.718681525984333*^9, 3.7186815988941336`*^9, 
  3.72165439331856*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"probPracticaMM2", "=", 
   RowBox[{"ProbEstadoPrac", "[", "usuariosMM2", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.717244459403047*^9, 3.717244468557831*^9}, {
   3.7178363196752825`*^9, 3.717836322253441*^9}, {3.717836512560477*^9, 
   3.7178365148119307`*^9}, 3.717836592543828*^9, {3.7186816849622407`*^9, 
   3.7186816919674644`*^9}},
 ExpressionUUID -> "8aac2cb1-2be7-43e6-9005-70ad26e1c3dd"],

Cell[TextData[{
 "\n",
 StyleBox["A continuaci\[OAcute]n, se puede observar el numero maximo de \
usuarios para una cola M/M/1 y una cola M/M/2. Tambien se puede observar como \
se reduce dr\[AAcute]sticamente el numero maximo en la cola M/M/2.",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.7178458686565876`*^9, 3.7178458810850267`*^9}, {
  3.7216544870772395`*^9, 3.721654617083579*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"probPractica", ",", " ", "probPracticaMM2"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", "25.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.55"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"probPractica", ",", " ", "probPracticaMM2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<M/M/1\>\"", ",", "\"\<M/M/2\>\""}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "25.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.55"}], "}"}]}], "}"}]}]}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7186817576217017`*^9, 3.718681762779283*^9}, {
  3.718681809496092*^9, 3.7186818146096745`*^9}, {3.718681859262437*^9, 
  3.718681901770241*^9}, {3.7186819397253237`*^9, 3.7186819514766617`*^9}, {
  3.718681994198822*^9, 3.718682177419656*^9}, {3.71868221826803*^9, 
  3.7186822438848667`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7FfWvvkTlXTSHirg8OL2DpWuTUegfA6Huf1+
OdsSDkD5Ag41EpFttzR3Q/kiDivlhBTNFLdB+RION+wFQ2583Ajlyzjk3Diy
2tp1LZSv4CCl8//NM/blUL6Swy471s9CyougfBWHF/e8n7A7zoPy1RzuMAca
H7GeBuVrOJRnv52VWNML5Ws5iHEtT0640ALl6zhEHV5dvP9nHZSv5zDln9Xv
gNxyKN/AIU/1qP/k+6VQvqHDn2nxj/3OZ0L5Rg510WIpX0qToHxjh1Be+fwk
7gQo38RhgeyFxLSeKCjf1EF3f9nWPc/DoXwzh/jPDx2+MYZA+eYO+tVz3ku8
DIDyLRykunOyN0VFQvmWDkKsDF4X7odC+VbA8Imepu7mAeVbOwjEaWtHablA
+TYOog1vHuvGWEH5tg6v7A0FC4yZ7QE9SnVw
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[{{1., 0.500308834827326}, {2., 0.3643180618943212}, {3., 
          0.09918683141386074}, {4., 0.026563170057270526`}, {5., 
          0.0070804103552939545`}, {6., 0.001871419951242892}, {7., 
          0.00047162417932693624`}, {8., 0.00017134325673776146`}, {9., 
          0.00002830406461998353}}]}, {}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7FfWvvkTlXTSHirg8OL2DpWuTUegfA6Huf1+
OdsSDkD5Ag41EpFttzR3Q/kiDivlhBTNFLdB+RION+wFQ2583Ajlyzjk3Diy
2tp1LZSv4CCl8//NM/blUL6Swy471s9CyougfBWHF/e8n7A7zoPy1RzuMAca
H7GeBuVrOJRnv52VWNML5Ws5iHEtT0640ALl6zhEHV5dvP9nHZSv5zDln9Xv
gNxyKN/AIU/1qP/k+6VQvqHDn2nxj/3OZ0L5Rg510WIpX0qToHxjh1Be+fwk
7gQo38RhgeyFxLSeKCjf1EF3f9nWPc/DoXwzh/jPDx2+MYZA+eYO+tVz3ku8
DIDyLRykunOyN0VFQvmWDkKsDF4X7odC+VbA8Imepu7mAeVbOwjEaWtHablA
+TYOog1vHuvGWEH5tg6v7A0FC4yZ7QE9SnVw
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{1., 0.500308834827326}, {2., 0.3643180618943212}, {3., 
          0.09918683141386074}, {4., 0.026563170057270526`}, {5., 
          0.0070804103552939545`}, {6., 0.001871419951242892}, {7., 
          0.00047162417932693624`}, {8., 0.00017134325673776146`}, {9., 
          0.00002830406461998353}}]}}}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0.625, 0}, PlotRange -> {{0.5, 25.5}, {0, 0.55}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.625, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0.5, 25.5}, {0, 0.55}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"M/M/1\"", "\"M/M/2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7186817637274313`*^9, 3.7186818154570093`*^9, 3.7186818655022936`*^9, 
   3.7186819024179354`*^9, {3.718681943803384*^9, 3.718681952213475*^9}, {
   3.7186820392471437`*^9, 3.7186821782147303`*^9}, 3.718682273823538*^9, 
   3.7216543935685625`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{766, 772},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"10.4 para Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 147, 3, 109, "Title"],
Cell[730, 27, 150, 3, 81, "Subtitle"],
Cell[883, 32, 324, 5, 59, "Text"],
Cell[1210, 39, 250, 5, 31, "Input"],
Cell[1463, 46, 285, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[1773, 54, 121, 2, 31, "Input"],
Cell[1897, 58, 1142, 34, 58, "Print"]
}, Open  ]],
Cell[3054, 95, 552, 8, 49, "Text"],
Cell[3609, 105, 236, 4, 59, "Text"],
Cell[3848, 111, 220, 4, 31, "Input"],
Cell[4071, 117, 358, 9, 48, "Input"],
Cell[CellGroupData[{
Cell[4454, 130, 343, 6, 48, "Input"],
Cell[4800, 138, 15494, 433, 239, "Output"]
}, Open  ]],
Cell[20309, 574, 832, 11, 106, "Text"],
Cell[21144, 587, 359, 6, 83, "Text"],
Cell[CellGroupData[{
Cell[21528, 597, 1458, 38, 166, "Input"],
Cell[22989, 637, 13443, 260, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36469, 902, 263, 5, 86, "Input"],
Cell[36735, 909, 557, 8, 31, "Output"],
Cell[37295, 919, 543, 8, 31, "Output"]
}, Open  ]],
Cell[37853, 930, 844, 14, 163, "Text"],
Cell[CellGroupData[{
Cell[38722, 948, 148, 3, 81, "Subtitle"],
Cell[38873, 953, 345, 5, 83, "Text"],
Cell[39221, 960, 661, 17, 128, "Input"],
Cell[39885, 979, 972, 13, 144, "Text"],
Cell[40860, 994, 202, 4, 48, "Input"],
Cell[41065, 1000, 257, 7, 48, "Input"],
Cell[41325, 1009, 1025, 29, 166, "Input"],
Cell[42353, 1040, 1177, 15, 201, "Text"],
Cell[43533, 1057, 280, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[43838, 1067, 955, 22, 86, "Input"],
Cell[44796, 1091, 12914, 260, 231, "Output"]
}, Open  ]],
Cell[57725, 1354, 603, 9, 87, "Text"],
Cell[58331, 1365, 753, 20, 106, "Input"],
Cell[59087, 1387, 729, 10, 106, "Text"],
Cell[CellGroupData[{
Cell[59841, 1401, 1086, 25, 146, "Input"],
Cell[60930, 1428, 12822, 258, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73789, 1691, 1720, 41, 202, "Input"],
Cell[75512, 1734, 3386, 67, 357, "Output"]
}, Open  ]],
Cell[78913, 1804, 372, 11, 48, "Input"],
Cell[79288, 1817, 1129, 32, 108, "Input"],
Cell[80420, 1851, 820, 21, 110, "Input"],
Cell[81243, 1874, 381, 5, 68, "Text"],
Cell[CellGroupData[{
Cell[81649, 1883, 325, 7, 48, "Input"],
Cell[81977, 1892, 234680, 3874, 233, 223610, 3692, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316694, 5771, 1046, 29, 124, "Input"],
Cell[317743, 5802, 2799, 56, 357, "Output"]
}, Open  ]],
Cell[320557, 5861, 381, 6, 83, "Text"],
Cell[320941, 5869, 946, 22, 86, "Input"],
Cell[321890, 5893, 2957, 64, 498, "Input"],
Cell[324850, 5959, 860, 20, 86, "Input"],
Cell[325713, 5981, 553, 7, 87, "Text"],
Cell[CellGroupData[{
Cell[326291, 5992, 176, 3, 48, "Input"],
Cell[326470, 5997, 17782, 352, 245, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[344301, 6355, 178, 4, 81, "Subtitle"],
Cell[344482, 6361, 499, 8, 107, "Text"],
Cell[344984, 6371, 1217, 16, 258, "Text"],
Cell[346204, 6389, 3175, 73, 300, "Input"],
Cell[349382, 6464, 3214, 77, 478, "Input"],
Cell[352599, 6543, 1685, 38, 306, "Input"],
Cell[354287, 6583, 378, 7, 31, "Input"],
Cell[354668, 6592, 514, 10, 48, "Input"],
Cell[355185, 6604, 373, 9, 48, "Input"],
Cell[355561, 6615, 646, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[356232, 6628, 470, 12, 86, "Input"],
Cell[356705, 6642, 17315, 356, 241, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[374069, 7004, 173, 4, 81, "Subtitle"],
Cell[374245, 7010, 411, 6, 59, "Text"],
Cell[374659, 7018, 623, 8, 87, "Text"],
Cell[375285, 7028, 2822, 61, 322, "Input"],
Cell[378110, 7091, 938, 24, 144, "Input"],
Cell[CellGroupData[{
Cell[379073, 7119, 788, 21, 124, "Input"],
Cell[379864, 7142, 13851, 280, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393752, 7427, 1360, 36, 202, "Input"],
Cell[395115, 7465, 2883, 60, 357, "Output"]
}, Open  ]],
Cell[398013, 7528, 898, 22, 110, "Input"],
Cell[398914, 7552, 575, 11, 125, "Text"],
Cell[CellGroupData[{
Cell[399514, 7567, 192, 3, 48, "Input"],
Cell[399709, 7572, 229249, 3783, 249, 222132, 3665, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[628995, 11360, 915, 25, 146, "Input"],
Cell[629913, 11387, 2575, 51, 367, "Output"]
}, Open  ]],
Cell[632503, 11441, 438, 8, 31, "Input"],
Cell[632944, 11451, 413, 8, 87, "Text"],
Cell[CellGroupData[{
Cell[633382, 11463, 1343, 35, 162, "Input"],
Cell[634728, 11500, 13684, 276, 246, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

